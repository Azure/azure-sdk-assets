{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/e2etest_test_28423736121_mvnet?api-version=2023-08-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.15.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "252",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:14 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b67e0dc6-bcef-470b-8476-e01ead5e0829",
        "x-ms-failure-cause": "gateway",
        "x-ms-routing-request-id": "EASTUS2:20240404T180315Z:b67e0dc6-bcef-470b-8476-e01ead5e0829",
        "X-MSEdge-Ref": "Ref A: 38BF92495F464015B1B95A02F871C2EA Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:14Z"
      },
      "ResponseBody": {
        "error": {
          "code": "ResourceNotFound",
          "message": "The Resource \u0027Microsoft.MachineLearningServices/workspaces/e2etest_test_28423736121_mvnet\u0027 under resource group \u002700000\u0027 was not found. For more details please go to https://aka.ms/ARMResourceNotFoundFix"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835?api-version=2020-06-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "40855",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": {
        "properties": {
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "workspaceName": {
                "type": "string",
                "metadata": {
                  "description": "Specifies the name of the Azure Machine Learning workspace."
                }
              },
              "description": {
                "type": "string",
                "metadata": {
                  "description": "Description string."
                }
              },
              "friendlyName": {
                "type": "string",
                "metadata": {
                  "description": "Friendly name."
                }
              },
              "kind": {
                "type": "string",
                "defaultValue": "Default",
                "metadata": {
                  "description": "Specifies the Kind of the workspace."
                }
              },
              "location": {
                "type": "string",
                "metadata": {
                  "description": "Specifies the location for all resources."
                }
              },
              "resourceGroupName": {
                "type": "string",
                "metadata": {
                  "description": "Specifies the resource group name of the Azure Machine Learning workspace."
                }
              },
              "storageAccountOption": {
                "type": "string",
                "defaultValue": "new",
                "allowedValues": [
                  "new",
                  "existing"
                ],
                "metadata": {
                  "description": "Determines whether or not a new storage should be provisioned."
                }
              },
              "storageAccountName": {
                "type": "string",
                "defaultValue": "[concat(\u0027sa\u0027, uniqueString(parameters(\u0027resourceGroupName\u0027), parameters(\u0027workspaceName\u0027)))]",
                "metadata": {
                  "description": "Name of the storage account."
                }
              },
              "storageAccountType": {
                "type": "string",
                "defaultValue": "Standard_LRS"
              },
              "storageAccountBehindVNet": {
                "type": "string",
                "defaultValue": "false",
                "allowedValues": [
                  "true",
                  "false"
                ],
                "metadata": {
                  "description": "Determines whether or not to put the storage account behind VNet"
                }
              },
              "storageAccountResourceGroupName": {
                "type": "string",
                "defaultValue": "[parameters(\u0027resourceGroupName\u0027)]"
              },
              "storageAccountLocation": {
                "type": "string",
                "defaultValue": "[parameters(\u0027location\u0027)]"
              },
              "keyVaultOption": {
                "type": "string",
                "defaultValue": "new",
                "allowedValues": [
                  "new",
                  "existing"
                ],
                "metadata": {
                  "description": "Determines whether or not a new key vault should be provisioned."
                }
              },
              "keyVaultName": {
                "type": "string",
                "defaultValue": "[concat(\u0027kv\u0027, uniqueString(parameters(\u0027resourceGroupName\u0027), parameters(\u0027workspaceName\u0027)))]",
                "metadata": {
                  "description": "Name of the key vault."
                }
              },
              "keyVaultBehindVNet": {
                "type": "string",
                "defaultValue": "false",
                "allowedValues": [
                  "true",
                  "false"
                ],
                "metadata": {
                  "description": "Determines whether or not to put the storage account behind VNet"
                }
              },
              "keyVaultResourceGroupName": {
                "type": "string",
                "defaultValue": "[parameters(\u0027resourceGroupName\u0027)]"
              },
              "keyVaultLocation": {
                "type": "string",
                "defaultValue": "[parameters(\u0027location\u0027)]"
              },
              "applicationInsightsOption": {
                "type": "string",
                "defaultValue": "new",
                "allowedValues": [
                  "new",
                  "existing"
                ],
                "metadata": {
                  "description": "Determines whether or not new ApplicationInsights should be provisioned."
                }
              },
              "logAnalyticsName": {
                "type": "string",
                "defaultValue": "[concat(\u0027la\u0027, uniqueString(parameters(\u0027resourceGroupName\u0027), parameters(\u0027workspaceName\u0027)))]",
                "metadata": {
                  "description": "Name of LogAnalytics to be used by ApplicationInsights resource."
                }
              },
              "logAnalyticsArmId": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "ARM Id of LogAnalytics to be used by ApplicationInsights resource."
                }
              },
              "applicationInsightsName": {
                "type": "string",
                "defaultValue": "[concat(\u0027ai\u0027, uniqueString(parameters(\u0027resourceGroupName\u0027), parameters(\u0027workspaceName\u0027)))]",
                "metadata": {
                  "description": "Name of ApplicationInsights."
                }
              },
              "applicationInsightsResourceGroupName": {
                "type": "string",
                "defaultValue": "[parameters(\u0027resourceGroupName\u0027)]"
              },
              "applicationInsightsLocation": {
                "type": "string",
                "defaultValue": "[parameters(\u0027location\u0027)]"
              },
              "containerRegistryOption": {
                "type": "string",
                "defaultValue": "none",
                "allowedValues": [
                  "new",
                  "existing",
                  "none"
                ],
                "metadata": {
                  "description": "Determines whether or not a new container registry should be provisioned."
                }
              },
              "containerRegistryName": {
                "type": "string",
                "defaultValue": "[concat(\u0027cr\u0027, uniqueString(parameters(\u0027resourceGroupName\u0027), parameters(\u0027workspaceName\u0027)))]",
                "metadata": {
                  "description": "The container registry bind to the workspace."
                }
              },
              "containerRegistrySku": {
                "type": "string",
                "defaultValue": "Standard",
                "allowedValues": [
                  "Basic",
                  "Standard",
                  "Premium"
                ]
              },
              "containerRegistryResourceGroupName": {
                "type": "string",
                "defaultValue": "[parameters(\u0027resourceGroupName\u0027)]"
              },
              "containerRegistryBehindVNet": {
                "type": "string",
                "defaultValue": "false",
                "allowedValues": [
                  "true",
                  "false"
                ],
                "metadata": {
                  "description": "Determines whether or not to put container registry behind VNet."
                }
              },
              "containerRegistryLocation": {
                "type": "string",
                "defaultValue": "[parameters(\u0027location\u0027)]"
              },
              "vnetOption": {
                "type": "string",
                "defaultValue": "[if(equals(parameters(\u0027privateEndpointType\u0027), \u0027none\u0027), \u0027none\u0027, \u0027new\u0027)]",
                "allowedValues": [
                  "new",
                  "existing",
                  "none"
                ],
                "metadata": {
                  "description": "Determines whether or not a new VNet should be provisioned."
                }
              },
              "vnetName": {
                "type": "string",
                "defaultValue": "[concat(\u0027vn\u0027,uniqueString(parameters(\u0027resourceGroupName\u0027), parameters(\u0027workspaceName\u0027)))]",
                "metadata": {
                  "description": "Name of the VNet"
                }
              },
              "vnetResourceGroupName": {
                "type": "string",
                "defaultValue": "[parameters(\u0027resourceGroupName\u0027)]"
              },
              "addressPrefixes": {
                "type": "array",
                "defaultValue": [
                  "10.0.0.0/16"
                ],
                "metadata": {
                  "description": "Address prefix of the virtual network"
                }
              },
              "subnetOption": {
                "type": "string",
                "defaultValue": "[if(or(not(equals(parameters(\u0027privateEndpointType\u0027), \u0027none\u0027)), equals(parameters(\u0027vnetOption\u0027), \u0027new\u0027)), \u0027new\u0027, \u0027none\u0027)]",
                "allowedValues": [
                  "new",
                  "existing",
                  "none"
                ],
                "metadata": {
                  "description": "Determines whether or not a new subnet should be provisioned."
                }
              },
              "subnetName": {
                "type": "string",
                "defaultValue": "[concat(\u0027sn\u0027,uniqueString(parameters(\u0027resourceGroupName\u0027), parameters(\u0027workspaceName\u0027)))]",
                "metadata": {
                  "description": "Name of the subnet"
                }
              },
              "subnetPrefix": {
                "type": "string",
                "defaultValue": "10.0.0.0/24",
                "metadata": {
                  "description": "Subnet prefix of the virtual network"
                }
              },
              "adbWorkspace": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Azure Databrick workspace to be linked to the workspace"
                }
              },
              "confidential_data": {
                "type": "string",
                "defaultValue": "false",
                "allowedValues": [
                  "false",
                  "true"
                ],
                "metadata": {
                  "description": "Specifies that the Azure Machine Learning workspace holds highly confidential data."
                }
              },
              "encryption_status": {
                "type": "string",
                "defaultValue": "Disabled",
                "allowedValues": [
                  "Enabled",
                  "Disabled"
                ],
                "metadata": {
                  "description": "Specifies if the Azure Machine Learning workspace should be encrypted with customer managed key."
                }
              },
              "cmk_keyvault": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Specifies the customer managed keyVault arm id."
                }
              },
              "resource_cmk_uri": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Specifies if the customer managed keyvault key uri."
                }
              },
              "privateEndpointType": {
                "type": "string",
                "defaultValue": "none",
                "allowedValues": [
                  "AutoApproval",
                  "ManualApproval",
                  "none"
                ]
              },
              "tagValues": {
                "type": "object"
              },
              "privateEndpointName": {
                "type": "string",
                "defaultValue": "pe",
                "metadata": {
                  "description": "Name of the private end point added to the workspace"
                }
              },
              "privateEndpointResourceGroupName": {
                "type": "string",
                "defaultValue": "[parameters(\u0027resourceGroupName\u0027)]",
                "metadata": {
                  "description": "Name of the resource group where the private end point is added to"
                }
              },
              "imageBuildCompute": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "The name of the compute target to use for building environment Docker images with the container registry is behind a VNet."
                }
              },
              "publicNetworkAccess": {
                "type": "string",
                "defaultValue": "Enabled",
                "allowedValues": [
                  "Disabled",
                  "Enabled"
                ],
                "metadata": {
                  "description": "Whether to allow public endpoint connectivity when a workspace is private link enabled."
                }
              },
              "soft_delete_enabled": {
                "type": "string",
                "defaultValue": "false",
                "allowedValues": [
                  "false",
                  "true"
                ],
                "metadata": {
                  "description": "Whether to create a workspace with soft delete capability"
                }
              },
              "allow_recover_softdeleted_workspace": {
                "type": "string",
                "defaultValue": "false",
                "allowedValues": [
                  "false",
                  "true"
                ],
                "metadata": {
                  "description": "Whether to allow an existing soft-deleted workspace to be recovered"
                }
              },
              "encryption_cosmosdb_resourceid": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "The Bring-Your-Own cosmosdb account that customer brings to store data"
                }
              },
              "encryption_storage_resourceid": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "The Bring-Your-Own storage account that customer brings to store data"
                }
              },
              "encryption_search_resourceid": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "The Bring-Your-Own search account that customer brings to store data"
                }
              },
              "identity": {
                "type": "object",
                "defaultValue": {
                  "type": "systemAssigned"
                },
                "metadata": {
                  "description": "Managed identities assigned to workspace. If not specificed, SystemAssigned managed identity is the default."
                }
              },
              "primaryUserAssignedIdentity": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "ARM identifier of primary user assigned managed identity, in case multiple ones are specified. Also the default managed identity for clusterless compute."
                }
              },
              "managedNetwork": {
                "type": "object",
                "defaultValue": {
                  "isolationMode": "Disabled"
                },
                "metadata": {
                  "description": "Managed network settings to be used for the workspace. If not specified, isolation mode Disabled is the default"
                }
              },
              "spark_runtime_version": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "spark version to be used by all feature sets"
                }
              },
              "offlineStoreStorageAccountOption": {
                "type": "string",
                "defaultValue": "none",
                "allowedValues": [
                  "new",
                  "existing",
                  "none"
                ],
                "metadata": {
                  "description": "Determines whether or not to provision a feature store offline store storage account"
                }
              },
              "offline_store_storage_account_name": {
                "type": "string",
                "defaultValue": "[concat(\u0027sa\u0027, uniqueString(\u0027featurestore\u0027, parameters(\u0027resourceGroupName\u0027), parameters(\u0027workspaceName\u0027)))]",
                "metadata": {
                  "description": "Name of the feature store offline store storage account."
                }
              },
              "offline_store_container_name": {
                "type": "string",
                "defaultValue": "[concat(\u0027offlinestore\u0027, newGuid())]",
                "metadata": {
                  "description": "Feature store offline store container"
                }
              },
              "offline_store_resource_group_name": {
                "type": "string",
                "defaultValue": "[resourceGroup().name]",
                "metadata": {
                  "description": "Feature store offline store resource group"
                }
              },
              "offline_store_subscription_id": {
                "type": "string",
                "defaultValue": "[subscription().subscriptionId]",
                "metadata": {
                  "description": "Feature store offline store subscription id"
                }
              },
              "offline_store_connection_name": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Feature store offline store config"
                }
              },
              "online_store_resource_id": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Feature store online store resource id"
                }
              },
              "online_store_resource_group_name": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Feature store online store resource group"
                }
              },
              "online_store_subscription_id": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Feature store online store subscription id"
                }
              },
              "online_store_connection_name": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Feature store online store config"
                }
              },
              "materializationIdentityOption": {
                "type": "string",
                "defaultValue": "none",
                "allowedValues": [
                  "new",
                  "existing",
                  "none"
                ],
                "metadata": {
                  "description": "Determines whether or not to provision a materialization identity"
                }
              },
              "materialization_identity_name": {
                "type": "string",
                "defaultValue": "empty",
                "metadata": {
                  "description": "Feature store materialization identity name"
                }
              },
              "materialization_identity_subscription_id": {
                "type": "string",
                "defaultValue": "[subscription().subscriptionId]",
                "metadata": {
                  "description": "Feature store materialization identity subscription id"
                }
              },
              "materialization_identity_resource_group_name": {
                "type": "string",
                "defaultValue": "[resourceGroup().name]",
                "metadata": {
                  "description": "Feature store materialization identity resource group name"
                }
              },
              "grant_materialization_permissions": {
                "type": "string",
                "defaultValue": "false",
                "allowedValues": [
                  "false",
                  "true"
                ],
                "metadata": {
                  "description": "Whether to grant materialization identity permissions"
                }
              },
              "enable_data_isolation": {
                "type": "string",
                "defaultValue": "false",
                "allowedValues": [
                  "false",
                  "true"
                ],
                "metadata": {
                  "description": "A flag to determine if workspace has data isolation enabled. The flag can only be set at the creation phase, it can\u0027t be updated."
                }
              },
              "workspace_hub_config": {
                "type": "object",
                "defaultValue": {},
                "metadata": {
                  "description": "Additional configuration for WorkspaceHub."
                }
              },
              "existing_workspaces": {
                "type": "array",
                "defaultValue": [],
                "metadata": {
                  "description": "A list of existing workspaces used by Hub to perform convert."
                }
              },
              "workspace_hub": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Resource Id of Hub used for lean workspace."
                }
              },
              "serverless_compute_settings": {
                "type": "object",
                "defaultValue": {},
                "metadata": {
                  "description": "Serverless compute settings to be used for the workspace."
                }
              },
              "endpoint_resource_id": {
                "type": "string",
                "defaultValue": "null",
                "metadata": {
                  "description": "The resource id that this workspace hub\u0027s endpoints should reference."
                }
              },
              "endpoint_kind": {
                "type": "string",
                "defaultValue": "AIServices",
                "metadata": {
                  "description": "The kind of endpoints this workspace hub ought to contain."
                }
              },
              "endpoint_option": {
                "type": "string",
                "defaultValue": "new",
                "metadata": {
                  "description": "Testing value. Do not touch."
                }
              }
            },
            "variables": {
              "tenantId": "[subscription().tenantId]",
              "storageAccount": "[resourceId(parameters(\u0027storageAccountResourceGroupName\u0027), \u0027Microsoft.Storage/storageAccounts\u0027, parameters(\u0027storageAccountName\u0027))]",
              "keyVault": "[resourceId(parameters(\u0027keyVaultResourceGroupName\u0027), \u0027Microsoft.KeyVault/vaults\u0027, parameters(\u0027keyVaultName\u0027))]",
              "containerRegistry": "[resourceId(parameters(\u0027containerRegistryResourceGroupName\u0027), \u0027Microsoft.ContainerRegistry/registries\u0027, parameters(\u0027containerRegistryName\u0027))]",
              "applicationInsights": "[resourceId(parameters(\u0027applicationInsightsResourceGroupName\u0027), \u0027Microsoft.Insights/components\u0027, parameters(\u0027applicationInsightsName\u0027))]",
              "vnet": "[resourceId(parameters(\u0027vnetResourceGroupName\u0027), \u0027Microsoft.Network/virtualNetworks\u0027, parameters(\u0027vnetName\u0027))]",
              "subnet": "[resourceId(parameters(\u0027vnetResourceGroupName\u0027), \u0027Microsoft.Network/virtualNetworks/subnets\u0027, parameters(\u0027vnetName\u0027), parameters(\u0027subnetName\u0027))]",
              "enablePE": true,
              "networkRuleSetBehindVNet": {
                "defaultAction": "deny",
                "virtualNetworkRules": [
                  {
                    "action": "Allow",
                    "id": "[variables(\u0027subnet\u0027)]"
                  }
                ]
              },
              "privateEndpointSettings": {
                "name": "[concat(parameters(\u0027workspaceName\u0027), \u0027-PrivateEndpoint\u0027)]",
                "properties": {
                  "privateLinkServiceId": "[resourceId(\u0027Microsoft.MachineLearningServices/workspaces\u0027, parameters(\u0027workspaceName\u0027))]",
                  "groupIds": [
                    "amlworkspace"
                  ]
                }
              },
              "defaultPEConnections": "[array(variables(\u0027privateEndpointSettings\u0027))]",
              "privateEndpointDeploymentName": "[concat(\u0027DeployPrivateEndpoint-\u0027, uniqueString(parameters(\u0027privateEndpointName\u0027)))]",
              "materializationIdentity": "[resourceId(parameters(\u0027materialization_identity_subscription_id\u0027), parameters(\u0027materialization_identity_resource_group_name\u0027), \u0027Microsoft.ManagedIdentity/userAssignedIdentities\u0027, parameters(\u0027materialization_identity_name\u0027))]",
              "offlineStore": "[resourceId(parameters(\u0027offline_store_subscription_id\u0027), parameters(\u0027offline_store_resource_group_name\u0027), \u0027Microsoft.Storage/storageAccounts/blobServices/containers\u0027, parameters(\u0027offline_store_storage_account_name\u0027), \u0027default\u0027, parameters(\u0027offline_store_container_name\u0027))]",
              "isWorkspaceHub": "[equals(parameters(\u0027kind\u0027), \u0027hub\u0027)]"
            },
            "resources": [
              {
                "condition": "[and(variables(\u0027enablePE\u0027), equals(parameters(\u0027vnetOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.Network/virtualNetworks",
                "apiVersion": "2019-09-01",
                "name": "[parameters(\u0027vnetName\u0027)]",
                "location": "[parameters(\u0027location\u0027)]",
                "tags": "[parameters(\u0027tagValues\u0027)]",
                "properties": {
                  "addressSpace": {
                    "addressPrefixes": "[parameters(\u0027addressPrefixes\u0027)]"
                  },
                  "enableDdosProtection": false,
                  "enableVmProtection": false
                }
              },
              {
                "condition": "[and(variables(\u0027enablePE\u0027), equals(parameters(\u0027subnetOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.Network/virtualNetworks/subnets",
                "apiVersion": "2019-09-01",
                "name": "[concat(parameters(\u0027vnetName\u0027), \u0027/\u0027, parameters(\u0027subnetName\u0027))]",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, parameters(\u0027vnetName\u0027))]"
                ],
                "properties": {
                  "addressPrefix": "[parameters(\u0027subnetPrefix\u0027)]",
                  "privateEndpointNetworkPolicies": "Disabled",
                  "privateLinkServiceNetworkPolicies": "Enabled",
                  "serviceEndpoints": [
                    {
                      "service": "Microsoft.Storage"
                    },
                    {
                      "service": "Microsoft.KeyVault"
                    },
                    {
                      "service": "Microsoft.ContainerRegistry"
                    }
                  ]
                }
              },
              {
                "condition": "[and(equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027), equals(parameters(\u0027materializationIdentityOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                "apiVersion": "2018-11-30",
                "name": "[parameters(\u0027materialization_identity_name\u0027)]",
                "location": "[parameters(\u0027location\u0027)]"
              },
              {
                "condition": "[and(variables(\u0027enablePE\u0027), equals(parameters(\u0027storageAccountOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.Storage/storageAccounts",
                "apiVersion": "2019-04-01",
                "name": "[parameters(\u0027storageAccountName\u0027)]",
                "tags": "[parameters(\u0027tagValues\u0027)]",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, parameters(\u0027vnetName\u0027), parameters(\u0027subnetName\u0027))]"
                ],
                "location": "[parameters(\u0027storageAccountLocation\u0027)]",
                "sku": {
                  "name": "[parameters(\u0027storageAccountType\u0027)]"
                },
                "kind": "StorageV2",
                "properties": {
                  "encryption": {
                    "services": {
                      "blob": {
                        "enabled": true
                      },
                      "file": {
                        "enabled": true
                      }
                    },
                    "keySource": "Microsoft.Storage"
                  },
                  "supportsHttpsTrafficOnly": true,
                  "allowBlobPublicAccess": false,
                  "networkAcls": "[if(equals(parameters(\u0027storageAccountBehindVNet\u0027), \u0027true\u0027), variables(\u0027networkRuleSetBehindVNet\u0027), json(\u0027null\u0027))]",
                  "isHnsEnabled": "[equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027)]",
                  "minimumTlsVersion": "[if(equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027), \u0027TLS1_2\u0027, \u0027TLS1_0\u0027)]"
                }
              },
              {
                "condition": "[and(variables(\u0027enablePE\u0027), equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027), equals(parameters(\u0027storageAccountOption\u0027), \u0027existing\u0027), equals(parameters(\u0027offlineStoreStorageAccountOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.Storage/storageAccounts",
                "apiVersion": "2019-04-01",
                "name": "[parameters(\u0027offline_store_storage_account_name\u0027)]",
                "tags": "[parameters(\u0027tagValues\u0027)]",
                "location": "[parameters(\u0027location\u0027)]",
                "sku": {
                  "name": "Standard_LRS"
                },
                "kind": "StorageV2",
                "properties": {
                  "encryption": {
                    "services": {
                      "blob": {
                        "enabled": true
                      },
                      "file": {
                        "enabled": true
                      }
                    },
                    "keySource": "Microsoft.Storage"
                  },
                  "supportsHttpsTrafficOnly": true,
                  "allowBlobPublicAccess": false,
                  "networkAcls": "[json(\u0027null\u0027)]",
                  "isHnsEnabled": true,
                  "minimumTlsVersion": "TLS1_2"
                }
              },
              {
                "condition": "[and(variables(\u0027enablePE\u0027), equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027), equals(parameters(\u0027offlineStoreStorageAccountOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                "apiVersion": "2021-04-01",
                "name": "[concat(parameters(\u0027offline_store_storage_account_name\u0027), \u0027/default/\u0027, parameters(\u0027offline_store_container_name\u0027))]",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.Storage/storageAccounts\u0027, parameters(\u0027offline_store_storage_account_name\u0027))]"
                ]
              },
              {
                "condition": "[and(variables(\u0027enablePE\u0027), equals(parameters(\u0027keyVaultOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.KeyVault/vaults",
                "apiVersion": "2019-09-01",
                "tags": "[parameters(\u0027tagValues\u0027)]",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, parameters(\u0027vnetName\u0027), parameters(\u0027subnetName\u0027))]"
                ],
                "name": "[parameters(\u0027keyVaultName\u0027)]",
                "location": "[parameters(\u0027keyVaultLocation\u0027)]",
                "properties": {
                  "tenantId": "[variables(\u0027tenantId\u0027)]",
                  "sku": {
                    "name": "standard",
                    "family": "A"
                  },
                  "accessPolicies": [],
                  "enableRbacAuthorization": true,
                  "networkAcls": "[if(equals(parameters(\u0027keyVaultBehindVNet\u0027), \u0027true\u0027), variables(\u0027networkRuleSetBehindVNet\u0027), json(\u0027null\u0027))]"
                }
              },
              {
                "condition": "[and(variables(\u0027enablePE\u0027), equals(parameters(\u0027containerRegistryOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.ContainerRegistry/registries",
                "apiVersion": "2019-05-01",
                "tags": "[parameters(\u0027tagValues\u0027)]",
                "name": "[parameters(\u0027containerRegistryName\u0027)]",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, parameters(\u0027vnetName\u0027), parameters(\u0027subnetName\u0027))]"
                ],
                "location": "[parameters(\u0027containerRegistryLocation\u0027)]",
                "sku": {
                  "name": "[parameters(\u0027containerRegistrySku\u0027)]"
                },
                "properties": {
                  "adminUserEnabled": true,
                  "networkRuleSet": "[if(equals(parameters(\u0027containerRegistryBehindVNet\u0027), \u0027true\u0027), variables(\u0027networkRuleSetBehindVNet\u0027), json(\u0027null\u0027))]"
                }
              },
              {
                "condition": "[and(variables(\u0027enablePE\u0027), equals(parameters(\u0027applicationInsightsOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.OperationalInsights/workspaces",
                "tags": "[parameters(\u0027tagValues\u0027)]",
                "apiVersion": "2020-08-01",
                "name": "[parameters(\u0027logAnalyticsName\u0027)]",
                "location": "[if(or(equals(toLower(parameters(\u0027applicationInsightsLocation\u0027)),\u0027westcentralus\u0027), equals(toLower(parameters(\u0027applicationInsightsLocation\u0027)),\u0027eastus2euap\u0027), equals(toLower(parameters(\u0027applicationInsightsLocation\u0027)),\u0027centraluseuap\u0027)),\u0027southcentralus\u0027, parameters(\u0027applicationInsightsLocation\u0027))]",
                "kind": "web",
                "properties": {
                  "Application_Type": "web"
                }
              },
              {
                "condition": "[and(variables(\u0027enablePE\u0027), equals(parameters(\u0027applicationInsightsOption\u0027), \u0027new\u0027))]",
                "type": "Microsoft.Insights/components",
                "tags": "[parameters(\u0027tagValues\u0027)]",
                "apiVersion": "2020-02-02-preview",
                "name": "[parameters(\u0027applicationInsightsName\u0027)]",
                "location": "[if(or(equals(toLower(parameters(\u0027applicationInsightsLocation\u0027)),\u0027westcentralus\u0027), equals(toLower(parameters(\u0027applicationInsightsLocation\u0027)),\u0027eastus2euap\u0027), equals(toLower(parameters(\u0027applicationInsightsLocation\u0027)),\u0027centraluseuap\u0027)),\u0027southcentralus\u0027, parameters(\u0027applicationInsightsLocation\u0027))]",
                "kind": "web",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.OperationalInsights/workspaces\u0027, parameters(\u0027logAnalyticsName\u0027))]"
                ],
                "properties": {
                  "Application_Type": "web",
                  "WorkspaceResourceId": "[parameters(\u0027logAnalyticsArmId\u0027)]"
                }
              },
              {
                "condition": "[variables(\u0027enablePE\u0027)]",
                "type": "Microsoft.MachineLearningServices/workspaces",
                "apiVersion": "2023-08-01-preview",
                "tags": "[parameters(\u0027tagValues\u0027)]",
                "name": "[parameters(\u0027workspaceName\u0027)]",
                "kind": "[parameters(\u0027kind\u0027)]",
                "location": "[parameters(\u0027location\u0027)]",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.Storage/storageAccounts\u0027, parameters(\u0027storageAccountName\u0027))]",
                  "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, parameters(\u0027keyVaultName\u0027))]",
                  "[resourceId(\u0027Microsoft.Insights/components\u0027, parameters(\u0027applicationInsightsName\u0027))]",
                  "[resourceId(\u0027Microsoft.ContainerRegistry/registries\u0027, parameters(\u0027containerRegistryName\u0027))]"
                ],
                "identity": "[parameters(\u0027identity\u0027)]",
                "properties": {
                  "friendlyName": "[parameters(\u0027friendlyName\u0027)]",
                  "description": "[parameters(\u0027description\u0027)]",
                  "storageAccount": "[variables(\u0027storageAccount\u0027)]",
                  "keyVault": "[variables(\u0027keyVault\u0027)]",
                  "applicationInsights": "[variables(\u0027applicationInsights\u0027)]",
                  "containerRegistry": "[if(not(equals(parameters(\u0027containerRegistryOption\u0027), \u0027none\u0027)), variables(\u0027containerRegistry\u0027), json(\u0027null\u0027))]",
                  "hbiWorkspace": "[parameters(\u0027confidential_data\u0027)]",
                  "imageBuildCompute": "[parameters(\u0027imageBuildCompute\u0027)]",
                  "publicNetworkAccess": "[parameters(\u0027publicNetworkAccess\u0027)]",
                  "softDeleteEnabled": "[parameters(\u0027soft_delete_enabled\u0027)]",
                  "allowRecoverSoftDeletedWorkspace": "[parameters(\u0027allow_recover_softdeleted_workspace\u0027)]",
                  "encryption": {
                    "status": "[parameters(\u0027encryption_status\u0027)]",
                    "keyVaultProperties": {
                      "keyVaultArmId": "[parameters(\u0027cmk_keyvault\u0027)]",
                      "keyIdentifier": "[parameters(\u0027resource_cmk_uri\u0027)]"
                    },
                    "cosmosDbArmId": "[parameters(\u0027encryption_cosmosdb_resourceid\u0027)]",
                    "storageAccountArmId": "[parameters(\u0027encryption_storage_resourceid\u0027)]",
                    "SearchAccountArmId": "[parameters(\u0027encryption_search_resourceid\u0027)]"
                  },
                  "primaryUserAssignedIdentity": "[parameters(\u0027primaryUserAssignedIdentity\u0027)]",
                  "managedNetwork": "[parameters(\u0027managedNetwork\u0027)]",
                  "featureStoreSettings": {
                    "computeruntime": {
                      "SparkRuntimeVersion": "[parameters(\u0027spark_runtime_version\u0027)]"
                    }
                  },
                  "enableDataIsolation": "[parameters(\u0027enable_data_isolation\u0027)]",
                  "workspaceHubConfig": "[parameters(\u0027workspace_hub_config\u0027)]",
                  "existingWorkspaces": "[parameters(\u0027existing_workspaces\u0027)]",
                  "serverlessComputeSettings": "[parameters(\u0027serverless_compute_settings\u0027)]"
                },
                "resources": [
                  {
                    "condition": "[equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027)]",
                    "type": "connections",
                    "apiVersion": "2022-05-01",
                    "name": "[if(empty(parameters(\u0027offline_store_connection_name\u0027)), \u0027empty\u0027, parameters(\u0027offline_store_connection_name\u0027))]",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.MachineLearningServices/workspaces\u0027, parameters(\u0027workspaceName\u0027))]",
                      "[resourceId(\u0027Microsoft.Storage/storageAccounts/blobServices/containers\u0027, parameters(\u0027offline_store_storage_account_name\u0027), \u0027default\u0027, parameters(\u0027offline_store_container_name\u0027))]",
                      "[resourceId(\u0027Microsoft.ManagedIdentity/userAssignedIdentities\u0027, parameters(\u0027materialization_identity_name\u0027))]"
                    ],
                    "identity": {
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "category": "AzureDataLakeGen2",
                      "target": "[variables(\u0027offlineStore\u0027)]",
                      "authType": "ManagedIdentity",
                      "credentials": {
                        "clientid": "[if(not(equals(parameters(\u0027materializationIdentityOption\u0027), \u0027none\u0027)), reference(variables(\u0027materializationIdentity\u0027), \u00272018-11-30\u0027).clientId, \u0027\u0027)]",
                        "resourceid": "[variables(\u0027materializationIdentity\u0027)]"
                      }
                    }
                  },
                  {
                    "condition": "[and(equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027), not(empty(parameters(\u0027online_store_resource_id\u0027))))]",
                    "type": "connections",
                    "apiVersion": "2022-05-01",
                    "name": "[if(empty(parameters(\u0027online_store_connection_name\u0027)), \u0027empty\u0027, parameters(\u0027online_store_connection_name\u0027))]",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.MachineLearningServices/workspaces\u0027, parameters(\u0027workspaceName\u0027))]",
                      "[resourceId(\u0027Microsoft.ManagedIdentity/userAssignedIdentities\u0027, parameters(\u0027materialization_identity_name\u0027))]"
                    ],
                    "identity": {
                      "type": "SystemAssigned"
                    },
                    "properties": {
                      "category": "Redis",
                      "target": "[parameters(\u0027online_store_resource_id\u0027)]",
                      "authType": "ManagedIdentity",
                      "credentials": {
                        "clientid": "[if(not(equals(parameters(\u0027materializationIdentityOption\u0027), \u0027none\u0027)), reference(variables(\u0027materializationIdentity\u0027), \u00272018-11-30\u0027).clientId, \u0027\u0027)]",
                        "resourceid": "[variables(\u0027materializationIdentity\u0027)]"
                      }
                    }
                  },
                  {
                    "condition": "[and(equals(parameters(\u0027endpoint_option\u0027), \u0027new\u0027), variables(\u0027isWorkspaceHub\u0027))]",
                    "type": "endpoints",
                    "apiVersion": "2023-08-01-preview",
                    "name": "Azure.OpenAI",
                    "properties": {
                      "name": "Azure.OpenAI",
                      "endpointType": "Azure.OpenAI",
                      "associatedResourceId": "[if(equals(parameters(\u0027endpoint_resource_id\u0027), \u0027null\u0027), null(), parameters(\u0027endpoint_resource_id\u0027))]"
                    },
                    "dependsOn": [
                      "[parameters(\u0027workspaceName\u0027)]"
                    ]
                  },
                  {
                    "condition": "[and(equals(parameters(\u0027endpoint_kind\u0027), \u0027AIServices\u0027), equals(parameters(\u0027endpoint_option\u0027), \u0027new\u0027), variables(\u0027isWorkspaceHub\u0027))]",
                    "type": "endpoints",
                    "apiVersion": "2023-08-01-preview",
                    "name": "Azure.ContentSafety",
                    "properties": {
                      "name": "Azure.ContentSafety",
                      "endpointType": "Azure.ContentSafety",
                      "associatedResourceId": "[if(equals(parameters(\u0027endpoint_resource_id\u0027), \u0027null\u0027), null(), parameters(\u0027endpoint_resource_id\u0027))]"
                    },
                    "dependsOn": [
                      "[parameters(\u0027workspaceName\u0027)]"
                    ]
                  },
                  {
                    "condition": "[and(equals(parameters(\u0027endpoint_kind\u0027), \u0027AIServices\u0027), equals(parameters(\u0027endpoint_option\u0027), \u0027new\u0027), variables(\u0027isWorkspaceHub\u0027))]",
                    "type": "endpoints",
                    "apiVersion": "2023-08-01-preview",
                    "name": "Azure.Speech",
                    "properties": {
                      "name": "Azure.Speech",
                      "endpointType": "Azure.Speech",
                      "associatedResourceId": "[if(equals(parameters(\u0027endpoint_resource_id\u0027), \u0027null\u0027), null(), parameters(\u0027endpoint_resource_id\u0027))]"
                    },
                    "dependsOn": [
                      "[parameters(\u0027workspaceName\u0027)]"
                    ]
                  }
                ]
              },
              {
                "condition": "[equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027)]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2022-05-01",
                "name": "[concat(parameters(\u0027workspaceName\u0027), \u0027-deploy-feature-store\u0027)]",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.MachineLearningServices/workspaces\u0027, parameters(\u0027workspaceName\u0027))]",
                  "[resourceId(\u0027Microsoft.ManagedIdentity/userAssignedIdentities\u0027, parameters(\u0027materialization_identity_name\u0027))]",
                  "[resourceId(\u0027Microsoft.MachineLearningServices/workspaces/connections\u0027, parameters(\u0027workspaceName\u0027), parameters(\u0027offline_store_connection_name\u0027))]",
                  "[resourceId(\u0027Microsoft.MachineLearningServices/workspaces/connections\u0027, parameters(\u0027workspaceName\u0027), parameters(\u0027online_store_connection_name\u0027))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "parameters": {},
                  "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.1",
                    "resources": [
                      {
                        "apiVersion": "2022-12-01-preview",
                        "name": "[parameters(\u0027workspaceName\u0027)]",
                        "location": "[parameters(\u0027location\u0027)]",
                        "kind": "featurestore",
                        "type": "Microsoft.MachineLearningServices/workspaces",
                        "identity": {
                          "type": "SystemAssigned,UserAssigned",
                          "userAssignedIdentities": {
                            "[variables(\u0027materializationIdentity\u0027)]": {}
                          }
                        },
                        "properties": {
                          "friendlyName": "[parameters(\u0027friendlyName\u0027)]",
                          "description": "[parameters(\u0027description\u0027)]",
                          "storageAccount": "[variables(\u0027storageAccount\u0027)]",
                          "keyVault": "[variables(\u0027keyVault\u0027)]",
                          "applicationInsights": "[variables(\u0027applicationInsights\u0027)]",
                          "containerRegistry": "[if(not(equals(parameters(\u0027containerRegistryOption\u0027), \u0027none\u0027)), variables(\u0027containerRegistry\u0027), json(\u0027null\u0027))]",
                          "hbiWorkspace": "[parameters(\u0027confidential_data\u0027)]",
                          "imageBuildCompute": "[parameters(\u0027imageBuildCompute\u0027)]",
                          "publicNetworkAccess": "[parameters(\u0027publicNetworkAccess\u0027)]",
                          "softDeleteEnabled": "[parameters(\u0027soft_delete_enabled\u0027)]",
                          "allowRecoverSoftDeletedWorkspace": "[parameters(\u0027allow_recover_softdeleted_workspace\u0027)]",
                          "encryption": {
                            "status": "[parameters(\u0027encryption_status\u0027)]",
                            "keyVaultProperties": {
                              "keyVaultArmId": "[parameters(\u0027cmk_keyvault\u0027)]",
                              "keyIdentifier": "[parameters(\u0027resource_cmk_uri\u0027)]"
                            },
                            "cosmosDbArmId": "[parameters(\u0027encryption_cosmosdb_resourceid\u0027)]",
                            "storageAccountArmId": "[parameters(\u0027encryption_storage_resourceid\u0027)]",
                            "SearchAccountArmId": "[parameters(\u0027encryption_search_resourceid\u0027)]"
                          },
                          "primaryUserAssignedIdentity": "[parameters(\u0027primaryUserAssignedIdentity\u0027)]",
                          "managedNetwork": "[parameters(\u0027managedNetwork\u0027)]",
                          "featureStoreSettings": {
                            "computeruntime": {
                              "SparkRuntimeVersion": "[parameters(\u0027spark_runtime_version\u0027)]"
                            },
                            "offlinestoreconnectionname": "[parameters(\u0027offline_store_connection_name\u0027)]",
                            "onlinestoreconnectionname": "[parameters(\u0027online_store_connection_name\u0027)]"
                          },
                          "enableDataIsolation": "[parameters(\u0027enable_data_isolation\u0027)]"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "condition": "[and(equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027), equals(parameters(\u0027grant_materialization_permissions\u0027), \u0027true\u0027))]",
                "type": "Microsoft.Resources/deployments",
                "name": "[concat(\u0027workspace-role-assign-\u0027, guid(variables(\u0027materializationIdentity\u0027), resourceId(\u0027Microsoft.MachineLearningServices/workspaces\u0027, parameters(\u0027workspaceName\u0027)), \u0027azureml ds role\u0027))]",
                "apiVersion": "2020-06-01",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.MachineLearningServices/workspaces\u0027, parameters(\u0027workspaceName\u0027))]",
                  "[resourceId(\u0027Microsoft.ManagedIdentity/userAssignedIdentities\u0027, parameters(\u0027materialization_identity_name\u0027))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                      {
                        "type": "Microsoft.Authorization/roleAssignments",
                        "apiVersion": "2022-04-01",
                        "name": "[guid(variables(\u0027materializationIdentity\u0027), resourceId(\u0027Microsoft.MachineLearningServices/workspaces\u0027, parameters(\u0027workspaceName\u0027)), \u0027azureml ds role\u0027)]",
                        "scope": "[resourceId(resourceGroup().name, \u0027Microsoft.MachineLearningServices/workspaces\u0027, parameters(\u0027workspaceName\u0027))]",
                        "location": "[parameters(\u0027location\u0027)]",
                        "properties": {
                          "roleDefinitionId": "[subscriptionResourceId(\u0027Microsoft.Authorization/roleDefinitions\u0027, \u0027f6c7c914-8db3-469d-8ca1-694a8f32e121\u0027)]",
                          "principalId": "[if(not(equals(parameters(\u0027materializationIdentityOption\u0027), \u0027none\u0027)), reference(variables(\u0027materializationIdentity\u0027), \u00272018-11-30\u0027).principalId, \u0027\u0027)]",
                          "principalType": "ServicePrincipal"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "condition": "[and(equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027), equals(parameters(\u0027grant_materialization_permissions\u0027), \u0027true\u0027), not(equals(parameters(\u0027materializationIdentityOption\u0027), \u0027none\u0027)))]",
                "type": "Microsoft.Resources/deployments",
                "name": "[concat(\u0027offline-store-role-assign-\u0027, guid(variables(\u0027materializationIdentity\u0027), variables(\u0027offlineStore\u0027), \u0027storage blob data contributor\u0027))]",
                "apiVersion": "2020-06-01",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.Storage/storageAccounts/blobServices/containers\u0027, parameters(\u0027offline_store_storage_account_name\u0027), \u0027default\u0027, parameters(\u0027offline_store_container_name\u0027))]",
                  "[resourceId(\u0027Microsoft.ManagedIdentity/userAssignedIdentities\u0027, parameters(\u0027materialization_identity_name\u0027))]"
                ],
                "resourceGroup": "[parameters(\u0027offline_store_resource_group_name\u0027)]",
                "subscriptionId": "[parameters(\u0027offline_store_subscription_id\u0027)]",
                "properties": {
                  "mode": "Incremental",
                  "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                      {
                        "type": "Microsoft.Authorization/roleAssignments",
                        "apiVersion": "2022-04-01",
                        "name": "[guid(variables(\u0027materializationIdentity\u0027), variables(\u0027offlineStore\u0027), \u0027storage blob data contributor\u0027)]",
                        "scope": "[variables(\u0027offlineStore\u0027)]",
                        "location": "[parameters(\u0027location\u0027)]",
                        "properties": {
                          "roleDefinitionId": "[subscriptionResourceId(\u0027Microsoft.Authorization/roleDefinitions\u0027, \u0027ba92f5b4-2d11-453d-a403-e96b0029c9fe\u0027)]",
                          "principalId": "[if(not(equals(parameters(\u0027materializationIdentityOption\u0027), \u0027none\u0027)), reference(variables(\u0027materializationIdentity\u0027), \u00272023-01-31\u0027).principalId, \u0027\u0027)]",
                          "principalType": "ServicePrincipal"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "condition": "[and(equals(parameters(\u0027kind\u0027), \u0027featurestore\u0027), equals(parameters(\u0027grant_materialization_permissions\u0027), \u0027true\u0027), not(equals(parameters(\u0027materializationIdentityOption\u0027), \u0027none\u0027)), not(empty(parameters(\u0027online_store_resource_id\u0027))))]",
                "type": "Microsoft.Resources/deployments",
                "name": "[concat(\u0027online-store-role-assign-\u0027, guid(variables(\u0027materializationIdentity\u0027), parameters(\u0027online_store_resource_id\u0027), \u0027contributor\u0027))]",
                "apiVersion": "2020-06-01",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.ManagedIdentity/userAssignedIdentities\u0027, parameters(\u0027materialization_identity_name\u0027))]"
                ],
                "resourceGroup": "[parameters(\u0027online_store_resource_group_name\u0027)]",
                "subscriptionId": "[parameters(\u0027online_store_subscription_id\u0027)]",
                "properties": {
                  "mode": "Incremental",
                  "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                      {
                        "type": "Microsoft.Authorization/roleAssignments",
                        "apiVersion": "2022-04-01",
                        "name": "[guid(variables(\u0027materializationIdentity\u0027), parameters(\u0027online_store_resource_id\u0027), \u0027contributor\u0027)]",
                        "scope": "[parameters(\u0027online_store_resource_id\u0027)]",
                        "location": "[parameters(\u0027location\u0027)]",
                        "properties": {
                          "roleDefinitionId": "[subscriptionResourceId(\u0027Microsoft.Authorization/roleDefinitions\u0027, \u0027b24988ac-6180-42a0-ab88-20f7382dd24c\u0027)]",
                          "principalId": "[if(not(equals(parameters(\u0027materializationIdentityOption\u0027), \u0027none\u0027)), reference(variables(\u0027materializationIdentity\u0027), \u00272023-01-31\u0027).principalId, \u0027\u0027)]",
                          "principalType": "ServicePrincipal"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "condition": "[and(variables(\u0027enablePE\u0027), not(equals(parameters(\u0027privateEndpointType\u0027), \u0027none\u0027)))]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2020-06-01",
                "name": "[variables(\u0027privateEndpointDeploymentName\u0027)]",
                "resourceGroup": "[parameters(\u0027privateEndpointResourceGroupName\u0027)]",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.MachineLearningServices/workspaces\u0027, parameters(\u0027workspaceName\u0027))]",
                  "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, parameters(\u0027vnetName\u0027), parameters(\u0027subnetName\u0027))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                      {
                        "apiVersion": "2020-06-01",
                        "name": "[parameters(\u0027privateEndpointName\u0027)]",
                        "type": "Microsoft.Network/privateEndpoints",
                        "location": "[parameters(\u0027location\u0027)]",
                        "tags": "[parameters(\u0027tagValues\u0027)]",
                        "properties": {
                          "privateLinkServiceConnections": "[if(equals(parameters(\u0027privateEndpointType\u0027), \u0027AutoApproval\u0027), variables(\u0027defaultPEConnections\u0027), json(\u0027null\u0027))]",
                          "manualPrivateLinkServiceConnections": "[if(equals(parameters(\u0027privateEndpointType\u0027), \u0027ManualApproval\u0027), variables(\u0027defaultPEConnections\u0027), json(\u0027null\u0027))]",
                          "subnet": {
                            "id": "[variables(\u0027subnet\u0027)]"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "parameters": {
            "location": {
              "value": "centraluseuap"
            },
            "workspaceName": {
              "value": "e2etest_test_28423736121_mvnet"
            },
            "resourceGroupName": {
              "value": "00000"
            },
            "description": {
              "value": "e2etest_test_28423736121_mvnet description"
            },
            "kind": {
              "value": "default"
            },
            "friendlyName": {
              "value": "e2etest_test_28423736121_mvnet display name"
            },
            "tagValues": {
              "value": {
                "createdByToolkit": "sdk-v2-1.15.0"
              }
            },
            "keyVaultOption": {
              "value": "new"
            },
            "keyVaultName": {
              "value": "e2etesttkeyvault8a00333b"
            },
            "keyVaultResourceGroupName": {
              "value": "00000"
            },
            "storageAccountOption": {
              "value": "new"
            },
            "storageAccountName": {
              "value": "e2etesttstorage2518e3d32"
            },
            "storageAccountResourceGroupName": {
              "value": "00000"
            },
            "applicationInsightsOption": {
              "value": "new"
            },
            "applicationInsightsName": {
              "value": "e2etesttinsightsae72b92c"
            },
            "logAnalyticsName": {
              "value": "e2etesttlogalytid49c92aa"
            },
            "logAnalyticsArmId": {
              "value": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa"
            },
            "applicationInsightsResourceGroupName": {
              "value": "00000"
            },
            "containerRegistryOption": {
              "value": "none"
            },
            "containerRegistryName": {
              "value": "name"
            },
            "containerRegistryResourceGroupName": {
              "value": ""
            },
            "encryption_status": {
              "value": "Disabled"
            },
            "cmk_keyvault": {
              "value": ""
            },
            "resource_cmk_uri": {
              "value": ""
            },
            "privateEndpointName": {
              "value": "name"
            },
            "subnetOption": {
              "value": "existing"
            },
            "subnetName": {
              "value": "default"
            },
            "vnetOption": {
              "value": "existing"
            },
            "vnetName": {
              "value": "name"
            },
            "vnetResourceGroupName": {
              "value": "name"
            },
            "privateEndpointType": {
              "value": "none"
            },
            "privateEndpointResourceGroupName": {
              "value": "name"
            },
            "confidential_data": {
              "value": "false"
            },
            "imageBuildCompute": {
              "value": ""
            },
            "publicNetworkAccess": {
              "value": "Enabled"
            },
            "soft_delete_enabled": {
              "value": "false"
            },
            "allow_recover_softdeleted_workspace": {
              "value": "false"
            },
            "encryption_cosmosdb_resourceid": {
              "value": ""
            },
            "encryption_storage_resourceid": {
              "value": ""
            },
            "encryption_search_resourceid": {
              "value": ""
            },
            "identity": {
              "value": {
                "type": "SystemAssigned"
              }
            },
            "primaryUserAssignedIdentity": {
              "value": ""
            },
            "managedNetwork": {
              "value": {
                "isolationMode": "AllowOnlyApprovedOutbound",
                "outboundRules": {
                  "my-service": {
                    "category": "UserDefined",
                    "type": "ServiceTag",
                    "destination": {
                      "portRanges": "80, 8080-8089",
                      "protocol": "TCP",
                      "serviceTag": "DataFactory"
                    }
                  },
                  "my-storage": {
                    "category": "UserDefined",
                    "type": "PrivateEndpoint",
                    "destination": {
                      "serviceResourceId": "/subscriptions/0caf7ec9-615a-4491-bad8-64ce023324e1/resourceGroups/joharrin-sdk-tests/providers/Microsoft.Storage/storageAccounts/mvnetteststorage",
                      "sparkEnabled": false,
                      "subresourceTarget": "blob"
                    }
                  },
                  "pytorch": {
                    "category": "UserDefined",
                    "type": "FQDN",
                    "destination": "*.pytorch.org"
                  }
                }
              }
            },
            "spark_runtime_version": {
              "value": null
            },
            "offlineStoreStorageAccountOption": {
              "value": null
            },
            "offline_store_storage_account_name": {
              "value": null
            },
            "offline_store_container_name": {
              "value": null
            },
            "offline_store_resource_group_name": {
              "value": null
            },
            "offline_store_subscription_id": {
              "value": null
            },
            "offline_store_connection_name": {
              "value": null
            },
            "online_store_resource_id": {
              "value": null
            },
            "online_store_resource_group_name": {
              "value": null
            },
            "online_store_subscription_id": {
              "value": null
            },
            "online_store_connection_name": {
              "value": null
            },
            "grant_materialization_permissions": {
              "value": "true"
            },
            "materializationIdentityOption": {
              "value": null
            },
            "materialization_identity_name": {
              "value": null
            },
            "materialization_identity_resource_group_name": {
              "value": null
            },
            "materialization_identity_subscription_id": {
              "value": null
            },
            "workspace_hub_config": {
              "value": {}
            },
            "existing_workspaces": {
              "value": []
            },
            "workspace_hub": {
              "value": ""
            },
            "enable_data_isolation": {
              "value": "false"
            },
            "serverless_compute_settings": {
              "value": {}
            },
            "endpoint_resource_id": {
              "value": "null"
            },
            "endpoint_kind": {
              "value": "AIServices"
            },
            "endpoint_option": {
              "value": "new"
            }
          },
          "mode": "incremental"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operationStatuses/08584893530883635328?api-version=2020-06-01",
        "Cache-Control": "no-cache",
        "Content-Length": "8238",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:18 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "821cef6e-1325-4d9f-9f9e-40c02d9e4434",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-routing-request-id": "EASTUS2:20240404T180318Z:821cef6e-1325-4d9f-9f9e-40c02d9e4434",
        "X-MSEdge-Ref": "Ref A: 08B3668804034F1E80EDF467FC5B86F3 Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:16Z"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835",
        "name": "e2etest_test_28423736121_mvnet-1091835",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "templateHash": "10767854101966277632",
          "parameters": {
            "workspaceName": {
              "type": "String",
              "value": "e2etest_test_28423736121_mvnet"
            },
            "description": {
              "type": "String",
              "value": "e2etest_test_28423736121_mvnet description"
            },
            "friendlyName": {
              "type": "String",
              "value": "e2etest_test_28423736121_mvnet display name"
            },
            "kind": {
              "type": "String",
              "value": "default"
            },
            "location": {
              "type": "String",
              "value": "centraluseuap"
            },
            "resourceGroupName": {
              "type": "String",
              "value": "00000"
            },
            "storageAccountOption": {
              "type": "String",
              "value": "new"
            },
            "storageAccountName": {
              "type": "String",
              "value": "e2etesttstorage2518e3d32"
            },
            "storageAccountType": {
              "type": "String",
              "value": "Standard_LRS"
            },
            "storageAccountBehindVNet": {
              "type": "String",
              "value": "false"
            },
            "storageAccountResourceGroupName": {
              "type": "String",
              "value": "00000"
            },
            "storageAccountLocation": {
              "type": "String",
              "value": "centraluseuap"
            },
            "keyVaultOption": {
              "type": "String",
              "value": "new"
            },
            "keyVaultName": {
              "type": "String",
              "value": "e2etesttkeyvault8a00333b"
            },
            "keyVaultBehindVNet": {
              "type": "String",
              "value": "false"
            },
            "keyVaultResourceGroupName": {
              "type": "String",
              "value": "00000"
            },
            "keyVaultLocation": {
              "type": "String",
              "value": "centraluseuap"
            },
            "applicationInsightsOption": {
              "type": "String",
              "value": "new"
            },
            "logAnalyticsName": {
              "type": "String",
              "value": "e2etesttlogalytid49c92aa"
            },
            "logAnalyticsArmId": {
              "type": "String",
              "value": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa"
            },
            "applicationInsightsName": {
              "type": "String",
              "value": "e2etesttinsightsae72b92c"
            },
            "applicationInsightsResourceGroupName": {
              "type": "String",
              "value": "00000"
            },
            "applicationInsightsLocation": {
              "type": "String",
              "value": "centraluseuap"
            },
            "containerRegistryOption": {
              "type": "String",
              "value": "none"
            },
            "containerRegistryName": {
              "type": "String",
              "value": "name"
            },
            "containerRegistrySku": {
              "type": "String",
              "value": "Standard"
            },
            "containerRegistryResourceGroupName": {
              "type": "String",
              "value": ""
            },
            "containerRegistryBehindVNet": {
              "type": "String",
              "value": "false"
            },
            "containerRegistryLocation": {
              "type": "String",
              "value": "centraluseuap"
            },
            "vnetOption": {
              "type": "String",
              "value": "existing"
            },
            "vnetName": {
              "type": "String",
              "value": "name"
            },
            "vnetResourceGroupName": {
              "type": "String",
              "value": "name"
            },
            "addressPrefixes": {
              "type": "Array",
              "value": [
                "10.0.0.0/16"
              ]
            },
            "subnetOption": {
              "type": "String",
              "value": "existing"
            },
            "subnetName": {
              "type": "String",
              "value": "default"
            },
            "subnetPrefix": {
              "type": "String",
              "value": "10.0.0.0/24"
            },
            "adbWorkspace": {
              "type": "String",
              "value": ""
            },
            "confidential_data": {
              "type": "String",
              "value": "false"
            },
            "encryption_status": {
              "type": "String",
              "value": "Disabled"
            },
            "cmk_keyvault": {
              "type": "String",
              "value": ""
            },
            "resource_cmk_uri": {
              "type": "String",
              "value": ""
            },
            "privateEndpointType": {
              "type": "String",
              "value": "none"
            },
            "tagValues": {
              "type": "Object",
              "value": {
                "createdByToolkit": "sdk-v2-1.15.0"
              }
            },
            "privateEndpointName": {
              "type": "String",
              "value": "name"
            },
            "privateEndpointResourceGroupName": {
              "type": "String",
              "value": "name"
            },
            "imageBuildCompute": {
              "type": "String",
              "value": ""
            },
            "publicNetworkAccess": {
              "type": "String",
              "value": "Enabled"
            },
            "soft_delete_enabled": {
              "type": "String",
              "value": "false"
            },
            "allow_recover_softdeleted_workspace": {
              "type": "String",
              "value": "false"
            },
            "encryption_cosmosdb_resourceid": {
              "type": "String",
              "value": ""
            },
            "encryption_storage_resourceid": {
              "type": "String",
              "value": ""
            },
            "encryption_search_resourceid": {
              "type": "String",
              "value": ""
            },
            "identity": {
              "type": "Object",
              "value": {
                "type": "SystemAssigned"
              }
            },
            "primaryUserAssignedIdentity": {
              "type": "String",
              "value": ""
            },
            "managedNetwork": {
              "type": "Object",
              "value": {
                "isolationMode": "AllowOnlyApprovedOutbound",
                "outboundRules": {
                  "my-service": {
                    "category": "UserDefined",
                    "type": "ServiceTag",
                    "destination": {
                      "portRanges": "80, 8080-8089",
                      "protocol": "TCP",
                      "serviceTag": "DataFactory"
                    }
                  },
                  "my-storage": {
                    "category": "UserDefined",
                    "type": "PrivateEndpoint",
                    "destination": {
                      "serviceResourceId": "/subscriptions/0caf7ec9-615a-4491-bad8-64ce023324e1/resourceGroups/joharrin-sdk-tests/providers/Microsoft.Storage/storageAccounts/mvnetteststorage",
                      "sparkEnabled": false,
                      "subresourceTarget": "blob"
                    }
                  },
                  "pytorch": {
                    "category": "UserDefined",
                    "type": "FQDN",
                    "destination": "*.pytorch.org"
                  }
                }
              }
            },
            "spark_runtime_version": {
              "type": "String",
              "value": ""
            },
            "offlineStoreStorageAccountOption": {
              "type": "String",
              "value": "none"
            },
            "offline_store_storage_account_name": {
              "type": "String",
              "value": "safsyyoawq6o5ny"
            },
            "offline_store_container_name": {
              "type": "String",
              "value": "offlinestore409bd421-9dd6-42bd-b5d9-8a1b06cd4071"
            },
            "offline_store_resource_group_name": {
              "type": "String",
              "value": "00000"
            },
            "offline_store_subscription_id": {
              "type": "String",
              "value": "00000000-0000-0000-0000-000000000"
            },
            "offline_store_connection_name": {
              "type": "String",
              "value": ""
            },
            "online_store_resource_id": {
              "type": "String",
              "value": ""
            },
            "online_store_resource_group_name": {
              "type": "String",
              "value": ""
            },
            "online_store_subscription_id": {
              "type": "String",
              "value": ""
            },
            "online_store_connection_name": {
              "type": "String",
              "value": ""
            },
            "materializationIdentityOption": {
              "type": "String",
              "value": "none"
            },
            "materialization_identity_name": {
              "type": "String",
              "value": "empty"
            },
            "materialization_identity_subscription_id": {
              "type": "String",
              "value": "00000000-0000-0000-0000-000000000"
            },
            "materialization_identity_resource_group_name": {
              "type": "String",
              "value": "00000"
            },
            "grant_materialization_permissions": {
              "type": "String",
              "value": "true"
            },
            "enable_data_isolation": {
              "type": "String",
              "value": "false"
            },
            "workspace_hub_config": {
              "type": "Object",
              "value": {}
            },
            "existing_workspaces": {
              "type": "Array",
              "value": []
            },
            "workspace_hub": {
              "type": "String",
              "value": ""
            },
            "serverless_compute_settings": {
              "type": "Object",
              "value": {}
            },
            "endpoint_resource_id": {
              "type": "String",
              "value": "null"
            },
            "endpoint_kind": {
              "type": "String",
              "value": "AIServices"
            },
            "endpoint_option": {
              "type": "String",
              "value": "new"
            }
          },
          "mode": "Incremental",
          "provisioningState": "Accepted",
          "timestamp": "2024-04-04T18:03:18.5111144Z",
          "duration": "PT0.0004843S",
          "correlationId": "821cef6e-1325-4d9f-9f9e-40c02d9e4434",
          "providers": [
            {
              "namespace": "Microsoft.Storage",
              "resourceTypes": [
                {
                  "resourceType": "storageAccounts",
                  "locations": [
                    "centraluseuap"
                  ]
                }
              ]
            },
            {
              "namespace": "Microsoft.KeyVault",
              "resourceTypes": [
                {
                  "resourceType": "vaults",
                  "locations": [
                    "centraluseuap"
                  ]
                }
              ]
            },
            {
              "namespace": "Microsoft.OperationalInsights",
              "resourceTypes": [
                {
                  "resourceType": "workspaces",
                  "locations": [
                    "southcentralus"
                  ]
                }
              ]
            },
            {
              "namespace": "Microsoft.Insights",
              "resourceTypes": [
                {
                  "resourceType": "components",
                  "locations": [
                    "southcentralus"
                  ]
                }
              ]
            },
            {
              "namespace": "Microsoft.MachineLearningServices",
              "resourceTypes": [
                {
                  "resourceType": "workspaces",
                  "locations": [
                    "centraluseuap"
                  ]
                }
              ]
            }
          ],
          "dependencies": [
            {
              "dependsOn": [
                {
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa",
                  "resourceType": "Microsoft.OperationalInsights/workspaces",
                  "resourceName": "e2etesttlogalytid49c92aa"
                }
              ],
              "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Insights/components/e2etesttinsightsae72b92c",
              "resourceType": "Microsoft.Insights/components",
              "resourceName": "e2etesttinsightsae72b92c"
            },
            {
              "dependsOn": [
                {
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/e2etesttstorage2518e3d32",
                  "resourceType": "Microsoft.Storage/storageAccounts",
                  "resourceName": "e2etesttstorage2518e3d32"
                },
                {
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.KeyVault/vaults/e2etesttkeyvault8a00333b",
                  "resourceType": "Microsoft.KeyVault/vaults",
                  "resourceName": "e2etesttkeyvault8a00333b"
                },
                {
                  "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Insights/components/e2etesttinsightsae72b92c",
                  "resourceType": "Microsoft.Insights/components",
                  "resourceName": "e2etesttinsightsae72b92c"
                }
              ],
              "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/e2etest_test_28423736121_mvnet",
              "resourceType": "Microsoft.MachineLearningServices/workspaces",
              "resourceName": "e2etest_test_28423736121_mvnet"
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operationStatuses/08584893530883635328?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:18 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f1c1e9bc-265d-4d84-bac5-e0bd607f16b2",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-routing-request-id": "EASTUS2:20240404T180318Z:f1c1e9bc-265d-4d84-bac5-e0bd607f16b2",
        "X-MSEdge-Ref": "Ref A: ED2F09B0329E4A5282EA37EB7CF55628 Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:18Z"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/deployments/e2etest_test_28423736121_mvnet-1091835/operations?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "2108",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:23 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "c3c5aec2-872d-4d04-a473-3d0159ef0ecb",
        "x-ms-ratelimit-remaining-subscription-reads": "11998",
        "x-ms-routing-request-id": "EASTUS2:20240404T180323Z:c3c5aec2-872d-4d04-a473-3d0159ef0ecb",
        "X-MSEdge-Ref": "Ref A: 7325DF6C4A6A4C41A9DBDE66A4E2B1CC Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:23Z"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B24012A1EA8B06EF",
            "operationId": "B24012A1EA8B06EF",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Running",
              "timestamp": "2024-04-04T18:03:21.8081043Z",
              "duration": "PT3.1435142S",
              "trackingId": "c1e8dd5f-aa3d-458a-9f74-8daae63ad920",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.KeyVault/vaults/e2etesttkeyvault8a00333b",
                "resourceType": "Microsoft.KeyVault/vaults",
                "resourceName": "e2etesttkeyvault8a00333b"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/005E019A1CB6F6A4",
            "operationId": "005E019A1CB6F6A4",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Running",
              "timestamp": "2024-04-04T18:03:21.5798309Z",
              "duration": "PT2.9152408S",
              "trackingId": "f243cc3a-c81b-484a-bac6-b275c03b6b62",
              "statusCode": "Accepted",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/e2etesttstorage2518e3d32",
                "resourceType": "Microsoft.Storage/storageAccounts",
                "resourceName": "e2etesttstorage2518e3d32"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/01B6C1F5BCF89CA1",
            "operationId": "01B6C1F5BCF89CA1",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Running",
              "timestamp": "2024-04-04T18:03:19.9180388Z",
              "duration": "PT1.2534487S",
              "trackingId": "5323fbf7-a3b3-450d-94ff-add3e498cb57",
              "statusCode": "Created",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa",
                "resourceType": "Microsoft.OperationalInsights/workspaces",
                "resourceName": "e2etesttlogalytid49c92aa"
              }
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operationStatuses/08584893530883635328?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:23 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "bc4b3cf5-6c6f-4440-896f-1219837d2885",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-routing-request-id": "EASTUS2:20240404T180324Z:bc4b3cf5-6c6f-4440-896f-1219837d2885",
        "X-MSEdge-Ref": "Ref A: AE61383E69A444EA9C329A89ABA7FDD6 Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:23Z"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/deployments/e2etest_test_28423736121_mvnet-1091835/operations?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "2108",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:28 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "0bed3ef8-91e8-4542-8a82-71242e8a6aeb",
        "x-ms-ratelimit-remaining-subscription-reads": "11997",
        "x-ms-routing-request-id": "EASTUS2:20240404T180328Z:0bed3ef8-91e8-4542-8a82-71242e8a6aeb",
        "X-MSEdge-Ref": "Ref A: 8BF51802FE274AF8B2675D8FB7FFCE10 Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:28Z"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B24012A1EA8B06EF",
            "operationId": "B24012A1EA8B06EF",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Running",
              "timestamp": "2024-04-04T18:03:21.8081043Z",
              "duration": "PT3.1435142S",
              "trackingId": "c1e8dd5f-aa3d-458a-9f74-8daae63ad920",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.KeyVault/vaults/e2etesttkeyvault8a00333b",
                "resourceType": "Microsoft.KeyVault/vaults",
                "resourceName": "e2etesttkeyvault8a00333b"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/005E019A1CB6F6A4",
            "operationId": "005E019A1CB6F6A4",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Running",
              "timestamp": "2024-04-04T18:03:21.5798309Z",
              "duration": "PT2.9152408S",
              "trackingId": "f243cc3a-c81b-484a-bac6-b275c03b6b62",
              "statusCode": "Accepted",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/e2etesttstorage2518e3d32",
                "resourceType": "Microsoft.Storage/storageAccounts",
                "resourceName": "e2etesttstorage2518e3d32"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/01B6C1F5BCF89CA1",
            "operationId": "01B6C1F5BCF89CA1",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Running",
              "timestamp": "2024-04-04T18:03:19.9180388Z",
              "duration": "PT1.2534487S",
              "trackingId": "5323fbf7-a3b3-450d-94ff-add3e498cb57",
              "statusCode": "Created",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa",
                "resourceType": "Microsoft.OperationalInsights/workspaces",
                "resourceName": "e2etesttlogalytid49c92aa"
              }
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operationStatuses/08584893530883635328?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:28 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "5622979d-1702-4421-98c2-5b7d95b3f9b0",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-routing-request-id": "EASTUS2:20240404T180329Z:5622979d-1702-4421-98c2-5b7d95b3f9b0",
        "X-MSEdge-Ref": "Ref A: ECB816063A1F4BD4B9A56A795FE5E606 Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:29Z"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/deployments/e2etest_test_28423736121_mvnet-1091835/operations?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "2108",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:33 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8f62d330-a3a0-485c-9005-70904f46b382",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-routing-request-id": "EASTUS2:20240404T180334Z:8f62d330-a3a0-485c-9005-70904f46b382",
        "X-MSEdge-Ref": "Ref A: 679F8C5E28884A9D993C0342A03A6C2A Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:33Z"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B24012A1EA8B06EF",
            "operationId": "B24012A1EA8B06EF",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Running",
              "timestamp": "2024-04-04T18:03:21.8081043Z",
              "duration": "PT3.1435142S",
              "trackingId": "c1e8dd5f-aa3d-458a-9f74-8daae63ad920",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.KeyVault/vaults/e2etesttkeyvault8a00333b",
                "resourceType": "Microsoft.KeyVault/vaults",
                "resourceName": "e2etesttkeyvault8a00333b"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/005E019A1CB6F6A4",
            "operationId": "005E019A1CB6F6A4",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Running",
              "timestamp": "2024-04-04T18:03:21.5798309Z",
              "duration": "PT2.9152408S",
              "trackingId": "f243cc3a-c81b-484a-bac6-b275c03b6b62",
              "statusCode": "Accepted",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/e2etesttstorage2518e3d32",
                "resourceType": "Microsoft.Storage/storageAccounts",
                "resourceName": "e2etesttstorage2518e3d32"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/01B6C1F5BCF89CA1",
            "operationId": "01B6C1F5BCF89CA1",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Running",
              "timestamp": "2024-04-04T18:03:19.9180388Z",
              "duration": "PT1.2534487S",
              "trackingId": "5323fbf7-a3b3-450d-94ff-add3e498cb57",
              "statusCode": "Created",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa",
                "resourceType": "Microsoft.OperationalInsights/workspaces",
                "resourceName": "e2etesttlogalytid49c92aa"
              }
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operationStatuses/08584893530883635328?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:33 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "3199ed5d-6f01-463b-a72a-066c425be3da",
        "x-ms-ratelimit-remaining-subscription-reads": "11992",
        "x-ms-routing-request-id": "EASTUS2:20240404T180334Z:3199ed5d-6f01-463b-a72a-066c425be3da",
        "X-MSEdge-Ref": "Ref A: 7C41EDFA9F4440149AAF5616A22F4515 Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:34Z"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/deployments/e2etest_test_28423736121_mvnet-1091835/operations?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "2797",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:38 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "bd61ebaa-67b5-4465-a114-9fcbdc76d0d2",
        "x-ms-ratelimit-remaining-subscription-reads": "11997",
        "x-ms-routing-request-id": "EASTUS2:20240404T180339Z:bd61ebaa-67b5-4465-a114-9fcbdc76d0d2",
        "X-MSEdge-Ref": "Ref A: 06005381C19E495EB8D1B35EC248236A Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:39Z"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B1FF441A568C94EC",
            "operationId": "B1FF441A568C94EC",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:37.2820152Z",
              "duration": "PT18.6174251S",
              "trackingId": "65522e5e-c698-43da-88a0-98a63ddfacdf",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Insights/components/e2etesttinsightsae72b92c",
                "resourceType": "Microsoft.Insights/components",
                "resourceName": "e2etesttinsightsae72b92c"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B24012A1EA8B06EF",
            "operationId": "B24012A1EA8B06EF",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:37.1236839Z",
              "duration": "PT18.4590938S",
              "trackingId": "2ec64d6d-ad1f-4c76-a97b-e4c02ba9bb5f",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.KeyVault/vaults/e2etesttkeyvault8a00333b",
                "resourceType": "Microsoft.KeyVault/vaults",
                "resourceName": "e2etesttkeyvault8a00333b"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/005E019A1CB6F6A4",
            "operationId": "005E019A1CB6F6A4",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:38.9404278Z",
              "duration": "PT20.2758377S",
              "trackingId": "bfba2de5-e48d-49a1-970f-e3e331cee0ea",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/e2etesttstorage2518e3d32",
                "resourceType": "Microsoft.Storage/storageAccounts",
                "resourceName": "e2etesttstorage2518e3d32"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/01B6C1F5BCF89CA1",
            "operationId": "01B6C1F5BCF89CA1",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:35.3450996Z",
              "duration": "PT16.6805095S",
              "trackingId": "d6e0827c-0363-4fed-bdb8-1f735aa93af9",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa",
                "resourceType": "Microsoft.OperationalInsights/workspaces",
                "resourceName": "e2etesttlogalytid49c92aa"
              }
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operationStatuses/08584893530883635328?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:39 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "313ff269-1dde-48fd-9d0c-0f19191c466a",
        "x-ms-ratelimit-remaining-subscription-reads": "11998",
        "x-ms-routing-request-id": "EASTUS2:20240404T180339Z:313ff269-1dde-48fd-9d0c-0f19191c466a",
        "X-MSEdge-Ref": "Ref A: 93B80108C25644FDACCB71F4576F7B66 Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:39Z"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/deployments/e2etest_test_28423736121_mvnet-1091835/operations?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "3849",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:44 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "65f730d4-142a-4adb-8f90-98e61079c2b8",
        "x-ms-ratelimit-remaining-subscription-reads": "11988",
        "x-ms-routing-request-id": "EASTUS2:20240404T180344Z:65f730d4-142a-4adb-8f90-98e61079c2b8",
        "X-MSEdge-Ref": "Ref A: AD9E73FAB0D244A8AC92C8BDFC6346E7 Ref B: MNZ221060609017 Ref C: 2024-04-04T18:03:44Z"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/33D3FAC17B4D4007",
            "operationId": "33D3FAC17B4D4007",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Failed",
              "timestamp": "2024-04-04T18:03:43.153086Z",
              "duration": "PT4.1401219S",
              "trackingId": "55eac1dc-9b60-4485-a405-d844140d55a4",
              "statusCode": "BadRequest",
              "statusMessage": {
                "status": "Failed",
                "error": {
                  "code": "UserError",
                  "message": "User does not have permission to approve private link connections to resource: /subscriptions/0caf7ec9-615a-4491-bad8-64ce023324e1/resourceGroups/joharrin-sdk-tests/providers/Microsoft.Storage/storageAccounts/mvnetteststorage",
                  "details": []
                }
              },
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/e2etest_test_28423736121_mvnet",
                "resourceType": "Microsoft.MachineLearningServices/workspaces",
                "resourceName": "e2etest_test_28423736121_mvnet"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B1FF441A568C94EC",
            "operationId": "B1FF441A568C94EC",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:37.2820152Z",
              "duration": "PT18.6174251S",
              "trackingId": "65522e5e-c698-43da-88a0-98a63ddfacdf",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Insights/components/e2etesttinsightsae72b92c",
                "resourceType": "Microsoft.Insights/components",
                "resourceName": "e2etesttinsightsae72b92c"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B24012A1EA8B06EF",
            "operationId": "B24012A1EA8B06EF",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:37.1236839Z",
              "duration": "PT18.4590938S",
              "trackingId": "2ec64d6d-ad1f-4c76-a97b-e4c02ba9bb5f",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.KeyVault/vaults/e2etesttkeyvault8a00333b",
                "resourceType": "Microsoft.KeyVault/vaults",
                "resourceName": "e2etesttkeyvault8a00333b"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/005E019A1CB6F6A4",
            "operationId": "005E019A1CB6F6A4",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:38.9404278Z",
              "duration": "PT20.2758377S",
              "trackingId": "bfba2de5-e48d-49a1-970f-e3e331cee0ea",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/e2etesttstorage2518e3d32",
                "resourceType": "Microsoft.Storage/storageAccounts",
                "resourceName": "e2etesttstorage2518e3d32"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/01B6C1F5BCF89CA1",
            "operationId": "01B6C1F5BCF89CA1",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:35.3450996Z",
              "duration": "PT16.6805095S",
              "trackingId": "d6e0827c-0363-4fed-bdb8-1f735aa93af9",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa",
                "resourceType": "Microsoft.OperationalInsights/workspaces",
                "resourceName": "e2etesttlogalytid49c92aa"
              }
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operationStatuses/08584893530883635328?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1207",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:44 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "77076f07-9780-48a6-9ef1-db9cd4cd4789",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-routing-request-id": "EASTUS2:20240404T180344Z:77076f07-9780-48a6-9ef1-db9cd4cd4789",
        "X-MSEdge-Ref": "Ref A: 41BF9E5576F14E14A54B99E6DB9AF5DB Ref B: MNZ221060610039 Ref C: 2024-04-04T18:03:44Z"
      },
      "ResponseBody": {
        "status": "Failed",
        "error": {
          "code": "DeploymentFailed",
          "message": "At least one resource deployment operation failed. Please list deployment operations for details. Please see https://aka.ms/arm-deployment-operations for usage details.",
          "details": [
            {
              "code": "BadRequest",
              "message": "{\r\n  \u0022error\u0022: {\r\n    \u0022code\u0022: \u0022UserError\u0022,\r\n    \u0022severity\u0022: null,\r\n    \u0022message\u0022: \u0022User does not have permission to approve private link connections to resource: /subscriptions/0caf7ec9-615a-4491-bad8-64ce023324e1/resourceGroups/joharrin-sdk-tests/providers/Microsoft.Storage/storageAccounts/mvnetteststorage\u0022,\r\n    \u0022messageFormat\u0022: null,\r\n    \u0022messageParameters\u0022: null,\r\n    \u0022referenceCode\u0022: null,\r\n    \u0022detailsUri\u0022: null,\r\n    \u0022target\u0022: null,\r\n    \u0022details\u0022: [],\r\n    \u0022innerError\u0022: null,\r\n    \u0022debugInfo\u0022: null,\r\n    \u0022additionalInfo\u0022: null\r\n  },\r\n  \u0022correlation\u0022: {\r\n    \u0022operation\u0022: \u00220869f9e8af35f490913f07cd1dd167c8\u0022,\r\n    \u0022request\u0022: \u0022b8445eb5a78fd41f\u0022\r\n  },\r\n  \u0022environment\u0022: \u0022int\u0022,\r\n  \u0022location\u0022: \u0022westus3\u0022,\r\n  \u0022time\u0022: \u00222024-04-04T18:03:42.4395874\u002B00:00\u0022,\r\n  \u0022componentName\u0022: \u0022account-rp\u0022,\r\n  \u0022statusCode\u0022: 400\r\n}"
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/deployments/e2etest_test_28423736121_mvnet-1091835/operations?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "3849",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:49 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "c4fb6501-760e-481f-86ab-427180199a18",
        "x-ms-ratelimit-remaining-subscription-reads": "11996",
        "x-ms-routing-request-id": "EASTUS2:20240404T180349Z:c4fb6501-760e-481f-86ab-427180199a18",
        "X-MSEdge-Ref": "Ref A: 88C994CCE4844A4F826600F505EEC3B3 Ref B: MNZ221060610039 Ref C: 2024-04-04T18:03:49Z"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/33D3FAC17B4D4007",
            "operationId": "33D3FAC17B4D4007",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Failed",
              "timestamp": "2024-04-04T18:03:43.153086Z",
              "duration": "PT4.1401219S",
              "trackingId": "55eac1dc-9b60-4485-a405-d844140d55a4",
              "statusCode": "BadRequest",
              "statusMessage": {
                "status": "Failed",
                "error": {
                  "code": "UserError",
                  "message": "User does not have permission to approve private link connections to resource: /subscriptions/0caf7ec9-615a-4491-bad8-64ce023324e1/resourceGroups/joharrin-sdk-tests/providers/Microsoft.Storage/storageAccounts/mvnetteststorage",
                  "details": []
                }
              },
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/e2etest_test_28423736121_mvnet",
                "resourceType": "Microsoft.MachineLearningServices/workspaces",
                "resourceName": "e2etest_test_28423736121_mvnet"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B1FF441A568C94EC",
            "operationId": "B1FF441A568C94EC",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:37.2820152Z",
              "duration": "PT18.6174251S",
              "trackingId": "65522e5e-c698-43da-88a0-98a63ddfacdf",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Insights/components/e2etesttinsightsae72b92c",
                "resourceType": "Microsoft.Insights/components",
                "resourceName": "e2etesttinsightsae72b92c"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B24012A1EA8B06EF",
            "operationId": "B24012A1EA8B06EF",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:37.1236839Z",
              "duration": "PT18.4590938S",
              "trackingId": "2ec64d6d-ad1f-4c76-a97b-e4c02ba9bb5f",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.KeyVault/vaults/e2etesttkeyvault8a00333b",
                "resourceType": "Microsoft.KeyVault/vaults",
                "resourceName": "e2etesttkeyvault8a00333b"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/005E019A1CB6F6A4",
            "operationId": "005E019A1CB6F6A4",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:38.9404278Z",
              "duration": "PT20.2758377S",
              "trackingId": "bfba2de5-e48d-49a1-970f-e3e331cee0ea",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/e2etesttstorage2518e3d32",
                "resourceType": "Microsoft.Storage/storageAccounts",
                "resourceName": "e2etesttstorage2518e3d32"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/01B6C1F5BCF89CA1",
            "operationId": "01B6C1F5BCF89CA1",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:35.3450996Z",
              "duration": "PT16.6805095S",
              "trackingId": "d6e0827c-0363-4fed-bdb8-1f735aa93af9",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa",
                "resourceType": "Microsoft.OperationalInsights/workspaces",
                "resourceName": "e2etesttlogalytid49c92aa"
              }
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/deployments/e2etest_test_28423736121_mvnet-1091835/operations?api-version=2020-06-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-mgmt-resource/15.0.0 Python/3.10.2 (Linux-5.15.146.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "3849",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 04 Apr 2024 18:03:49 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "bc2bdcee-21ec-4432-aca4-bce2c29e0fc5",
        "x-ms-ratelimit-remaining-subscription-reads": "11996",
        "x-ms-routing-request-id": "EASTUS2:20240404T180350Z:bc2bdcee-21ec-4432-aca4-bce2c29e0fc5",
        "X-MSEdge-Ref": "Ref A: 4719EBBC15DB4120B4A0C4E388006AEA Ref B: MNZ221060610039 Ref C: 2024-04-04T18:03:49Z"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/33D3FAC17B4D4007",
            "operationId": "33D3FAC17B4D4007",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Failed",
              "timestamp": "2024-04-04T18:03:43.153086Z",
              "duration": "PT4.1401219S",
              "trackingId": "55eac1dc-9b60-4485-a405-d844140d55a4",
              "statusCode": "BadRequest",
              "statusMessage": {
                "status": "Failed",
                "error": {
                  "code": "UserError",
                  "message": "User does not have permission to approve private link connections to resource: /subscriptions/0caf7ec9-615a-4491-bad8-64ce023324e1/resourceGroups/joharrin-sdk-tests/providers/Microsoft.Storage/storageAccounts/mvnetteststorage",
                  "details": []
                }
              },
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/e2etest_test_28423736121_mvnet",
                "resourceType": "Microsoft.MachineLearningServices/workspaces",
                "resourceName": "e2etest_test_28423736121_mvnet"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B1FF441A568C94EC",
            "operationId": "B1FF441A568C94EC",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:37.2820152Z",
              "duration": "PT18.6174251S",
              "trackingId": "65522e5e-c698-43da-88a0-98a63ddfacdf",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Insights/components/e2etesttinsightsae72b92c",
                "resourceType": "Microsoft.Insights/components",
                "resourceName": "e2etesttinsightsae72b92c"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/B24012A1EA8B06EF",
            "operationId": "B24012A1EA8B06EF",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:37.1236839Z",
              "duration": "PT18.4590938S",
              "trackingId": "2ec64d6d-ad1f-4c76-a97b-e4c02ba9bb5f",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.KeyVault/vaults/e2etesttkeyvault8a00333b",
                "resourceType": "Microsoft.KeyVault/vaults",
                "resourceName": "e2etesttkeyvault8a00333b"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/005E019A1CB6F6A4",
            "operationId": "005E019A1CB6F6A4",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:38.9404278Z",
              "duration": "PT20.2758377S",
              "trackingId": "bfba2de5-e48d-49a1-970f-e3e331cee0ea",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/e2etesttstorage2518e3d32",
                "resourceType": "Microsoft.Storage/storageAccounts",
                "resourceName": "e2etesttstorage2518e3d32"
              }
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Resources/deployments/e2etest_test_28423736121_mvnet-1091835/operations/01B6C1F5BCF89CA1",
            "operationId": "01B6C1F5BCF89CA1",
            "properties": {
              "provisioningOperation": "Create",
              "provisioningState": "Succeeded",
              "timestamp": "2024-04-04T18:03:35.3450996Z",
              "duration": "PT16.6805095S",
              "trackingId": "d6e0827c-0363-4fed-bdb8-1f735aa93af9",
              "statusCode": "OK",
              "targetResource": {
                "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.OperationalInsights/workspaces/e2etesttlogalytid49c92aa",
                "resourceType": "Microsoft.OperationalInsights/workspaces",
                "resourceName": "e2etesttlogalytid49c92aa"
              }
            }
          }
        ]
      }
    }
  ],
  "Variables": {
    "deployment_name": "e2etest_test_28423736121_mvnet-1091835",
    "insights_name": "e2etesttinsightsae72b92c",
    "keyvault_name": "e2etesttkeyvault8a00333b",
    "logalytics_name": "e2etesttlogalytid49c92aa",
    "storage_name": "e2etesttstorage2518e3d32",
    "wps_name": "test_28423736121"
  }
}
