{
  "Entries": [
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist_model/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1819",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:03 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "ea2b5de4-98e1-4ecc-a508-f65f43cd22bb",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121003Z:ea2b5de4-98e1-4ecc-a508-f65f43cd22bb",
        "X-MSEdge-Ref": "Ref A: 674481C936944C8199A0C3B70415FA9D Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:03Z",
        "x-request-time": "0.261"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "User error when calling GenericAssetMLIndexServiceClient.MoveNext. Service invocation failed!\r\nRequest: GET westus.api.azureml.ms/genericasset/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/indexes/mltable_mnist_model/versions/2\r\nStatus Code: 404 NotFound\r\nError Code: UserError/NotFoundError\r\nReason Phrase: Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/inde\r\nResponse Body: {\"error\":{\"code\":\"UserError\",\"message\":\"Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/indexes/mltable_mnist_model/versions/2 and tenantId:  was not found\",\"details\":[],\"innerError\":{\"code\":\"NotFoundError\"}},\"correlation\":{\"operation\":\"ce206d2100c224eff5771cc0feec5391\",\"request\":\"ce3daa465307ff2b\"},\"environment\":\"westus\",\"location\":\"westus\",\"time\":\"2025-03-18T12:10:03.6906349+00:00\",\"componentName\":\"genericasset\",\"statusCode\":404}",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "ce206d2100c224eff5771cc0feec5391",
                  "request": "92cf2be50262d870"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2025-03-18T12:10:03.7019581+00:00"
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-core/1.31.1 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json",
        "Date": "Tue, 18 Mar 2025 12:10:05 GMT",
        "ETag": "W/\"0x8DD625A848D53C6\"",
        "Last-Modified": "Thu, 13 Mar 2025 18:11:46 GMT",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-azure-ref": "Sanitized",
        "X-Cache": "TCP_MISS",
        "x-fd-int-roxy-purgeid": "47892535",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2024-07-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "888",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:07 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8ab5d99c-b3c6-4a45-a137-1f8e31798234",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121008Z:8ab5d99c-b3c6-4a45-a137-1f8e31798234",
        "X-MSEdge-Ref": "Ref A: A4AC665E8EA3445596FC3E3111BF4700 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:07Z",
        "x-request-time": "0.094"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "subscriptionId": "00000000-0000-0000-0000-000000000",
          "resourceGroup": "00000",
          "datastoreType": "AzureBlob",
          "accountName": "Sanitized",
          "containerName": "azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2025-03-18T09:24:59.629721+00:00",
          "lastModifiedAt": "2025-03-18T09:25:00.8938439+00:00",
          "lastModifiedBy": "Sanitized",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2024-07-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "48",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "expirableSecret": true,
        "expireAfterHours": 1
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "134",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:08 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b8ffe79c-1e6f-4f8f-90a1-5bad4413133f",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121009Z:b8ffe79c-1e6f-4f8f-90a1-5bad4413133f",
        "X-MSEdge-Ref": "Ref A: 4A858F363A644094AEC4107F4DB9AB10 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:08Z",
        "x-request-time": "0.122"
      },
      "ResponseBody": {
        "secretsType": "Sas",
        "sasToken": "?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl"
      }
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/LocalUpload/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:08 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Tue, 18 Mar 2025 12:10:09 GMT",
        "ETag": "\"0x8DD66117877A0A6\"",
        "Last-Modified": "Tue, 18 Mar 2025 11:38:57 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Tue, 18 Mar 2025 11:38:57 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "c69e6763-d9f6-4f35-8af3-c847bcf90f86",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "9eaf78d1-f01e-46eb-b487-0ed573ad760b",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:08 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 18 Mar 2025 12:10:09 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist_model/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "863",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:11 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist_model/versions/2?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b8b5c012-1167-4b8b-831b-1d81322ce9a1",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121012Z:b8b5c012-1167-4b8b-831b-1d81322ce9a1",
        "X-MSEdge-Ref": "Ref A: 51F46D55DCA8476DA66453C78D097C9A Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:09Z",
        "x-request-time": "0.978"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist_model/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "autoDeleteSetting": null,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "stage": null,
          "intellectualProperty": null,
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2025-03-18T12:10:11.6362856+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User",
          "lastModifiedAt": "2025-03-18T12:10:11.6526565+00:00"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1807",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:13 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8e982a51-cf57-499b-b9f5-8ca769396161",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121013Z:8e982a51-cf57-499b-b9f5-8ca769396161",
        "X-MSEdge-Ref": "Ref A: 7B1335709FB248C0BD4F1D973EDE1F4D Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:12Z",
        "x-request-time": "0.347"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "User error when calling GenericAssetMLIndexServiceClient.MoveNext. Service invocation failed!\r\nRequest: GET westus.api.azureml.ms/genericasset/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/indexes/mltable_mnist/versions/2\r\nStatus Code: 404 NotFound\r\nError Code: UserError/NotFoundError\r\nReason Phrase: Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/inde\r\nResponse Body: {\"error\":{\"code\":\"UserError\",\"message\":\"Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/indexes/mltable_mnist/versions/2 and tenantId:  was not found\",\"details\":[],\"innerError\":{\"code\":\"NotFoundError\"}},\"correlation\":{\"operation\":\"568bdc5bdd2a221c444e3e98dc1709cd\",\"request\":\"1845d9bf5d39edd2\"},\"environment\":\"westus\",\"location\":\"westus\",\"time\":\"2025-03-18T12:10:13.4380108+00:00\",\"componentName\":\"genericasset\",\"statusCode\":404}",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "568bdc5bdd2a221c444e3e98dc1709cd",
                  "request": "df124bfdbe50fdb3"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2025-03-18T12:10:13.4523064+00:00"
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-core/1.31.1 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json",
        "Date": "Tue, 18 Mar 2025 12:10:13 GMT",
        "ETag": "W/\"0x8DD625A848D53C6\"",
        "Last-Modified": "Thu, 13 Mar 2025 18:11:46 GMT",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-azure-ref": "Sanitized",
        "X-Cache": "TCP_HIT",
        "x-fd-int-roxy-purgeid": "47892535",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2024-07-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "888",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:14 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "9f256fed-02ae-4106-8406-5b49fd023cdf",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121014Z:9f256fed-02ae-4106-8406-5b49fd023cdf",
        "X-MSEdge-Ref": "Ref A: 293FC2E05B3141768DDE631673834DA8 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:13Z",
        "x-request-time": "0.104"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "subscriptionId": "00000000-0000-0000-0000-000000000",
          "resourceGroup": "00000",
          "datastoreType": "AzureBlob",
          "accountName": "Sanitized",
          "containerName": "azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2025-03-18T09:24:59.629721+00:00",
          "lastModifiedAt": "2025-03-18T09:25:00.8938439+00:00",
          "lastModifiedBy": "Sanitized",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2024-07-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "48",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "expirableSecret": true,
        "expireAfterHours": 1
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "134",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:16 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "3608a739-3a07-4dd0-a3a3-cd31895290ac",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121016Z:3608a739-3a07-4dd0-a3a3-cd31895290ac",
        "X-MSEdge-Ref": "Ref A: 024FEEE0C43C4803A5488B93A4279CBF Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:15Z",
        "x-request-time": "0.116"
      },
      "ResponseBody": {
        "secretsType": "Sas",
        "sasToken": "?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl"
      }
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/LocalUpload/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:15 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Tue, 18 Mar 2025 12:10:16 GMT",
        "ETag": "\"0x8DD66117877A0A6\"",
        "Last-Modified": "Tue, 18 Mar 2025 11:38:57 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Tue, 18 Mar 2025 11:38:57 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "c69e6763-d9f6-4f35-8af3-c847bcf90f86",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "9eaf78d1-f01e-46eb-b487-0ed573ad760b",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:16 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 18 Mar 2025 12:10:16 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "857",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:18 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist/versions/2?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "a950be64-cdaa-4b46-b7ba-965fdba8ec8b",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121018Z:a950be64-cdaa-4b46-b7ba-965fdba8ec8b",
        "X-MSEdge-Ref": "Ref A: B2AEB388C4ED4B4488F322B9A643DEC6 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:16Z",
        "x-request-time": "0.579"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_mnist/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "autoDeleteSetting": null,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "stage": null,
          "intellectualProperty": null,
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2025-03-18T12:10:18.0590579+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User",
          "lastModifiedAt": "2025-03-18T12:10:18.0726745+00:00"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_imdb_reviews_train/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1832",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:19 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d947a1d8-81af-4b9a-bd29-182773f70ddb",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121019Z:d947a1d8-81af-4b9a-bd29-182773f70ddb",
        "X-MSEdge-Ref": "Ref A: 5C76D2B0DCA24352AE41E4F094BF856F Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:18Z",
        "x-request-time": "0.283"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "User error when calling GenericAssetMLIndexServiceClient.MoveNext. Service invocation failed!\r\nRequest: GET westus.api.azureml.ms/genericasset/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/indexes/mltable_imdb_reviews_train/versions/2\r\nStatus Code: 404 NotFound\r\nError Code: UserError/NotFoundError\r\nReason Phrase: Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/inde\r\nResponse Body: {\"error\":{\"code\":\"UserError\",\"message\":\"Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/indexes/mltable_imdb_reviews_train/versions/2 and tenantId:  was not found\",\"details\":[],\"innerError\":{\"code\":\"NotFoundError\"}},\"correlation\":{\"operation\":\"ba413e004b22e72b4b4316bf17dedf2a\",\"request\":\"4661ea5cfd8e649b\"},\"environment\":\"westus\",\"location\":\"westus\",\"time\":\"2025-03-18T12:10:19.7749205+00:00\",\"componentName\":\"genericasset\",\"statusCode\":404}",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "ba413e004b22e72b4b4316bf17dedf2a",
                  "request": "cdf92795f045b964"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2025-03-18T12:10:19.779974+00:00"
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-core/1.31.1 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json",
        "Date": "Tue, 18 Mar 2025 12:10:19 GMT",
        "ETag": "W/\"0x8DD625A848D53C6\"",
        "Last-Modified": "Thu, 13 Mar 2025 18:11:46 GMT",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-azure-ref": "Sanitized",
        "X-Cache": "TCP_HIT",
        "x-fd-int-roxy-purgeid": "47892535",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2024-07-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "888",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:20 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "e6602aa5-99c8-4f49-9a9c-0d8650a14a19",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121020Z:e6602aa5-99c8-4f49-9a9c-0d8650a14a19",
        "X-MSEdge-Ref": "Ref A: 26A05B5463BE4DF58E33CCB4EA9F21A9 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:20Z",
        "x-request-time": "0.085"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "subscriptionId": "00000000-0000-0000-0000-000000000",
          "resourceGroup": "00000",
          "datastoreType": "AzureBlob",
          "accountName": "Sanitized",
          "containerName": "azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2025-03-18T09:24:59.629721+00:00",
          "lastModifiedAt": "2025-03-18T09:25:00.8938439+00:00",
          "lastModifiedBy": "Sanitized",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2024-07-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "48",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "expirableSecret": true,
        "expireAfterHours": 1
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "134",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:21 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "7f524423-e719-4fa5-92b0-1b32f19cc04a",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121021Z:7f524423-e719-4fa5-92b0-1b32f19cc04a",
        "X-MSEdge-Ref": "Ref A: A9C7F7A7036E4126865C80DF67EAA445 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:20Z",
        "x-request-time": "0.148"
      },
      "ResponseBody": {
        "secretsType": "Sas",
        "sasToken": "?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl"
      }
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/LocalUpload/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:21 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Tue, 18 Mar 2025 12:10:21 GMT",
        "ETag": "\"0x8DD66117877A0A6\"",
        "Last-Modified": "Tue, 18 Mar 2025 11:38:57 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Tue, 18 Mar 2025 11:38:57 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "c69e6763-d9f6-4f35-8af3-c847bcf90f86",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "9eaf78d1-f01e-46eb-b487-0ed573ad760b",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:21 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 18 Mar 2025 12:10:21 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_imdb_reviews_train/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "869",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:24 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_imdb_reviews_train/versions/2?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "613ef232-62fa-4d63-953a-35dac5c50c79",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121024Z:613ef232-62fa-4d63-953a-35dac5c50c79",
        "X-MSEdge-Ref": "Ref A: 7B54E883F01141CAAC0D882E0B3CF575 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:22Z",
        "x-request-time": "0.313"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_imdb_reviews_train/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "autoDeleteSetting": null,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "stage": null,
          "intellectualProperty": null,
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2025-03-18T12:10:23.784256+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User",
          "lastModifiedAt": "2025-03-18T12:10:23.7975254+00:00"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_Adls_Tsv/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1812",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:25 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f2e1c1d0-a005-4d70-9540-ee986544594f",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121025Z:f2e1c1d0-a005-4d70-9540-ee986544594f",
        "X-MSEdge-Ref": "Ref A: B03DF0CC25F94678B63831798BC089B9 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:24Z",
        "x-request-time": "0.210"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "User error when calling GenericAssetMLIndexServiceClient.MoveNext. Service invocation failed!\r\nRequest: GET westus.api.azureml.ms/genericasset/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/indexes/mltable_Adls_Tsv/versions/2\r\nStatus Code: 404 NotFound\r\nError Code: UserError/NotFoundError\r\nReason Phrase: Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/inde\r\nResponse Body: {\"error\":{\"code\":\"UserError\",\"message\":\"Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/indexes/mltable_Adls_Tsv/versions/2 and tenantId:  was not found\",\"details\":[],\"innerError\":{\"code\":\"NotFoundError\"}},\"correlation\":{\"operation\":\"1749eee470834b57b12f567fcaa71ada\",\"request\":\"96f7f7d487c31282\"},\"environment\":\"westus\",\"location\":\"westus\",\"time\":\"2025-03-18T12:10:25.406927+00:00\",\"componentName\":\"genericasset\",\"statusCode\":404}",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "1749eee470834b57b12f567fcaa71ada",
                  "request": "69d049b91c129125"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2025-03-18T12:10:25.4279621+00:00"
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-core/1.31.1 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json",
        "Date": "Tue, 18 Mar 2025 12:10:25 GMT",
        "ETag": "W/\"0x8DD625A848D53C6\"",
        "Last-Modified": "Thu, 13 Mar 2025 18:11:46 GMT",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-azure-ref": "Sanitized",
        "X-Cache": "TCP_HIT",
        "x-fd-int-roxy-purgeid": "47892535",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2024-07-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "888",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:26 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "fdc4e14b-d181-448b-810a-825af6ad23a3",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121026Z:fdc4e14b-d181-448b-810a-825af6ad23a3",
        "X-MSEdge-Ref": "Ref A: C53A6A4E822943898CF892BD659A1759 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:25Z",
        "x-request-time": "0.096"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "subscriptionId": "00000000-0000-0000-0000-000000000",
          "resourceGroup": "00000",
          "datastoreType": "AzureBlob",
          "accountName": "Sanitized",
          "containerName": "azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2025-03-18T09:24:59.629721+00:00",
          "lastModifiedAt": "2025-03-18T09:25:00.8938439+00:00",
          "lastModifiedBy": "Sanitized",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2024-07-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "48",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "expirableSecret": true,
        "expireAfterHours": 1
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "134",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:27 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "1d9d42f4-8723-4376-96b0-a46efcfd9512",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11998",
        "x-ms-ratelimit-remaining-subscription-writes": "798",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121027Z:1d9d42f4-8723-4376-96b0-a46efcfd9512",
        "X-MSEdge-Ref": "Ref A: 8021260D6DE344C084A27B41673BEF79 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:26Z",
        "x-request-time": "0.168"
      },
      "ResponseBody": {
        "secretsType": "Sas",
        "sasToken": "?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl"
      }
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/LocalUpload/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:26 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Tue, 18 Mar 2025 12:10:27 GMT",
        "ETag": "\"0x8DD66117877A0A6\"",
        "Last-Modified": "Tue, 18 Mar 2025 11:38:57 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Tue, 18 Mar 2025 11:38:57 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "c69e6763-d9f6-4f35-8af3-c847bcf90f86",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "9eaf78d1-f01e-46eb-b487-0ed573ad760b",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:27 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 18 Mar 2025 12:10:27 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_Adls_Tsv/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "859",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:29 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_Adls_Tsv/versions/2?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "73f7f061-9722-4292-85bc-0a29328fb898",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121030Z:73f7f061-9722-4292-85bc-0a29328fb898",
        "X-MSEdge-Ref": "Ref A: 2723595C71E2449FB82A9012FEA6854F Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:27Z",
        "x-request-time": "0.321"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_Adls_Tsv/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "autoDeleteSetting": null,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "stage": null,
          "intellectualProperty": null,
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2025-03-18T12:10:29.714677+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User",
          "lastModifiedAt": "2025-03-18T12:10:29.7260195+00:00"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_aml_component_datatransfer_folder/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1862",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:31 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b58f65fd-a725-48a3-86fe-48115d1cf4af",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121031Z:b58f65fd-a725-48a3-86fe-48115d1cf4af",
        "X-MSEdge-Ref": "Ref A: BE822F482BB54302AD2E9E5206CD39E8 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:30Z",
        "x-request-time": "0.238"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "User error when calling GenericAssetMLIndexServiceClient.MoveNext. Service invocation failed!\r\nRequest: GET westus.api.azureml.ms/genericasset/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/indexes/mltable_aml_component_datatransfer_folder/versions/2\r\nStatus Code: 404 NotFound\r\nError Code: UserError/NotFoundError\r\nReason Phrase: Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/inde\r\nResponse Body: {\"error\":{\"code\":\"UserError\",\"message\":\"Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/indexes/mltable_aml_component_datatransfer_folder/versions/2 and tenantId:  was not found\",\"details\":[],\"innerError\":{\"code\":\"NotFoundError\"}},\"correlation\":{\"operation\":\"627a5f804ebca8ff9b0478a62a016e24\",\"request\":\"704de28e98233db1\"},\"environment\":\"westus\",\"location\":\"westus\",\"time\":\"2025-03-18T12:10:31.4955907+00:00\",\"componentName\":\"genericasset\",\"statusCode\":404}",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "627a5f804ebca8ff9b0478a62a016e24",
                  "request": "7262bf6ac556e98b"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2025-03-18T12:10:31.509685+00:00"
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-core/1.31.1 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json",
        "Date": "Tue, 18 Mar 2025 12:10:31 GMT",
        "ETag": "W/\"0x8DD625A848D53C6\"",
        "Last-Modified": "Thu, 13 Mar 2025 18:11:46 GMT",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-azure-ref": "Sanitized",
        "X-Cache": "TCP_HIT",
        "x-fd-int-roxy-purgeid": "47892535",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2024-07-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "888",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:32 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "4d7e0e29-6961-46af-bf85-25797e3922ab",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121032Z:4d7e0e29-6961-46af-bf85-25797e3922ab",
        "X-MSEdge-Ref": "Ref A: 6E0FDFAC83BD4C7BA477113F9910C751 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:31Z",
        "x-request-time": "0.093"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "subscriptionId": "00000000-0000-0000-0000-000000000",
          "resourceGroup": "00000",
          "datastoreType": "AzureBlob",
          "accountName": "Sanitized",
          "containerName": "azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2025-03-18T09:24:59.629721+00:00",
          "lastModifiedAt": "2025-03-18T09:25:00.8938439+00:00",
          "lastModifiedBy": "Sanitized",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2024-07-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "48",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "expirableSecret": true,
        "expireAfterHours": 1
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "134",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:33 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "4be3b5a7-8075-443a-ba24-bcacfc209941",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11998",
        "x-ms-ratelimit-remaining-subscription-writes": "798",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121033Z:4be3b5a7-8075-443a-ba24-bcacfc209941",
        "X-MSEdge-Ref": "Ref A: 4FCEC6E688F847C4BC542410AFF134B6 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:32Z",
        "x-request-time": "0.102"
      },
      "ResponseBody": {
        "secretsType": "Sas",
        "sasToken": "?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl"
      }
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/LocalUpload/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:32 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Tue, 18 Mar 2025 12:10:33 GMT",
        "ETag": "\"0x8DD66117877A0A6\"",
        "Last-Modified": "Tue, 18 Mar 2025 11:38:57 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Tue, 18 Mar 2025 11:38:57 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "c69e6763-d9f6-4f35-8af3-c847bcf90f86",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "9eaf78d1-f01e-46eb-b487-0ed573ad760b",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:33 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 18 Mar 2025 12:10:33 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_aml_component_datatransfer_folder/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "885",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:35 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_aml_component_datatransfer_folder/versions/2?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d4bfe120-7a84-4e8c-a0ac-82e7cbce8ff5",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121035Z:d4bfe120-7a84-4e8c-a0ac-82e7cbce8ff5",
        "X-MSEdge-Ref": "Ref A: C1F349A11866465BBC9D69177CBE3EFD Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:33Z",
        "x-request-time": "0.305"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_aml_component_datatransfer_folder/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "autoDeleteSetting": null,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "stage": null,
          "intellectualProperty": null,
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2025-03-18T12:10:35.5077791+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User",
          "lastModifiedAt": "2025-03-18T12:10:35.5210197+00:00"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_reghits/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1811",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:36 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "5da6d490-d1d8-43d2-b77f-d10af67381cc",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121036Z:5da6d490-d1d8-43d2-b77f-d10af67381cc",
        "X-MSEdge-Ref": "Ref A: A927DA9A96CC44F491CCC48752EEB506 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:36Z",
        "x-request-time": "0.187"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "User error when calling GenericAssetMLIndexServiceClient.MoveNext. Service invocation failed!\r\nRequest: GET westus.api.azureml.ms/genericasset/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/indexes/mltable_reghits/versions/2\r\nStatus Code: 404 NotFound\r\nError Code: UserError/NotFoundError\r\nReason Phrase: Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/inde\r\nResponse Body: {\"error\":{\"code\":\"UserError\",\"message\":\"Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/indexes/mltable_reghits/versions/2 and tenantId:  was not found\",\"details\":[],\"innerError\":{\"code\":\"NotFoundError\"}},\"correlation\":{\"operation\":\"855cf233517a9de4d9771186fd325617\",\"request\":\"9643623dbfe7c00f\"},\"environment\":\"westus\",\"location\":\"westus\",\"time\":\"2025-03-18T12:10:36.7140491+00:00\",\"componentName\":\"genericasset\",\"statusCode\":404}",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "855cf233517a9de4d9771186fd325617",
                  "request": "4219ebeb35cb8533"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2025-03-18T12:10:36.7272296+00:00"
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-core/1.31.1 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json",
        "Date": "Tue, 18 Mar 2025 12:10:36 GMT",
        "ETag": "W/\"0x8DD625A848D53C6\"",
        "Last-Modified": "Thu, 13 Mar 2025 18:11:46 GMT",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-azure-ref": "Sanitized",
        "X-Cache": "TCP_HIT",
        "x-fd-int-roxy-purgeid": "47892535",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2024-07-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "888",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:37 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b262aa16-0292-44e0-a51f-3040a1e6c86c",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121038Z:b262aa16-0292-44e0-a51f-3040a1e6c86c",
        "X-MSEdge-Ref": "Ref A: B2A08EBF690E4FBAA0A6CDD1EADCD7E8 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:36Z",
        "x-request-time": "0.104"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "subscriptionId": "00000000-0000-0000-0000-000000000",
          "resourceGroup": "00000",
          "datastoreType": "AzureBlob",
          "accountName": "Sanitized",
          "containerName": "azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2025-03-18T09:24:59.629721+00:00",
          "lastModifiedAt": "2025-03-18T09:25:00.8938439+00:00",
          "lastModifiedBy": "Sanitized",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2024-07-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "48",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "expirableSecret": true,
        "expireAfterHours": 1
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "134",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:39 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "c88ed731-3a33-4492-9041-5797a20104d3",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121039Z:c88ed731-3a33-4492-9041-5797a20104d3",
        "X-MSEdge-Ref": "Ref A: 73A02C1F5B414418BAD847F54455D78F Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:38Z",
        "x-request-time": "0.143"
      },
      "ResponseBody": {
        "secretsType": "Sas",
        "sasToken": "?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl"
      }
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/LocalUpload/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:39 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Tue, 18 Mar 2025 12:10:39 GMT",
        "ETag": "\"0x8DD66117877A0A6\"",
        "Last-Modified": "Tue, 18 Mar 2025 11:38:57 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Tue, 18 Mar 2025 11:38:57 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "c69e6763-d9f6-4f35-8af3-c847bcf90f86",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "9eaf78d1-f01e-46eb-b487-0ed573ad760b",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:39 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 18 Mar 2025 12:10:40 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_reghits/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "859",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:42 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_reghits/versions/2?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "6457585d-2ea2-401d-a24c-431f1165b42e",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121042Z:6457585d-2ea2-401d-a24c-431f1165b42e",
        "X-MSEdge-Ref": "Ref A: 255A78B0577C4DA4BFD50FB3788D72B3 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:40Z",
        "x-request-time": "0.937"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_reghits/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "autoDeleteSetting": null,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "stage": null,
          "intellectualProperty": null,
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2025-03-18T12:10:42.3630733+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User",
          "lastModifiedAt": "2025-03-18T12:10:42.3770637+00:00"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_starlite_sample_output/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1841",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:43 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "ee14eec3-79dc-4bfb-8164-ab6be3630497",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "error",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121043Z:ee14eec3-79dc-4bfb-8164-ab6be3630497",
        "X-MSEdge-Ref": "Ref A: 79C797C29CDB4401B9FC544797A8F738 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:42Z",
        "x-request-time": "0.196"
      },
      "ResponseBody": {
        "error": {
          "code": "UserError",
          "message": "User error when calling GenericAssetMLIndexServiceClient.MoveNext. Service invocation failed!\r\nRequest: GET westus.api.azureml.ms/genericasset/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/indexes/mltable_starlite_sample_output/versions/2\r\nStatus Code: 404 NotFound\r\nError Code: UserError/NotFoundError\r\nReason Phrase: Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/inde\r\nResponse Body: {\"error\":{\"code\":\"UserError\",\"message\":\"Asset with Asset ID: azureml://locations/westus/workspaces/4830284c-8448-41aa-bcdd-55399c88f511/indexes/mltable_starlite_sample_output/versions/2 and tenantId:  was not found\",\"details\":[],\"innerError\":{\"code\":\"NotFoundError\"}},\"correlation\":{\"operation\":\"01f0b0c4c604915f366f3056800576d1\",\"request\":\"61265f1a889e2568\"},\"environment\":\"westus\",\"location\":\"westus\",\"time\":\"2025-03-18T12:10:43.4741902+00:00\",\"componentName\":\"genericasset\",\"statusCode\":404}",
          "details": [],
          "additionalInfo": [
            {
              "type": "ComponentName",
              "info": {
                "value": "managementfrontend"
              }
            },
            {
              "type": "Correlation",
              "info": {
                "value": {
                  "operation": "01f0b0c4c604915f366f3056800576d1",
                  "request": "f19e753f4afc550b"
                }
              }
            },
            {
              "type": "Environment",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Location",
              "info": {
                "value": "westus"
              }
            },
            {
              "type": "Time",
              "info": {
                "value": "2025-03-18T12:10:43.4731644+00:00"
              }
            }
          ]
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azureedge.net/latest/MLTable.schema.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-core/1.31.1 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json",
        "Date": "Tue, 18 Mar 2025 12:10:43 GMT",
        "ETag": "W/\"0x8DD625A848D53C6\"",
        "Last-Modified": "Thu, 13 Mar 2025 18:11:46 GMT",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "x-azure-ref": "Sanitized",
        "X-Cache": "TCP_HIT",
        "x-fd-int-roxy-purgeid": "47892535",
        "x-ms-version": "2018-03-28"
      },
      "ResponseBody": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://azureml/sdk-2-0/MLTable.json",
        "title": "MLTable specification",
        "description": "An MLTable defines a set of instructions in order to build a table of data.",
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string"
          },
          "type": {
            "const": "mltable"
          },
          "metadata": {
            "description": "Infomation about the MLTable",
            "type": "object",
            "additionalProperties": true
          },
          "paths": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "This specifies path of file containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "file"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "string",
                      "description": "This specifies path of folder containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "folder"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "This specifies a search pattern to allow globbing of files and folders containing data."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ]
                }
              ]
            }
          },
          "traits": {
            "type": "object",
            "properties": {
              "index_columns": {
                "type": "array",
                "description": "Sets the table index using existing columns. This trait can be used by partition_by in the data plane to split data by the index.",
                "items": {
                  "type": "string"
                }
              },
              "timestamp_column": {
                "type": "string",
                "description": "Defines the timestamp column of the table. This trait can be used in filter transforms, or in other data plane operations (SDK) such as drift detection."
              }
            }
          },
          "transformations": {
            "description": "Defined sequence of transformations that are applied to data loaded from defined paths.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "read_delimited"
                },
                {
                  "const": "read_parquet"
                },
                {
                  "const": "read_json_lines"
                },
                {
                  "const": "read_delta_lake"
                },
                {
                  "const": "extract_columns_from_partition_format"
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delimited": {
                      "description": "Reads delimited files from provided paths, splitting them into rows and columns based on separator.",
                      "type": "object",
                      "properties": {
                        "delimiter": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 2,
                          "default": ","
                        },
                        "header": {
                          "type": "string",
                          "enum": [
                            "no_header",
                            "from_first_file",
                            "all_files_different_headers",
                            "all_files_same_headers"
                          ],
                          "default": "all_files_same_headers"
                        },
                        "support_multi_line": {
                          "type": "boolean",
                          "default": false
                        },
                        "empty_as_string": {
                          "type": "boolean",
                          "default": false
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "infer_column_types": {
                          "type": [
                            "object",
                            "boolean"
                          ],
                          "properties": {
                            "sample_size": {
                              "type": "integer",
                              "default": 100
                            },
                            "column_type_overrides": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "columns": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "description": "single column to be selected"
                                      },
                                      {
                                        "type": "array",
                                        "description": "list of columns to be selected",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  },
                                  "column_type": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "boolean",
                                          "float",
                                          "string",
                                          "int",
                                          "stream_info"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "boolean": {
                                            "type": "object",
                                            "properties": {
                                              "true_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "false_values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "mismatch_as": {
                                                "type": "string",
                                                "enum": [
                                                  "false",
                                                  "true",
                                                  "error"
                                                ],
                                                "default": "error"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "datetime": {
                                            "type": "object",
                                            "properties": {
                                              "formats": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "date_constant": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "formats"
                                            ],
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "columns",
                                  "column_type"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "default": true,
                          "additionalProperties": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_parquet": {
                      "description": "Reads parquet files from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_json_lines": {
                      "description": "Reads JSON lines file from the provided paths using the defined options.",
                      "type": "object",
                      "properties": {
                        "invalid_lines": {
                          "type": "string",
                          "enum": [
                            "error",
                            "drop"
                          ],
                          "default": "error"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "iso88591",
                            "latin1",
                            "ascii",
                            "utf16",
                            "utf32",
                            "utf8bom",
                            "windows1252"
                          ],
                          "default": "utf8"
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        },
                        "path_column": {
                          "type": "string"
                        },
                        "partition_size": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "read_delta_lake": {
                      "description": "Reads parquet files from delta lake using the defined options.",
                      "type": "object",
                      "properties": {
                        "version_as_of": {
                          "type": "integer",
                          "description": "integer version to use to read in a specific version of parquet files."
                        },
                        "timestamp_as_of": {
                          "type": "string",
                          "description": "datetime string in RFC-3339/ISO-8601 format to use to read in matching parquet files from a specific point in time."
                        },
                        "include_path_column": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "extract_columns_from_partition_format": {
                      "type": "object",
                      "description": "The partition information of each path will be extracted into columns based on the specified format",
                      "properties": {
                        "partition_format": {
                          "type": "string",
                          "description": "Partition format to use to extract data into columns"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "description": "filter rows based on the expression",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take": {
                      "description": "take the first N rows from dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "take_random_sample": {
                      "description": "take a random sample of records in the dataset approximately by the probability specified",
                      "type": "object",
                      "properties": {
                        "probability": {
                          "type": "number",
                          "minimum": 0.0,
                          "maximum": 1.0
                        },
                        "seed": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "description": "Skip the first N records from top of the dataset",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "drop_columns": {
                      "description": "Drop the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "keep_columns": {
                      "description": "Keep only the specified columns from the dataset",
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "convert_column_types": {
                      "description": "Convert the columns specified into the column_type desired",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "description": "single column to be selected"
                                  },
                                  {
                                    "type": "array",
                                    "description": "list of columns to be selected",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "pattern and properties defining columns to be selected",
                                    "properties": {
                                      "pattern": {
                                        "type": "string"
                                      },
                                      "ignore_case": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "invert": {
                                        "type": "boolean",
                                        "default": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "column_type": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "boolean",
                                      "float",
                                      "string",
                                      "int",
                                      "stream_info"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "datetime": {
                                        "type": "object",
                                        "properties": {
                                          "formats": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "date_constant": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "formats"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "float": {
                                        "type": "object",
                                        "properties": {
                                          "decimal_mark": {
                                            "type": "string",
                                            "enum": [
                                              ".",
                                              ","
                                            ],
                                            "default": "."
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "boolean": {
                                        "type": "object",
                                        "properties": {
                                          "true_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "false_values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "mismatch_as": {
                                            "type": "string",
                                            "enum": [
                                              "false",
                                              "true",
                                              "error"
                                            ],
                                            "default": "error"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "paths"
            ]
          }
        ],
        "definitions": {
          "convert_column_types": {
            "description": "Convert the columns specified into the column_type desired",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "single column to be selected"
                        },
                        {
                          "type": "array",
                          "description": "list of columns to be selected",
                          "items": {
                            "type": "string"
                          }
                        },
                        {
                          "type": "object",
                          "description": "pattern and properties defining columns to be selected",
                          "properties": {
                            "pattern": {
                              "type": "string"
                            },
                            "ignore_case": {
                              "type": "boolean",
                              "default": false
                            },
                            "invert": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        }
                      ]
                    },
                    "column_type": {
                      "oneOf": [
                        {
                          "type": "string",
                          "enum": [
                            "boolean",
                            "float",
                            "string",
                            "int",
                            "stream_info"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "datetime": {
                              "type": "object",
                              "properties": {
                                "formats": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "date_constant": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "formats"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "float": {
                              "type": "object",
                              "properties": {
                                "decimal_mark": {
                                  "type": "string",
                                  "enum": [
                                    ".",
                                    ","
                                  ],
                                  "default": "."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "boolean": {
                              "type": "object",
                              "properties": {
                                "true_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "false_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "mismatch_as": {
                                  "type": "string",
                                  "enum": [
                                    "false",
                                    "true",
                                    "error"
                                  ],
                                  "default": "error"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "column_selector": {
            "oneOf": [
              {
                "type": "string",
                "description": "single column to be selected"
              },
              {
                "type": "array",
                "description": "list of columns to be selected",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "pattern and properties defining columns to be selected",
                "properties": {
                  "pattern": {
                    "type": "string"
                  },
                  "ignore_case": {
                    "type": "boolean",
                    "default": false
                  },
                  "invert": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore?api-version=2024-07-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "888",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:44 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d877a2a5-cf99-43c8-b83c-296fd3d17e6b",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121044Z:d877a2a5-cf99-43c8-b83c-296fd3d17e6b",
        "X-MSEdge-Ref": "Ref A: A8586D526C134CA4A8D764F975D5ACF3 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:43Z",
        "x-request-time": "0.094"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore",
        "name": "workspaceblobstore",
        "type": "Microsoft.MachineLearningServices/workspaces/datastores",
        "properties": {
          "description": null,
          "tags": null,
          "properties": null,
          "isDefault": true,
          "credentials": {
            "credentialsType": "AccountKey"
          },
          "subscriptionId": "00000000-0000-0000-0000-000000000",
          "resourceGroup": "00000",
          "datastoreType": "AzureBlob",
          "accountName": "Sanitized",
          "containerName": "azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511",
          "endpoint": "core.windows.net",
          "protocol": "https",
          "serviceDataAccessAuthIdentity": "WorkspaceSystemAssignedIdentity"
        },
        "systemData": {
          "createdAt": "2025-03-18T09:24:59.629721+00:00",
          "lastModifiedAt": "2025-03-18T09:25:00.8938439+00:00",
          "lastModifiedBy": "Sanitized",
          "lastModifiedByType": "Application"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/datastores/workspaceblobstore/listSecrets?api-version=2024-07-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "48",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "expirableSecret": true,
        "expireAfterHours": 1
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "134",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:46 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8cdc1230-9720-4379-9b14-376dc1b12857",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121046Z:8cdc1230-9720-4379-9b14-376dc1b12857",
        "X-MSEdge-Ref": "Ref A: 47D7D45C96604C859ADFE56EC9BD7C99 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:44Z",
        "x-request-time": "0.118"
      },
      "ResponseBody": {
        "secretsType": "Sas",
        "sasToken": "?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl"
      }
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/LocalUpload/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:45 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Content-Length": "223",
        "Content-MD5": "yLW2CQQeldeN1S7hH1/5Nw==",
        "Content-Type": "application/octet-stream",
        "Date": "Tue, 18 Mar 2025 12:10:46 GMT",
        "ETag": "\"0x8DD66117877A0A6\"",
        "Last-Modified": "Tue, 18 Mar 2025 11:38:57 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-access-tier": "Hot",
        "x-ms-access-tier-inferred": "true",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-creation-time": "Tue, 18 Mar 2025 11:38:57 GMT",
        "x-ms-lease-state": "available",
        "x-ms-lease-status": "unlocked",
        "x-ms-meta-name": "c69e6763-d9f6-4f35-8af3-c847bcf90f86",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "9eaf78d1-f01e-46eb-b487-0ed573ad760b",
        "x-ms-server-encrypted": "true",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/azureml-blobstore-4830284c-8448-41aa-bcdd-55399c88f511/az-ml-artifacts/00000000000000000000000000000000/mnist-data/0.png?sv=Sanitized&sig=000000000000000000000000000000000000&se=Sanitized&srt=co&ss=bf&sp=rcuwdl",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:45 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 18 Mar 2025 12:10:46 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_starlite_sample_output/versions/2?api-version=2023-04-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "292",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": false,
          "isArchived": false,
          "dataType": "mltable",
          "dataUri": "azureml://datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "874",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:48 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_starlite_sample_output/versions/2?api-version=2023-04-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "322fda89-f905-4f4a-a57d-dc6e49063872",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121048Z:322fda89-f905-4f4a-a57d-dc6e49063872",
        "X-MSEdge-Ref": "Ref A: 2F858337BD6D4918A48127B8FD83BABD Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:46Z",
        "x-request-time": "0.598"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/data/mltable_starlite_sample_output/versions/2",
        "name": "2",
        "type": "Microsoft.MachineLearningServices/workspaces/data/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": false,
          "autoDeleteSetting": null,
          "dataUri": "azureml://subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000/datastores/workspaceblobstore/paths/LocalUpload/00000000000000000000000000000000/mnist-data/",
          "stage": null,
          "intellectualProperty": null,
          "dataType": "mltable",
          "referencedUris": [
            "./0.png",
            "./1.png",
            "./2.png",
            "./3.png"
          ]
        },
        "systemData": {
          "createdAt": "2025-03-18T12:10:48.4335809+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User",
          "lastModifiedAt": "2025-03-18T12:10:48.4453975+00:00"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/cpu-cluster?api-version=2023-08-01-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1571",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:52 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "efeecc8d-f32d-4d61-a04a-008d9191fc3b",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121052Z:efeecc8d-f32d-4d61-a04a-008d9191fc3b",
        "X-MSEdge-Ref": "Ref A: 03270B728C6C40F29AA85C4123545501 Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:51Z",
        "x-request-time": "0.058"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/cpu-cluster",
        "name": "cpu-cluster",
        "type": "Microsoft.MachineLearningServices/workspaces/computes",
        "location": "westus",
        "tags": {},
        "properties": {
          "createdOn": "2025-03-18T09:25:18.8342367+00:00",
          "modifiedOn": "2025-03-18T09:25:29.2522476+00:00",
          "disableLocalAuth": false,
          "description": null,
          "resourceId": null,
          "computeType": "AmlCompute",
          "computeLocation": "westus",
          "provisioningState": "Succeeded",
          "provisioningErrors": null,
          "provisioningWarnings": {},
          "isAttachedCompute": false,
          "properties": {
            "vmSize": "STANDARD_DS2_V2",
            "vmPriority": "Dedicated",
            "scaleSettings": {
              "maxNodeCount": 4,
              "minNodeCount": 0,
              "nodeIdleTimeBeforeScaleDown": "PT2M"
            },
            "subnet": null,
            "currentNodeCount": 0,
            "targetNodeCount": 1,
            "nodeStateCounts": {
              "preparingNodeCount": 0,
              "runningNodeCount": 0,
              "idleNodeCount": 0,
              "unusableNodeCount": 0,
              "leavingNodeCount": 0,
              "preemptedNodeCount": 0
            },
            "allocationState": "Resizing",
            "allocationStateTransitionTime": "2025-03-18T12:10:36.241+00:00",
            "errors": null,
            "remoteLoginPortPublicAccess": "Enabled",
            "osType": "Linux",
            "virtualMachineImage": null,
            "isolatedNetwork": false,
            "enableBatchPrivateLink": false,
            "propertyBag": {}
          }
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/1ed3b230-98e5-279d-fb9c-9a2878caa785/versions?api-version=2023-04-01&hash=40740af3f42e9f35cac9bda74d320aa2a9c9bce2e267c40103b45edc6657c1cd&hashVersion=202208",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "17",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:55 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "1a495c75-c0ea-415f-9f5f-46d0b1fc5fec",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121055Z:1a495c75-c0ea-415f-9f5f-46d0b1fc5fec",
        "X-MSEdge-Ref": "Ref A: ABE9882DDC034A2286FD118D717E0F8E Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:54Z",
        "x-request-time": "0.071"
      },
      "ResponseBody": {
        "value": []
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/1ed3b230-98e5-279d-fb9c-9a2878caa785/versions/1/startPendingUpload?api-version=2023-04-01",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "47",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "pendingUploadType": "TemporaryBlobReference"
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "869",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:56 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "335d6835-33ea-4ebe-b991-99394195f122",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121056Z:335d6835-33ea-4ebe-b991-99394195f122",
        "X-MSEdge-Ref": "Ref A: 654FA205461B43929A4FCE7B7E00E60B Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:55Z",
        "x-request-time": "0.208"
      },
      "ResponseBody": {
        "blobReferenceForConsumption": {
          "blobUri": "https://saw5gakqr75l2j2.blob.core.windows.net:443/4830284c-8448-41aa-bcdd-55399c88f511-1f2g9okd9fj4ascidkc1zm6agt",
          "storageAccountArmId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.Storage/storageAccounts/saw5gakqr75l2j2",
          "credential": {
            "credentialType": "SAS",
            "sasUri": "https://saw5gakqr75l2j2.blob.core.windows.net/4830284c-8448-41aa-bcdd-55399c88f511-1f2g9okd9fj4ascidkc1zm6agt?skoid=a7131bf7-66af-4a51-8e78-b1d7c60bfbbe&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2025-03-18T11%3A00%3A45Z&ske=2025-03-19T03%3A10%3A45Z&sks=b&skv=2019-07-07&sv=Sanitized&st=Sanitized&se=Sanitized&sr=c&sp=rcwl&sig=000000000000000000000000000000000000"
          }
        },
        "pendingUploadId": "d497cc6e-087c-4a57-91c0-e1a3b7e4f0a4",
        "pendingUploadType": "None"
      }
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/4830284c-8448-41aa-bcdd-55399c88f511-1f2g9okd9fj4ascidkc1zm6agt/one-line-tsv/component.yaml?skoid=a7131bf7-66af-4a51-8e78-b1d7c60bfbbe&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2025-03-18T11%3A00%3A45Z&ske=2025-03-19T03%3A10%3A45Z&sks=b&skv=2019-07-07&sv=Sanitized&st=Sanitized&se=Sanitized&sr=c&sp=rcwl&sig=000000000000000000000000000000000000",
      "RequestMethod": "HEAD",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:56 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 404,
      "ResponseHeaders": {
        "Date": "Tue, 18 Mar 2025 12:10:56 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "Transfer-Encoding": "chunked",
        "x-ms-error-code": "BlobNotFound",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/4830284c-8448-41aa-bcdd-55399c88f511-1f2g9okd9fj4ascidkc1zm6agt/one-line-tsv/component.yaml?skoid=a7131bf7-66af-4a51-8e78-b1d7c60bfbbe&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2025-03-18T11%3A00%3A45Z&ske=2025-03-19T03%3A10%3A45Z&sks=b&skv=2019-07-07&sv=Sanitized&st=Sanitized&se=Sanitized&sr=c&sp=rcwl&sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "475",
        "Content-MD5": "cbpgE/itbW99ONxze+CCQg==",
        "Content-Type": "application/octet-stream",
        "If-None-Match": "*",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-blob-type": "BlockBlob",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:56 GMT",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": "JHNjaGVtYTogaHR0cHM6Ly9jb21wb25lbnRzZGsuYXp1cmVlZGdlLm5ldC9qc29uc2NoZW1hL0NvbW1hbmRDb21wb25lbnQuanNvbgpuYW1lOiBvbmVfbGluZV90c3YKZGlzcGxheV9uYW1lOiBHZW5lcmF0ZSBPbmUgTGluZSBUc3YKdmVyc2lvbjogMC4wLjEKdHlwZTogQ29tbWFuZENvbXBvbmVudAppc19kZXRlcm1pbmlzdGljOiB0cnVlCmlucHV0czoKICBjb250ZW50OgogICAgdHlwZTogc3RyaW5nCiAgICBvcHRpb25hbDogZmFsc2UKICB0c3ZfZmlsZToKICAgIHR5cGU6IHN0cmluZwogICAgb3B0aW9uYWw6IGZhbHNlCiAgICBkZWZhdWx0OiBvdXRwdXQudHN2Cm91dHB1dHM6CiAgb3V0cHV0X2RpcjoKICAgIHR5cGU6IHBhdGgKY29tbWFuZDogPi0KICBlY2hvIHtpbnB1dHMuY29udGVudH0gPiB7b3V0cHV0cy5vdXRwdXRfZGlyfS97aW5wdXRzLnRzdl9maWxlfQplbnZpcm9ubWVudDoKICBuYW1lOiBBenVyZU1MLURlc2lnbmVyCg==",
      "StatusCode": 201,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Content-MD5": "cbpgE/itbW99ONxze+CCQg==",
        "Date": "Tue, 18 Mar 2025 12:10:57 GMT",
        "ETag": "\"0x8DD6615F08D66F2\"",
        "Last-Modified": "Tue, 18 Mar 2025 12:10:57 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-content-crc64": "pSo5eJtZOlE=",
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.blob.core.windows.net/4830284c-8448-41aa-bcdd-55399c88f511-1f2g9okd9fj4ascidkc1zm6agt/one-line-tsv/component.yaml?comp=metadata&skoid=a7131bf7-66af-4a51-8e78-b1d7c60bfbbe&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2025-03-18T11%3A00%3A45Z&ske=2025-03-19T03%3A10%3A45Z&sks=b&skv=2019-07-07&sv=Sanitized&st=Sanitized&se=Sanitized&sr=c&sp=rcwl&sig=000000000000000000000000000000000000",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/xml",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azsdk-python-storage-blob/12.19.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)",
        "x-ms-date": "Tue, 18 Mar 2025 12:10:56 GMT",
        "x-ms-meta-name": "1ed3b230-98e5-279d-fb9c-9a2878caa785",
        "x-ms-meta-upload_status": "completed",
        "x-ms-meta-version": "1",
        "x-ms-version": "2023-11-03"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Tue, 18 Mar 2025 12:10:57 GMT",
        "ETag": "\"0x8DD6615F0B5A93D\"",
        "Last-Modified": "Tue, 18 Mar 2025 12:10:57 GMT",
        "Server": [
          "Windows-Azure-Blob/1.0",
          "Microsoft-HTTPAPI/2.0"
        ],
        "x-ms-request-server-encrypted": "true",
        "x-ms-version": "2023-11-03"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/1ed3b230-98e5-279d-fb9c-9a2878caa785/versions/1?api-version=2023-04-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "269",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isAnonymous": true,
          "isArchived": false,
          "codeUri": "https://saw5gakqr75l2j2.blob.core.windows.net:443/4830284c-8448-41aa-bcdd-55399c88f511-1f2g9okd9fj4ascidkc1zm6agt/one-line-tsv"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "823",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:10:59 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/1ed3b230-98e5-279d-fb9c-9a2878caa785/versions/1?api-version=2023-04-01",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "18c76017-b6d9-48df-bdec-57fc204a7042",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121059Z:18c76017-b6d9-48df-bdec-57fc204a7042",
        "X-MSEdge-Ref": "Ref A: 76370DE602884A65A68ABC92ED94038A Ref B: MAA201060514049 Ref C: 2025-03-18T12:10:57Z",
        "x-request-time": "0.191"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/1ed3b230-98e5-279d-fb9c-9a2878caa785/versions/1",
        "name": "1",
        "type": "Microsoft.MachineLearningServices/workspaces/codes/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {
            "hash_sha256": "0000000000000",
            "hash_version": "0000000000000"
          },
          "isArchived": false,
          "isAnonymous": false,
          "codeUri": "https://saw5gakqr75l2j2.blob.core.windows.net:443/4830284c-8448-41aa-bcdd-55399c88f511-1f2g9okd9fj4ascidkc1zm6agt/one-line-tsv",
          "provisioningState": "Succeeded"
        },
        "systemData": {
          "createdAt": "2025-03-18T12:10:59.3604584+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User",
          "lastModifiedAt": "2025-03-18T12:10:59.3604584+00:00",
          "lastModifiedBy": "Sanitized",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/492e4de7-7a2d-2435-2325-c84469f8b05e?api-version=2024-01-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "881",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "isAnonymous": true,
          "isArchived": false,
          "componentSpec": {
            "name": "one_line_tsv",
            "version": "0.0.1",
            "$schema": "https://componentsdk.azureedge.net/jsonschema/CommandComponent.json",
            "display_name": "Generate One Line Tsv",
            "is_deterministic": true,
            "inputs": {
              "content": {
                "type": "string",
                "optional": false
              },
              "tsv_file": {
                "type": "string",
                "optional": false,
                "default": "output.tsv"
              }
            },
            "outputs": {
              "output_dir": {
                "type": "path"
              }
            },
            "type": "CommandComponent",
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/1ed3b230-98e5-279d-fb9c-9a2878caa785/versions/1",
            "environment": {
              "os": "Linux",
              "name": "AzureML-Designer"
            },
            "command": "echo {inputs.content} > {outputs.output_dir}/{inputs.tsv_file}",
            "_source": "YAML.COMPONENT"
          }
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1520",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:11:04 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/492e4de7-7a2d-2435-2325-c84469f8b05e?api-version=2024-01-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "06d0b057-7534-4e16-bb33-f307102e11ba",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121104Z:06d0b057-7534-4e16-bb33-f307102e11ba",
        "X-MSEdge-Ref": "Ref A: D352FDD9550F4DF1AC061413CF08B05B Ref B: MAA201060514049 Ref C: 2025-03-18T12:11:02Z",
        "x-request-time": "0.815"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/878ccb9d-fd91-420a-988e-f65cce1aa848",
        "name": "878ccb9d-fd91-420a-988e-f65cce1aa848",
        "type": "Microsoft.MachineLearningServices/workspaces/components/versions",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "isArchived": false,
          "isAnonymous": true,
          "autoDeleteSetting": null,
          "componentSpec": {
            "$schema": "https://componentsdk.azureedge.net/jsonschema/CommandComponent.json",
            "name": "one_line_tsv",
            "version": "0.0.1",
            "display_name": "Generate One Line Tsv",
            "is_deterministic": "True",
            "type": "CommandComponent",
            "outputs": {
              "output_dir": {
                "type": "path",
                "datastore_mode": "Upload"
              }
            },
            "inputs": {
              "content": {
                "type": "String",
                "optional": "False"
              },
              "tsv_file": {
                "type": "String",
                "optional": "False",
                "default": "output.tsv"
              }
            },
            "environment": {
              "name": "AzureML-Designer",
              "os": "Linux"
            },
            "successful_return_code": "Zero",
            "command": "echo {inputs.content} > {outputs.output_dir}/{inputs.tsv_file}",
            "code": "azureml:/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/codes/1ed3b230-98e5-279d-fb9c-9a2878caa785/versions/1"
          },
          "provisioningState": "Succeeded",
          "stage": "Development"
        },
        "systemData": {
          "createdAt": "2025-03-18T12:11:04.0471856+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User",
          "lastModifiedAt": "2025-03-18T12:11:04.0471856+00:00",
          "lastModifiedBy": "Sanitized",
          "lastModifiedByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/great_roti_6hly46fcmd?api-version=2024-01-01-preview",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "1306",
        "Content-Type": "application/json",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": {
        "properties": {
          "properties": {},
          "tags": {},
          "displayName": "pipeline_func",
          "experimentName": "azure-ai-ml",
          "isArchived": false,
          "jobType": "Pipeline",
          "inputs": {},
          "jobs": {
            "node": {
              "limits": {
                "job_limits_type": "Command",
                "timeout": "PT5M"
              },
              "resources": {
                "instance_count": 2,
                "instance_type": "1Gi",
                "properties": {},
                "docker_args": "--cpus=2 --memory=1GB",
                "shm_size": "4g"
              },
              "environment_variables": {
                "verbose": "DEBUG"
              },
              "type": "CommandComponent",
              "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/cpu-cluster",
              "inputs": {
                "content": {
                  "job_input_type": "literal",
                  "value": "1\t2\t3\n4\t5\t6\n7\t8\t9"
                }
              },
              "outputs": {
                "output_dir": {
                  "job_output_type": "uri_file",
                  "name": "CommandComponent_output",
                  "version": "1"
                }
              },
              "_source": "YAML.COMPONENT",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/878ccb9d-fd91-420a-988e-f65cce1aa848"
            }
          },
          "outputs": {},
          "settings": {
            "default_compute": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/cpu-cluster",
            "_source": "DSL"
          }
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "2361",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:11:07 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/great_roti_6hly46fcmd?api-version=2024-01-01-preview",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "88bf540f-b884-4dd1-abc2-8ef5cef4d32f",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121107Z:88bf540f-b884-4dd1-abc2-8ef5cef4d32f",
        "X-MSEdge-Ref": "Ref A: BC76980E24554821A84F580FA289DDFE Ref B: MAA201060514049 Ref C: 2025-03-18T12:11:04Z",
        "x-request-time": "0.352"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/great_roti_6hly46fcmd",
        "name": "great_roti_6hly46fcmd",
        "type": "Microsoft.MachineLearningServices/workspaces/jobs",
        "properties": {
          "description": null,
          "tags": {},
          "properties": {},
          "displayName": "pipeline_func",
          "status": "NotStarted",
          "experimentName": "azure-ai-ml",
          "services": {
            "Tracking": {
              "jobServiceType": "Tracking",
              "port": null,
              "endpoint": "azureml://westus.api.azureml.ms/mlflow/v1.0/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000?",
              "status": null,
              "errorMessage": null,
              "properties": null,
              "nodes": null
            },
            "Studio": {
              "jobServiceType": "Studio",
              "port": null,
              "endpoint": "https://ml.azure.com/runs/great_roti_6hly46fcmd?wsid=/subscriptions/00000000-0000-0000-0000-000000000/resourcegroups/00000/workspaces/00000",
              "status": null,
              "errorMessage": null,
              "properties": null,
              "nodes": null
            }
          },
          "computeId": null,
          "isArchived": false,
          "identity": null,
          "componentId": null,
          "notificationSetting": null,
          "secretsConfiguration": null,
          "jobType": "Pipeline",
          "settings": {
            "default_compute": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/cpu-cluster",
            "_source": "DSL"
          },
          "jobs": {
            "node": {
              "limits": {
                "job_limits_type": "Command",
                "timeout": "PT5M"
              },
              "resources": {
                "instance_count": 2,
                "instance_type": "1Gi",
                "properties": {},
                "docker_args": "--cpus=2 --memory=1GB",
                "shm_size": "4g"
              },
              "environment_variables": {
                "verbose": "DEBUG"
              },
              "type": "CommandComponent",
              "computeId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/computes/cpu-cluster",
              "inputs": {
                "content": {
                  "job_input_type": "literal",
                  "value": "1\t2\t3\n4\t5\t6\n7\t8\t9"
                }
              },
              "outputs": {
                "output_dir": {
                  "job_output_type": "uri_file",
                  "name": "CommandComponent_output",
                  "version": "1"
                }
              },
              "_source": "YAML.COMPONENT",
              "componentId": "/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/components/azureml_anonymous/versions/878ccb9d-fd91-420a-988e-f65cce1aa848"
            }
          },
          "inputs": null,
          "outputs": {},
          "sourceJobId": null
        },
        "systemData": {
          "createdAt": "2025-03-18T12:11:07.032461+00:00",
          "createdBy": "Sanitized",
          "createdByType": "User"
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/resourceGroups/00000/providers/Microsoft.MachineLearningServices/workspaces/00000/jobs/great_roti_6hly46fcmd/cancel?api-version=2023-04-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "0",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "4",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:11:11 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/westus/mfeOperationResults/jc:4830284c-8448-41aa-bcdd-55399c88f511:great_roti_6hly46fcmd?api-version=2023-04-01-preview&t=638778966714380214&c=MIIHhzCCBm-gAwIBAgITfAahW1AM79KhMijZVgAABqFbUDANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDUwHhcNMjUwMTI3MDc1NTUwWhcNMjUwNzI2MDc1NTUwWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAON48qlkk82sETfcSrPQVQEB3sgZ9agfyQmjl5ePiRD1gHBTI5GMItpc0UH0FD6BzcnSThVwUO3zZLiZ9HYryuk6Z4ho1swNS9WprxsKBTkiMinO7_Fv4al72Z65eb1z0fc99jaSXLcBxax81143g8xSgT1q2pKdnYdFgoZq8StARw97Xj7wJsgnjMGVXVckCV30AwyH-x_7cl_PZ8gqfzYBFhbCUQCbN2aV3MdeJNwsnSYqJzkv08mlGrALgXkVQFGaUtA2PRs7TkrkFLQ79gnmDju7vYUEjxXjsNdBwvfpZAF2hbTVaScwZ0E2dA98nZA-M3u0Ve63f_Ra99PafUECAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9DTzFQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA1LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MB0GA1UdDgQWBBRGhb3Uyd9HfU-JJaNxUCr6YIOXrDAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBR61hmFKHlscXYeYPjzS--iBUIWHTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAIO0wI6FWmcFoF567nd2Ex_Mz_eVq5TQvquyf90JVWY744uYtzRpss6MhJHFc1knuFCR1jH-I_-oF9qxFHI6gjtzJzR7JY0BYar2KuWc5biJaaHVqnHfvMByIekfPBRoUSCjPPRHn1ATrQiGCwVlkuOwTsJP9qqunfi_yhcjbLAh2ddm7cXhrbIXYCdHdXc76RaC1iZFGIrZddnwyBNT-D7MIgZwtEVm6vRXYRX6E81DWAM4Tbe3s3zXVNoelRUSf8DLQP1iCCtgEqsiW46Ic-HWdmrmDg1AxjwEsfkOQdrALD7z_d1Z02yiAirH2jVVWiCjbunDd_yz1Ia5f4GrGUY&s=kwqKTAbwn_HSOnofS3Y9mt-_fpF7GORERWT_eT8PNoszwM9BTxgBfYzeI5MdXkCJA25RRW1UvJfZJkWrhmSUMdHx6JcLZ_mhSiFo4UX8HscVBg6_0mLZHm3QrpagYMlugWFN8SSFbBtozRhnJj34dCVfoS4ye1eYnEqtt8gsA7XBFfvCc4DUrndehQUDEypHVy86Z5UKZl3A5naki6-6Lr73f6shCTp-QcWJvvUH_4lK3FAD9j0ZGvDR8UHYVEXlvMNhU0jU90Rt2G4QMmrYDyv-z7SJdhNMi_zPkfLx5Q8nU92FIHYkaVoZC5frGOIXqQAGXUW0QypYBPP1qDIMAA&h=Jr5b5Lb_g8tq-Eb3Ht2RkqxtsnoqlWoXoSny-_RdJK8",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-async-operation-timeout": "PT1H",
        "x-ms-correlation-request-id": "fa30245d-3965-402d-979d-1d79c55683d2",
        "x-ms-ratelimit-remaining-subscription-global-writes": "11999",
        "x-ms-ratelimit-remaining-subscription-writes": "799",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121111Z:fa30245d-3965-402d-979d-1d79c55683d2",
        "X-MSEdge-Ref": "Ref A: D029562DE8FC40D58ADFA3483F0A0B63 Ref B: MAA201060514049 Ref C: 2025-03-18T12:11:10Z",
        "x-request-time": "0.555"
      },
      "ResponseBody": "null"
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/westus/mfeOperationResults/jc:4830284c-8448-41aa-bcdd-55399c88f511:great_roti_6hly46fcmd?api-version=2023-04-01-preview&t=638778966714380214&c=MIIHhzCCBm-gAwIBAgITfAahW1AM79KhMijZVgAABqFbUDANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDUwHhcNMjUwMTI3MDc1NTUwWhcNMjUwNzI2MDc1NTUwWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAON48qlkk82sETfcSrPQVQEB3sgZ9agfyQmjl5ePiRD1gHBTI5GMItpc0UH0FD6BzcnSThVwUO3zZLiZ9HYryuk6Z4ho1swNS9WprxsKBTkiMinO7_Fv4al72Z65eb1z0fc99jaSXLcBxax81143g8xSgT1q2pKdnYdFgoZq8StARw97Xj7wJsgnjMGVXVckCV30AwyH-x_7cl_PZ8gqfzYBFhbCUQCbN2aV3MdeJNwsnSYqJzkv08mlGrALgXkVQFGaUtA2PRs7TkrkFLQ79gnmDju7vYUEjxXjsNdBwvfpZAF2hbTVaScwZ0E2dA98nZA-M3u0Ve63f_Ra99PafUECAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9DTzFQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA1LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MB0GA1UdDgQWBBRGhb3Uyd9HfU-JJaNxUCr6YIOXrDAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBR61hmFKHlscXYeYPjzS--iBUIWHTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAIO0wI6FWmcFoF567nd2Ex_Mz_eVq5TQvquyf90JVWY744uYtzRpss6MhJHFc1knuFCR1jH-I_-oF9qxFHI6gjtzJzR7JY0BYar2KuWc5biJaaHVqnHfvMByIekfPBRoUSCjPPRHn1ATrQiGCwVlkuOwTsJP9qqunfi_yhcjbLAh2ddm7cXhrbIXYCdHdXc76RaC1iZFGIrZddnwyBNT-D7MIgZwtEVm6vRXYRX6E81DWAM4Tbe3s3zXVNoelRUSf8DLQP1iCCtgEqsiW46Ic-HWdmrmDg1AxjwEsfkOQdrALD7z_d1Z02yiAirH2jVVWiCjbunDd_yz1Ia5f4GrGUY&s=kwqKTAbwn_HSOnofS3Y9mt-_fpF7GORERWT_eT8PNoszwM9BTxgBfYzeI5MdXkCJA25RRW1UvJfZJkWrhmSUMdHx6JcLZ_mhSiFo4UX8HscVBg6_0mLZHm3QrpagYMlugWFN8SSFbBtozRhnJj34dCVfoS4ye1eYnEqtt8gsA7XBFfvCc4DUrndehQUDEypHVy86Z5UKZl3A5naki6-6Lr73f6shCTp-QcWJvvUH_4lK3FAD9j0ZGvDR8UHYVEXlvMNhU0jU90Rt2G4QMmrYDyv-z7SJdhNMi_zPkfLx5Q8nU92FIHYkaVoZC5frGOIXqQAGXUW0QypYBPP1qDIMAA&h=Jr5b5Lb_g8tq-Eb3Ht2RkqxtsnoqlWoXoSny-_RdJK8",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/westus/mfeOperationResults/jc:4830284c-8448-41aa-bcdd-55399c88f511:great_roti_6hly46fcmd?api-version=2023-04-01-preview&t=638778966718614443&c=MIIHhzCCBm-gAwIBAgITfAahW1AM79KhMijZVgAABqFbUDANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDUwHhcNMjUwMTI3MDc1NTUwWhcNMjUwNzI2MDc1NTUwWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAON48qlkk82sETfcSrPQVQEB3sgZ9agfyQmjl5ePiRD1gHBTI5GMItpc0UH0FD6BzcnSThVwUO3zZLiZ9HYryuk6Z4ho1swNS9WprxsKBTkiMinO7_Fv4al72Z65eb1z0fc99jaSXLcBxax81143g8xSgT1q2pKdnYdFgoZq8StARw97Xj7wJsgnjMGVXVckCV30AwyH-x_7cl_PZ8gqfzYBFhbCUQCbN2aV3MdeJNwsnSYqJzkv08mlGrALgXkVQFGaUtA2PRs7TkrkFLQ79gnmDju7vYUEjxXjsNdBwvfpZAF2hbTVaScwZ0E2dA98nZA-M3u0Ve63f_Ra99PafUECAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9DTzFQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA1LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MB0GA1UdDgQWBBRGhb3Uyd9HfU-JJaNxUCr6YIOXrDAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBR61hmFKHlscXYeYPjzS--iBUIWHTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAIO0wI6FWmcFoF567nd2Ex_Mz_eVq5TQvquyf90JVWY744uYtzRpss6MhJHFc1knuFCR1jH-I_-oF9qxFHI6gjtzJzR7JY0BYar2KuWc5biJaaHVqnHfvMByIekfPBRoUSCjPPRHn1ATrQiGCwVlkuOwTsJP9qqunfi_yhcjbLAh2ddm7cXhrbIXYCdHdXc76RaC1iZFGIrZddnwyBNT-D7MIgZwtEVm6vRXYRX6E81DWAM4Tbe3s3zXVNoelRUSf8DLQP1iCCtgEqsiW46Ic-HWdmrmDg1AxjwEsfkOQdrALD7z_d1Z02yiAirH2jVVWiCjbunDd_yz1Ia5f4GrGUY&s=KQlouerJdPvElE_La1ZYRaz2aL0uMaIaGdhaiRarRjGBuGbfncrhyAORa9kqBJmCqFrGFdfDWr2T3WJ0sT9LuDaqsEwo4hE18h1ff_-t0GML_z3fZu-vh-CncwyGl41774SsYcqEM9RMV4ZYM0-gBCvdep_XXL2tDG0ryGLjYW2ByW7GVR3BZaEc167GkU0UUr0Do4_Y7PIkoguIx6bpst0G1GxUXZ-jbsSPiQXQWqBu9qPiqBsASOLCLsoyB2jkn6gNjA2v-u0RkXV0P3XIUqK62jz2ZAIUfkHS8MGy1yO9yuQDwXOBf-KyGTE6jDyotpTb9MUCRQqW7IVar-NYew&h=-x1IKjYJnbd2My8HVOe-5DCnRvNvsQo1DO4NaCoJIYE",
        "Cache-Control": "no-cache",
        "Content-Length": "2",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 18 Mar 2025 12:11:11 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/westus/mfeOperationResults/jc:4830284c-8448-41aa-bcdd-55399c88f511:great_roti_6hly46fcmd?api-version=2023-04-01-preview&t=638778966718614443&c=MIIHhzCCBm-gAwIBAgITfAahW1AM79KhMijZVgAABqFbUDANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDUwHhcNMjUwMTI3MDc1NTUwWhcNMjUwNzI2MDc1NTUwWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAON48qlkk82sETfcSrPQVQEB3sgZ9agfyQmjl5ePiRD1gHBTI5GMItpc0UH0FD6BzcnSThVwUO3zZLiZ9HYryuk6Z4ho1swNS9WprxsKBTkiMinO7_Fv4al72Z65eb1z0fc99jaSXLcBxax81143g8xSgT1q2pKdnYdFgoZq8StARw97Xj7wJsgnjMGVXVckCV30AwyH-x_7cl_PZ8gqfzYBFhbCUQCbN2aV3MdeJNwsnSYqJzkv08mlGrALgXkVQFGaUtA2PRs7TkrkFLQ79gnmDju7vYUEjxXjsNdBwvfpZAF2hbTVaScwZ0E2dA98nZA-M3u0Ve63f_Ra99PafUECAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9DTzFQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA1LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MB0GA1UdDgQWBBRGhb3Uyd9HfU-JJaNxUCr6YIOXrDAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBR61hmFKHlscXYeYPjzS--iBUIWHTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAIO0wI6FWmcFoF567nd2Ex_Mz_eVq5TQvquyf90JVWY744uYtzRpss6MhJHFc1knuFCR1jH-I_-oF9qxFHI6gjtzJzR7JY0BYar2KuWc5biJaaHVqnHfvMByIekfPBRoUSCjPPRHn1ATrQiGCwVlkuOwTsJP9qqunfi_yhcjbLAh2ddm7cXhrbIXYCdHdXc76RaC1iZFGIrZddnwyBNT-D7MIgZwtEVm6vRXYRX6E81DWAM4Tbe3s3zXVNoelRUSf8DLQP1iCCtgEqsiW46Ic-HWdmrmDg1AxjwEsfkOQdrALD7z_d1Z02yiAirH2jVVWiCjbunDd_yz1Ia5f4GrGUY&s=KQlouerJdPvElE_La1ZYRaz2aL0uMaIaGdhaiRarRjGBuGbfncrhyAORa9kqBJmCqFrGFdfDWr2T3WJ0sT9LuDaqsEwo4hE18h1ff_-t0GML_z3fZu-vh-CncwyGl41774SsYcqEM9RMV4ZYM0-gBCvdep_XXL2tDG0ryGLjYW2ByW7GVR3BZaEc167GkU0UUr0Do4_Y7PIkoguIx6bpst0G1GxUXZ-jbsSPiQXQWqBu9qPiqBsASOLCLsoyB2jkn6gNjA2v-u0RkXV0P3XIUqK62jz2ZAIUfkHS8MGy1yO9yuQDwXOBf-KyGTE6jDyotpTb9MUCRQqW7IVar-NYew&h=-x1IKjYJnbd2My8HVOe-5DCnRvNvsQo1DO4NaCoJIYE",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-02",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "caf0d576-d769-4a60-bef9-f4783a976fc4",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121111Z:caf0d576-d769-4a60-bef9-f4783a976fc4",
        "X-MSEdge-Ref": "Ref A: 460A0C88A63649AB9DFCD3470932A602 Ref B: MAA201060514049 Ref C: 2025-03-18T12:11:11Z",
        "x-request-time": "0.032"
      },
      "ResponseBody": {}
    },
    {
      "RequestUri": "https://Sanitized.azure.com/subscriptions/00000000-0000-0000-0000-000000000/providers/Microsoft.MachineLearningServices/locations/westus/mfeOperationResults/jc:4830284c-8448-41aa-bcdd-55399c88f511:great_roti_6hly46fcmd?api-version=2023-04-01-preview&t=638778966718614443&c=MIIHhzCCBm-gAwIBAgITfAahW1AM79KhMijZVgAABqFbUDANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSW5mcmEgQ0EgMDUwHhcNMjUwMTI3MDc1NTUwWhcNMjUwNzI2MDc1NTUwWjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAON48qlkk82sETfcSrPQVQEB3sgZ9agfyQmjl5ePiRD1gHBTI5GMItpc0UH0FD6BzcnSThVwUO3zZLiZ9HYryuk6Z4ho1swNS9WprxsKBTkiMinO7_Fv4al72Z65eb1z0fc99jaSXLcBxax81143g8xSgT1q2pKdnYdFgoZq8StARw97Xj7wJsgnjMGVXVckCV30AwyH-x_7cl_PZ8gqfzYBFhbCUQCbN2aV3MdeJNwsnSYqJzkv08mlGrALgXkVQFGaUtA2PRs7TkrkFLQ79gnmDju7vYUEjxXjsNdBwvfpZAF2hbTVaScwZ0E2dA98nZA-M3u0Ve63f_Ra99PafUECAwEAAaOCBHQwggRwMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFghfmRS4WsmTQCAWQCAQcwggHLBggrBgEFBQcBAQSCAb0wggG5MGMGCCsGAQUFBzAChldodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MFMGCCsGAQUFBzAChkdodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9DTzFQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSW5mcmElMjBDQSUyMDA1LmNydDBTBggrBgEFBQcwAoZHaHR0cDovL2NybDMuYW1lLmdibC9haWEvQ08xUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMEluZnJhJTIwQ0ElMjAwNS5jcnQwUwYIKwYBBQUHMAKGR2h0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0NPMVBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3J0MB0GA1UdDgQWBBRGhb3Uyd9HfU-JJaNxUCr6YIOXrDAOBgNVHQ8BAf8EBAMCBaAwggEmBgNVHR8EggEdMIIBGTCCARWgggERoIIBDYY_aHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JshjFodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJbmZyYSUyMENBJTIwMDUuY3JsMIGdBgNVHSAEgZUwgZIwDAYKKwYBBAGCN3sBATBmBgorBgEEAYI3ewICMFgwVgYIKwYBBQUHAgIwSh5IADMAMwBlADAAMQA5ADIAMQAtADQAZAA2ADQALQA0AGYAOABjAC0AYQAwADUANQAtADUAYgBkAGEAZgBmAGQANQBlADMAMwBkMAwGCisGAQQBgjd7AwIwDAYKKwYBBAGCN3sEAjAfBgNVHSMEGDAWgBR61hmFKHlscXYeYPjzS--iBUIWHTAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAIO0wI6FWmcFoF567nd2Ex_Mz_eVq5TQvquyf90JVWY744uYtzRpss6MhJHFc1knuFCR1jH-I_-oF9qxFHI6gjtzJzR7JY0BYar2KuWc5biJaaHVqnHfvMByIekfPBRoUSCjPPRHn1ATrQiGCwVlkuOwTsJP9qqunfi_yhcjbLAh2ddm7cXhrbIXYCdHdXc76RaC1iZFGIrZddnwyBNT-D7MIgZwtEVm6vRXYRX6E81DWAM4Tbe3s3zXVNoelRUSf8DLQP1iCCtgEqsiW46Ic-HWdmrmDg1AxjwEsfkOQdrALD7z_d1Z02yiAirH2jVVWiCjbunDd_yz1Ia5f4GrGUY&s=KQlouerJdPvElE_La1ZYRaz2aL0uMaIaGdhaiRarRjGBuGbfncrhyAORa9kqBJmCqFrGFdfDWr2T3WJ0sT9LuDaqsEwo4hE18h1ff_-t0GML_z3fZu-vh-CncwyGl41774SsYcqEM9RMV4ZYM0-gBCvdep_XXL2tDG0ryGLjYW2ByW7GVR3BZaEc167GkU0UUr0Do4_Y7PIkoguIx6bpst0G1GxUXZ-jbsSPiQXQWqBu9qPiqBsASOLCLsoyB2jkn6gNjA2v-u0RkXV0P3XIUqK62jz2ZAIUfkHS8MGy1yO9yuQDwXOBf-KyGTE6jDyotpTb9MUCRQqW7IVar-NYew&h=-x1IKjYJnbd2My8HVOe-5DCnRvNvsQo1DO4NaCoJIYE",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "User-Agent": "azure-ai-ml/1.27.0 azsdk-python-mgmt-machinelearningservices/0.1.0 Python/3.10.11 (Windows-10-10.0.26100-SP0)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "0",
        "Date": "Tue, 18 Mar 2025 12:11:42 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-aml-cluster": "vienna-westus-01",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "fdaf4a6d-2fc4-4378-b1ad-ea2cb789421e",
        "x-ms-ratelimit-remaining-subscription-global-reads": "16499",
        "x-ms-ratelimit-remaining-subscription-reads": "1099",
        "x-ms-response-type": "standard",
        "x-ms-routing-request-id": "WESTINDIA:20250318T121142Z:fdaf4a6d-2fc4-4378-b1ad-ea2cb789421e",
        "X-MSEdge-Ref": "Ref A: BB859224CAE540F29DF7D1630C2BE307 Ref B: MAA201060514049 Ref C: 2025-03-18T12:11:41Z",
        "x-request-time": "0.040"
      },
      "ResponseBody": null
    }
  ],
  "Variables": {}
}
