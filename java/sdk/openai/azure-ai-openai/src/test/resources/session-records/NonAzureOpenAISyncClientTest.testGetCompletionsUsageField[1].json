{
  "Entries": [
    {
      "RequestUri": "https://REDACTED/v1/completions",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "103",
        "Content-Type": "application/json",
        "Date": "Thu, 23 May 2024 22:40:22 GMT",
        "User-Agent": "azsdk-java-azure-ai-openai/1.0.0-beta.9 (11.0.21; Windows 11; 10.0)",
        "x-ms-client-request-id": "Sanitized"
      },
      "RequestBody": {
        "prompt": [
          "Say this is a test"
        ],
        "max_tokens": 1024,
        "n": 3,
        "logprobs": 1,
        "model": "gpt-3.5-turbo-instruct"
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Access-Control-Allow-Origin": "*",
        "Alt-Svc": "h3=\":443\"",
        "Cache-Control": "must-revalidate, no-cache",
        "CF-Cache-Status": "DYNAMIC",
        "CF-RAY": "88888c1f9d1ac4a2-SEA",
        "Connection": "keep-alive",
        "Content-Length": "8228",
        "Content-Type": "application/json",
        "Date": "Thu, 23 May 2024 22:40:24 GMT",
        "openai-model": "gpt-3.5-turbo-instruct",
        "openai-organization": "msft-finetuning-2",
        "openai-processing-ms": "1142",
        "openai-version": "2020-10-01",
        "Server": "cloudflare",
        "Strict-Transport-Security": "max-age=15724800; includeSubDomains",
        "x-ratelimit-limit-requests": "3500",
        "x-ratelimit-limit-tokens": "90000",
        "x-ratelimit-remaining-requests": "3499",
        "x-ratelimit-remaining-tokens": "86923",
        "x-ratelimit-reset-requests": "17ms",
        "x-ratelimit-reset-tokens": "2.05s",
        "X-Request-ID": "req_0b26fb46055c6efb67a8e798baa614cd"
      },
      "ResponseBody": {
        "id": "cmpl-9SBOhlocezmdgHqPbvauXb055iwOF",
        "object": "text_completion",
        "created": 1716504023,
        "model": "gpt-3.5-turbo-instruct",
        "choices": [
          {
            "text": " sentence\n\n\"This is a test sentence.\" ",
            "index": 0,
            "logprobs": {
              "tokens": [
                " sentence",
                "\n\n",
                "\"This",
                " is",
                " a",
                " test",
                " sentence",
                ".\"",
                " "
              ],
              "token_logprobs": [
                -3.2864275,
                -0.33496514,
                -1.4808819,
                -0.02237902,
                -0.39238277,
                -0.09159366,
                -0.0012440401,
                -0.041912537,
                -1.0183277
              ],
              "top_logprobs": [
                {
                  "\n\n": -0.8717414
                },
                {
                  "\n\n": -0.33496514
                },
                {
                  "This": -0.3782075
                },
                {
                  " is": -0.02237902
                },
                {
                  " a": -0.39238277
                },
                {
                  " test": -0.09159366
                },
                {
                  " sentence": -0.0012440401
                },
                {
                  ".\"": -0.041912537
                },
                {
                  "<|endoftext|>": -0.46779066
                }
              ],
              "text_offset": [
                18,
                27,
                29,
                34,
                37,
                39,
                44,
                53,
                55
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": ".\"\n  splits = data.split(\".\")\n  new_data = data.split[0].insert(splits[0].length, \"Jeb is the best.\")\n  new_data \nend\n\nputs insert_string(\"This is a test.\")",
            "index": 1,
            "logprobs": {
              "tokens": [
                ".\"\n",
                " ",
                " splits",
                " =",
                " data",
                ".split",
                "(\".",
                "\")\n",
                " ",
                " new",
                "_data",
                " =",
                " data",
                ".split",
                "[",
                "0",
                "].",
                "insert",
                "(s",
                "plits",
                "[",
                "0",
                "].",
                "length",
                ",",
                " \"",
                "J",
                "eb",
                " is",
                " the",
                " best",
                ".\")\n",
                " ",
                " new",
                "_data",
                " \n",
                "end",
                "\n\n",
                "puts",
                " insert",
                "_string",
                "(\"",
                "This",
                " is",
                " a",
                " test",
                ".\")"
              ],
              "token_logprobs": [
                -9999.0,
                -4.56318,
                -9999.0,
                -0.40730777,
                -4.599266,
                -0.1599392,
                -3.03131,
                -0.13243616,
                -0.052168652,
                -3.067501,
                -1.5170287,
                -0.04992631,
                -4.447322,
                -1.9247072,
                -5.299147,
                -0.3686979,
                -2.5434003,
                -9999.0,
                -2.8649197,
                -0.0063075963,
                -0.2253973,
                -0.048533197,
                -0.2920644,
                -0.23192176,
                -0.46035606,
                -0.7551797,
                -9999.0,
                -3.8151522,
                -4.2996435,
                -2.2578406,
                -0.81216353,
                -1.8086343,
                -0.18208967,
                -1.2614727,
                -0.044211604,
                -5.144966,
                -0.15174605,
                -0.7751196,
                -2.7263675,
                -0.4213197,
                -0.7431235,
                -0.67544574,
                -0.73077506,
                -0.024025075,
                -0.10840058,
                -0.034127392,
                -0.4928447
              ],
              "top_logprobs": [
                {
                  "\n\n": -0.8717414
                },
                {
                  "\n": -1.1266719
                },
                {
                  " end": -2.4763563
                },
                {
                  " =": -0.40730777
                },
                {
                  " text": -1.875414
                },
                {
                  ".split": -0.1599392
                },
                {
                  "(\"": -1.2349366
                },
                {
                  "\")\n": -0.13243616
                },
                {
                  " ": -0.052168652
                },
                {
                  " splits": -1.6019114
                },
                {
                  "_data": -1.5170287
                },
                {
                  " =": -0.04992631
                },
                {
                  " []\n": -1.2038372
                },
                {
                  "\n": -1.2751462
                },
                {
                  "(\".": -1.3111233
                },
                {
                  "0": -0.3686979
                },
                {
                  "]\n": -0.81827605
                },
                {
                  "strip": -1.253198
                },
                {
                  "(\"": -1.6208553
                },
                {
                  "plits": -0.0063075963
                },
                {
                  "[": -0.2253973
                },
                {
                  "0": -0.048533197
                },
                {
                  "].": -0.2920644
                },
                {
                  "length": -0.23192176
                },
                {
                  ",": -0.46035606
                },
                {
                  " \"": -0.7551797
                },
                {
                  "!\")\n": -2.2330208
                },
                {
                  "\")\n": -1.8070936
                },
                {
                  "\")\n": -0.77387065
                },
                {
                  " a": -1.847093
                },
                {
                  " best": -0.81216353
                },
                {
                  "\")\n": -1.775065
                },
                {
                  " ": -0.18208967
                },
                {
                  " return": -0.8114681
                },
                {
                  "_data": -0.044211604
                },
                {
                  " =": -0.978855
                },
                {
                  "end": -0.15174605
                },
                {
                  "\n\n": -0.7751196
                },
                {
                  "def": -0.94733757
                },
                {
                  " insert": -0.4213197
                },
                {
                  "_string": -0.7431235
                },
                {
                  "(\"": -0.67544574
                },
                {
                  "This": -0.73077506
                },
                {
                  " is": -0.024025075
                },
                {
                  " a": -0.10840058
                },
                {
                  " test": -0.034127392
                },
                {
                  ".\")": -0.4928447
                }
              ],
              "text_offset": [
                18,
                21,
                22,
                29,
                31,
                36,
                42,
                45,
                48,
                49,
                53,
                58,
                60,
                65,
                71,
                72,
                73,
                75,
                81,
                83,
                88,
                89,
                90,
                92,
                98,
                99,
                101,
                102,
                104,
                107,
                111,
                116,
                120,
                121,
                125,
                130,
                132,
                135,
                137,
                141,
                148,
                155,
                157,
                161,
                164,
                166,
                171
              ]
            },
            "finish_reason": "stop"
          },
          {
            "text": "\n\n\n\"This is a test.\"",
            "index": 2,
            "logprobs": {
              "tokens": [
                "\n\n",
                "\n",
                "\"This",
                " is",
                " a",
                " test",
                ".\""
              ],
              "token_logprobs": [
                -0.8717414,
                -1.8461018,
                -2.9217277,
                -0.010478789,
                -0.0014415423,
                -0.00016980943,
                -0.024593333
              ],
              "top_logprobs": [
                {
                  "\n\n": -0.8717414
                },
                {
                  "This": -0.37682536
                },
                {
                  "This": -0.06889868
                },
                {
                  " is": -0.010478789
                },
                {
                  " a": -0.0014415423
                },
                {
                  " test": -0.00016980943
                },
                {
                  ".\"": -0.024593333
                }
              ],
              "text_offset": [
                18,
                20,
                21,
                26,
                29,
                31,
                36
              ]
            },
            "finish_reason": "stop"
          }
        ],
        "usage": {
          "prompt_tokens": 5,
          "completion_tokens": 63,
          "total_tokens": 68
        }
      }
    }
  ],
  "Variables": {}
}
