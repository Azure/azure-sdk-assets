{
  "Entries": [
    {
      "RequestUri": "https://Sanitized.azure.com/providers/LambdaTest.HyperExecute/operations?api-version=2024-02-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate, br, zstd",
        "Authorization": "Sanitized",
        "Connection": "keep-alive",
        "Referer": "http://localhost:63315/",
        "sec-ch-ua": "\"Chromium\";v=\"136\", \"HeadlessChrome\";v=\"136\", \"Not.A/Brand\";v=\"99\"",
        "sec-ch-ua-mobile": "?0",
        "sec-ch-ua-platform": "\"Windows\"",
        "Sec-Fetch-Dest": "empty",
        "Sec-Fetch-Mode": "cors",
        "Sec-Fetch-Site": "same-site",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/136.0.7103.25 Safari/537.36",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-useragent": "azsdk-js-client azsdk-js-api azsdk-js-arm-lambdatesthyperexecute/1.0.0 core-rest-pipeline/1.20.1 Chromium/136 OS/x86-Windows-19.0.0"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "3042",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Mon, 12 May 2025 07:08:18 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Cache": "CONFIG_NOCACHE",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "625d3f55-6d41-4e42-b83d-193d280ec465",
        "x-ms-operation-identifier": "",
        "x-ms-providerhub-traffic": "True",
        "x-ms-ratelimit-remaining-tenant-reads": "24999",
        "x-ms-request-id": "Sanitized",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20250512T070818Z:625d3f55-6d41-4e42-b83d-193d280ec465",
        "X-MSEdge-Ref": "Ref A: 166C69D70F214E1EBE62509F73CA3E3A Ref B: MAA201060514009 Ref C: 2025-05-12T07:08:18Z"
      },
      "ResponseBody": {
        "value": [
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "checkNameAvailability",
              "operation": "action_checkNameAvailability",
              "description": "action checkNameAvailability"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "operations",
              "operation": "read_operations",
              "description": "read operations"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "locations/operationStatuses",
              "operation": "read_operationStatuses",
              "description": "read operationStatuses"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "locations/operationStatuses",
              "operation": "write_operationStatuses",
              "description": "write operationStatuses"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "organizations",
              "operation": "Organizations_ListBySubscription",
              "description": "List OrganizationResource resources by subscription ID"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "organizations",
              "operation": "Organizations_ListByResourceGroup",
              "description": "List OrganizationResource resources by resource group"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "organizations",
              "operation": "Organizations_Get",
              "description": "Get a OrganizationResource"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "organizations",
              "operation": "Organizations_CreateOrUpdate",
              "description": "Create a OrganizationResource"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "organizations",
              "operation": "Organizations_Delete",
              "description": "Delete a OrganizationResource"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "organizations",
              "operation": "Organizations_Update",
              "description": "Update a OrganizationResource"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "registeredSubscriptions",
              "operation": "read_registeredSubscriptions",
              "description": "read registeredSubscriptions"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "LambdaTest.HyperExecute",
              "operation": "Register the LambdaTest.HyperExecute",
              "description": "Register the subscription for LambdaTest.HyperExecute"
            },
            "properties": null
          },
          {
            "name": "Sanitized",
            "isDataAction": false,
            "display": {
              "provider": "LambdaTest.HyperExecute",
              "resource": "LambdaTest.HyperExecute",
              "operation": "Unregister the LambdaTest.HyperExecute",
              "description": "Unregister the subscription for LambdaTest.HyperExecute"
            },
            "properties": null
          }
        ]
      }
    }
  ],
  "Variables": {}
}
