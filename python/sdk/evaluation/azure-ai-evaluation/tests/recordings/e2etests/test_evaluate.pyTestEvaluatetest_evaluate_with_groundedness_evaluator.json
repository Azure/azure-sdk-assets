{
  "Entries": [
    {
      "RequestUri": "https://Sanitized.services.visualstudio.com/v2.1/track",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "Connection": "keep-alive",
        "Content-Length": "1815",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-python-azuremonitorclient/unknown Python/3.10.8 (Linux-5.15.153.1-microsoft-standard-WSL2-x86_64-with-glibc2.31)"
      },
      "RequestBody": "[{\"ver\":1,\"name\":\"Sanitized\",\"time\":\"2024-10-17T18:42:28.209553Z\",\"sampleRate\":100.0,\"iKey\":\"8b52b368-4c91-4226-b7f7-be52822f0509\",\"tags\":{\"ai.device.locale\":\"en_US\",\"ai.device.osVersion\":\"#1 SMP Fri Mar 29 23:14:13 UTC 2024\",\"ai.device.type\":\"Other\",\"ai.internal.sdkVersion\":\"ulm_py3.10.8:otel1.27.0:ext1.0.0b29\",\"ai.cloud.role\":\"pytest\",\"ai.internal.nodeName\":\"DESKTOP-6LF3OM4\",\"ai.operation.id\":\"00000000000000000000000000000000\",\"ai.operation.parentId\":\"0000000000000000\"},\"data\":{\"baseType\":\"EventData\",\"baseData\":{\"ver\":2,\"name\":\"Sanitized\",\"properties\":{\"level\":\"INFO\",\"from_ci\":\"False\",\"request_id\":\"11af5e68-e9fd-4688-b22c-2d044845e2e6\",\"first_call\":\"True\",\"activity_name\":\"pf.runs.create_or_update\",\"activity_type\":\"PublicApi\",\"user_agent\":\"promptflow-sdk/1.15.0 azure-ai-evaluation/1.0.0b4\",\"flow_type\":\"flex\",\"python_version\":\"3.10.8\",\"installation_id\":\"598f6358-220a-587a-af7c-a7eba37e65c0\"}}}},{\"ver\":1,\"name\":\"Sanitized\",\"time\":\"2024-10-17T18:42:28.224295Z\",\"sampleRate\":100.0,\"iKey\":\"8b52b368-4c91-4226-b7f7-be52822f0509\",\"tags\":{\"ai.device.locale\":\"en_US\",\"ai.device.osVersion\":\"#1 SMP Fri Mar 29 23:14:13 UTC 2024\",\"ai.device.type\":\"Other\",\"ai.internal.sdkVersion\":\"ulm_py3.10.8:otel1.27.0:ext1.0.0b29\",\"ai.cloud.role\":\"pytest\",\"ai.internal.nodeName\":\"DESKTOP-6LF3OM4\",\"ai.operation.id\":\"00000000000000000000000000000000\",\"ai.operation.parentId\":\"0000000000000000\"},\"data\":{\"baseType\":\"EventData\",\"baseData\":{\"ver\":2,\"name\":\"Sanitized\",\"properties\":{\"level\":\"INFO\",\"from_ci\":\"False\",\"request_id\":\"691fbc46-a800-467a-b6d7-9e8a3b2e6378\",\"first_call\":\"True\",\"activity_name\":\"pf.runs.create_or_update\",\"activity_type\":\"PublicApi\",\"user_agent\":\"promptflow-sdk/1.15.0 azure-ai-evaluation/1.0.0b4\",\"flow_type\":\"flex\",\"python_version\":\"3.10.8\",\"installation_id\":\"598f6358-220a-587a-af7c-a7eba37e65c0\"}}}}]",
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 17 Oct 2024 18:42:33 GMT",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000",
        "Transfer-Encoding": "chunked",
        "X-Content-Type-Options": "nosniff"
      },
      "ResponseBody": {
        "itemsReceived": 2,
        "itemsAccepted": 2,
        "appId": null,
        "errors": []
      }
    },
    {
      "RequestUri": "https://Sanitized.api.cognitive.microsoft.com/openai/deployments/aoai-deployment/chat/completions?api-version=2024-04-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "api-key": "Sanitized",
        "Connection": "close",
        "Content-Length": "3967",
        "Content-Type": "application/json",
        "ms-azure-ai-promptflow": "{\"batch_input_source\": \"Data\", \"execution_target\": \"flex\", \"run_mode\": \"Test\", \"flow_id\": \"default_flow_id\", \"root_run_id\": \"azure_ai_evaluation_evaluators_common_base_eval_asyncevaluatorbase_m01t4j62_20241017_144228_008006\"}",
        "ms-azure-ai-promptflow-called-from": "promptflow-core",
        "User-Agent": "AsyncAzureOpenAI/Python 1.50.2",
        "x-ms-useragent": "promptflow-sdk/1.15.0 promptflow-core/1.15.1 promptflow-tracing/1.15.1 azure-ai-evaluation/1.0.0b4",
        "X-Stainless-Arch": "x64",
        "X-Stainless-Async": "async:asyncio",
        "X-Stainless-Lang": "python",
        "X-Stainless-OS": "Other:XXX",
        "X-Stainless-Package-Version": "vX.X.X",
        "x-stainless-retry-count": "0",
        "X-Stainless-Runtime": "CPython",
        "X-Stainless-Runtime-Version": "3.X.X"
      },
      "RequestBody": {
        "messages": [
          {
            "role": "system",
            "content": "You are an AI assistant. You will be given the definition of an evaluation metric for assessing the quality of an answer in a question-answering task. Your job is to compute an accurate evaluation score using the provided evaluation metric. You should return a single integer value between 1 to 5 representing the evaluation metric. You will include no other text or information."
          },
          {
            "role": "user",
            "content": "You will be presented with a CONTEXT and an ANSWER about that CONTEXT. You need to decide whether the ANSWER is entailed by the CONTEXT by choosing one of the following rating:\n1. 5: The ANSWER follows logically from the information contained in the CONTEXT.\n2. 1: The ANSWER is logically false from the information contained in the CONTEXT.\n3. an integer score between 1 and 5 and if such integer score does not exist, use 1: It is not possible to determine whether the ANSWER is true or false without further information. Read the passage of information thoroughly and select the correct answer from the three answer labels. Read the CONTEXT thoroughly to ensure you know what the CONTEXT entails. Note the ANSWER is generated by a computer system, it can contain certain symbols, which should not be a negative factor in the evaluation.\nIndependent Examples:\n## Example Task #1 Input:\n{\"CONTEXT\": \"Some are reported as not having been wanted at all.\", \"QUESTION\": \"\", \"ANSWER\": \"All are reported as being completely and fully wanted.\"}\n## Example Task #1 Output:\n1\n## Example Task #2 Input:\n{\"CONTEXT\": \"Ten new television shows appeared during the month of September. Five of the shows were sitcoms, three were hourlong dramas, and two were news-magazine shows. By January, only seven of these new shows were still on the air. Five of the shows that remained were sitcoms.\", \"QUESTION\": \"\", \"ANSWER\": \"At least one of the shows that were cancelled was an hourlong drama.\"}\n## Example Task #2 Output:\n5\n## Example Task #3 Input:\n{\"CONTEXT\": \"In Quebec, an allophone is a resident, usually an immigrant, whose mother tongue or home language is neither French nor English.\", \"QUESTION\": \"\", \"ANSWER\": \"In Quebec, an allophone is a resident, usually an immigrant, whose mother tongue or home language is not French.\"}\n## Example Task #3 Output:\n5\n## Example Task #4 Input:\n{\"CONTEXT\": \"Some are reported as not having been wanted at all.\", \"QUESTION\": \"\", \"ANSWER\": \"All are reported as being completely and fully wanted.\"}\n## Example Task #4 Output:\n1\n## Actual Task Input:\n{\"CONTEXT\": AML API only, \"QUESTION\": \"\", \"ANSWER\": To create a run using the Azure Machine Learning API, you first need to create an Experiment. Once you have an experiment, you can create a Run object that is associated with that experiment. Here is some Python code that demonstrates this process:\n\n```\nfrom azureml.core import Experiment, Run\nfrom azureml.core.workspace import Workspace\n\n# Define workspace and experiment\nws = Workspace.from_config()\nexp = Experiment(workspace=ws, name='my_experiment')\n\n# Create a new run\nrun = exp.start_logging()\n```\n\nIn this code, the `from_config()` method reads the configuration file that you created when you set up your Azure Machine Learning workspace. The `Experiment` constructor creates an Experiment object that is associated with your workspace, and the `start_logging()` method creates a new Run object that is associated with the Experiment. Now you can use the `run` object to log metrics, upload files, and track other information related to your machine learning experiment.}\nReminder: The return values for each task should be correctly formatted as an integer between 1 and 5. Do not repeat the context and question.\nActual Task Output:"
          }
        ],
        "model": "aoai-deployment",
        "frequency_penalty": 0,
        "max_tokens": 1,
        "presence_penalty": 0,
        "response_format": {
          "type": "text"
        },
        "temperature": 0.0,
        "top_p": 1.0
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Access-Control-Allow-Origin": "*",
        "apim-request-id": "674b373c-627a-4836-a105-2255c1e1f528",
        "azureml-model-session": "d051-20240925115107",
        "Cache-Control": "must-revalidate, no-cache",
        "cmp-upstream-response-duration": "253",
        "Connection": "close",
        "Content-Length": "772",
        "Content-Type": "application/json",
        "Date": "Thu, 17 Oct 2024 18:42:34 GMT",
        "ms-azureml-model-time": "307",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "x-accel-buffering": "no",
        "X-Content-Type-Options": "nosniff",
        "x-envoy-upstream-service-time": "311",
        "x-ms-rai-invoked": "true",
        "x-ms-region": "East US",
        "x-ratelimit-remaining-requests": "9",
        "x-ratelimit-remaining-tokens": "9999",
        "X-Request-ID": "5046bf0c-c3da-4029-a895-2782efab6016"
      },
      "ResponseBody": {
        "choices": [
          {
            "content_filter_results": {
              "hate": {
                "filtered": false,
                "severity": "safe"
              },
              "self_harm": {
                "filtered": false,
                "severity": "safe"
              },
              "sexual": {
                "filtered": false,
                "severity": "safe"
              },
              "violence": {
                "filtered": false,
                "severity": "safe"
              }
            },
            "finish_reason": "length",
            "index": 0,
            "logprobs": null,
            "message": {
              "content": "5",
              "role": "assistant"
            }
          }
        ],
        "created": 1729190554,
        "id": "Sanitized",
        "model": "aoai-deployment",
        "object": "chat.completion",
        "prompt_filter_results": [
          {
            "prompt_index": 0,
            "content_filter_results": {
              "hate": {
                "filtered": false,
                "severity": "safe"
              },
              "self_harm": {
                "filtered": false,
                "severity": "safe"
              },
              "sexual": {
                "filtered": false,
                "severity": "safe"
              },
              "violence": {
                "filtered": false,
                "severity": "safe"
              }
            }
          }
        ],
        "system_fingerprint": null,
        "usage": {
          "completion_tokens": 1,
          "prompt_tokens": 798,
          "total_tokens": 799
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.api.cognitive.microsoft.com/openai/deployments/aoai-deployment/chat/completions?api-version=2024-04-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "api-key": "Sanitized",
        "Connection": "close",
        "Content-Length": "3010",
        "Content-Type": "application/json",
        "ms-azure-ai-promptflow": "{\"batch_input_source\": \"Data\", \"execution_target\": \"flex\", \"run_mode\": \"Test\", \"flow_id\": \"default_flow_id\", \"root_run_id\": \"azure_ai_evaluation_evaluators_common_base_eval_asyncevaluatorbase_m01t4j62_20241017_144228_008006\"}",
        "ms-azure-ai-promptflow-called-from": "promptflow-core",
        "User-Agent": "AsyncAzureOpenAI/Python 1.50.2",
        "x-ms-useragent": "promptflow-sdk/1.15.0 promptflow-core/1.15.1 promptflow-tracing/1.15.1 azure-ai-evaluation/1.0.0b4",
        "X-Stainless-Arch": "x64",
        "X-Stainless-Async": "async:asyncio",
        "X-Stainless-Lang": "python",
        "X-Stainless-OS": "Other:XXX",
        "X-Stainless-Package-Version": "vX.X.X",
        "x-stainless-retry-count": "0",
        "X-Stainless-Runtime": "CPython",
        "X-Stainless-Runtime-Version": "3.X.X"
      },
      "RequestBody": {
        "messages": [
          {
            "role": "system",
            "content": "You are an AI assistant. You will be given the definition of an evaluation metric for assessing the quality of an answer in a question-answering task. Your job is to compute an accurate evaluation score using the provided evaluation metric. You should return a single integer value between 1 to 5 representing the evaluation metric. You will include no other text or information."
          },
          {
            "role": "user",
            "content": "You will be presented with a CONTEXT and an ANSWER about that CONTEXT. You need to decide whether the ANSWER is entailed by the CONTEXT by choosing one of the following rating:\n1. 5: The ANSWER follows logically from the information contained in the CONTEXT.\n2. 1: The ANSWER is logically false from the information contained in the CONTEXT.\n3. an integer score between 1 and 5 and if such integer score does not exist, use 1: It is not possible to determine whether the ANSWER is true or false without further information. Read the passage of information thoroughly and select the correct answer from the three answer labels. Read the CONTEXT thoroughly to ensure you know what the CONTEXT entails. Note the ANSWER is generated by a computer system, it can contain certain symbols, which should not be a negative factor in the evaluation.\nIndependent Examples:\n## Example Task #1 Input:\n{\"CONTEXT\": \"Some are reported as not having been wanted at all.\", \"QUESTION\": \"\", \"ANSWER\": \"All are reported as being completely and fully wanted.\"}\n## Example Task #1 Output:\n1\n## Example Task #2 Input:\n{\"CONTEXT\": \"Ten new television shows appeared during the month of September. Five of the shows were sitcoms, three were hourlong dramas, and two were news-magazine shows. By January, only seven of these new shows were still on the air. Five of the shows that remained were sitcoms.\", \"QUESTION\": \"\", \"ANSWER\": \"At least one of the shows that were cancelled was an hourlong drama.\"}\n## Example Task #2 Output:\n5\n## Example Task #3 Input:\n{\"CONTEXT\": \"In Quebec, an allophone is a resident, usually an immigrant, whose mother tongue or home language is neither French nor English.\", \"QUESTION\": \"\", \"ANSWER\": \"In Quebec, an allophone is a resident, usually an immigrant, whose mother tongue or home language is not French.\"}\n## Example Task #3 Output:\n5\n## Example Task #4 Input:\n{\"CONTEXT\": \"Some are reported as not having been wanted at all.\", \"QUESTION\": \"\", \"ANSWER\": \"All are reported as being completely and fully wanted.\"}\n## Example Task #4 Output:\n1\n## Actual Task Input:\n{\"CONTEXT\": France is in Europe, \"QUESTION\": \"\", \"ANSWER\": Paris is the capital of France.}\nReminder: The return values for each task should be correctly formatted as an integer between 1 and 5. Do not repeat the context and question.\nActual Task Output:"
          }
        ],
        "model": "aoai-deployment",
        "frequency_penalty": 0,
        "max_tokens": 1,
        "presence_penalty": 0,
        "response_format": {
          "type": "text"
        },
        "temperature": 0.0,
        "top_p": 1.0
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Access-Control-Allow-Origin": "*",
        "apim-request-id": "378e1735-8df6-4c82-8bb4-06aa2a293d65",
        "azureml-model-session": "d051-20240925115107",
        "Cache-Control": "must-revalidate, no-cache",
        "cmp-upstream-response-duration": "220",
        "Connection": "close",
        "Content-Length": "772",
        "Content-Type": "application/json",
        "Date": "Thu, 17 Oct 2024 18:42:34 GMT",
        "ms-azureml-model-time": "264",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "x-accel-buffering": "no",
        "X-Content-Type-Options": "nosniff",
        "x-envoy-upstream-service-time": "268",
        "x-ms-rai-invoked": "true",
        "x-ms-region": "East US",
        "x-ratelimit-remaining-requests": "9",
        "x-ratelimit-remaining-tokens": "9999",
        "X-Request-ID": "98a40f9a-b582-4d31-aca7-d3798cf62141"
      },
      "ResponseBody": {
        "choices": [
          {
            "content_filter_results": {
              "hate": {
                "filtered": false,
                "severity": "safe"
              },
              "self_harm": {
                "filtered": false,
                "severity": "safe"
              },
              "sexual": {
                "filtered": false,
                "severity": "safe"
              },
              "violence": {
                "filtered": false,
                "severity": "safe"
              }
            },
            "finish_reason": "length",
            "index": 0,
            "logprobs": null,
            "message": {
              "content": "5",
              "role": "assistant"
            }
          }
        ],
        "created": 1729190554,
        "id": "Sanitized",
        "model": "aoai-deployment",
        "object": "chat.completion",
        "prompt_filter_results": [
          {
            "prompt_index": 0,
            "content_filter_results": {
              "hate": {
                "filtered": false,
                "severity": "safe"
              },
              "self_harm": {
                "filtered": false,
                "severity": "safe"
              },
              "sexual": {
                "filtered": false,
                "severity": "safe"
              },
              "violence": {
                "filtered": false,
                "severity": "safe"
              }
            }
          }
        ],
        "system_fingerprint": null,
        "usage": {
          "completion_tokens": 1,
          "prompt_tokens": 611,
          "total_tokens": 612
        }
      }
    },
    {
      "RequestUri": "https://Sanitized.api.cognitive.microsoft.com/openai/deployments/aoai-deployment/chat/completions?api-version=2024-04-01-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip, deflate",
        "api-key": "Sanitized",
        "Connection": "close",
        "Content-Length": "4657",
        "Content-Type": "application/json",
        "ms-azure-ai-promptflow": "{\"batch_input_source\": \"Data\", \"execution_target\": \"flex\", \"run_mode\": \"Test\", \"flow_id\": \"default_flow_id\", \"root_run_id\": \"azure_ai_evaluation_evaluators_common_base_eval_asyncevaluatorbase_m01t4j62_20241017_144228_008006\"}",
        "ms-azure-ai-promptflow-called-from": "promptflow-core",
        "User-Agent": "AsyncAzureOpenAI/Python 1.50.2",
        "x-ms-useragent": "promptflow-sdk/1.15.0 promptflow-core/1.15.1 promptflow-tracing/1.15.1 azure-ai-evaluation/1.0.0b4",
        "X-Stainless-Arch": "x64",
        "X-Stainless-Async": "async:asyncio",
        "X-Stainless-Lang": "python",
        "X-Stainless-OS": "Other:XXX",
        "X-Stainless-Package-Version": "vX.X.X",
        "x-stainless-retry-count": "0",
        "X-Stainless-Runtime": "CPython",
        "X-Stainless-Runtime-Version": "3.X.X"
      },
      "RequestBody": {
        "messages": [
          {
            "role": "system",
            "content": "You are an AI assistant. You will be given the definition of an evaluation metric for assessing the quality of an answer in a question-answering task. Your job is to compute an accurate evaluation score using the provided evaluation metric. You should return a single integer value between 1 to 5 representing the evaluation metric. You will include no other text or information."
          },
          {
            "role": "user",
            "content": "You will be presented with a CONTEXT and an ANSWER about that CONTEXT. You need to decide whether the ANSWER is entailed by the CONTEXT by choosing one of the following rating:\n1. 5: The ANSWER follows logically from the information contained in the CONTEXT.\n2. 1: The ANSWER is logically false from the information contained in the CONTEXT.\n3. an integer score between 1 and 5 and if such integer score does not exist, use 1: It is not possible to determine whether the ANSWER is true or false without further information. Read the passage of information thoroughly and select the correct answer from the three answer labels. Read the CONTEXT thoroughly to ensure you know what the CONTEXT entails. Note the ANSWER is generated by a computer system, it can contain certain symbols, which should not be a negative factor in the evaluation.\nIndependent Examples:\n## Example Task #1 Input:\n{\"CONTEXT\": \"Some are reported as not having been wanted at all.\", \"QUESTION\": \"\", \"ANSWER\": \"All are reported as being completely and fully wanted.\"}\n## Example Task #1 Output:\n1\n## Example Task #2 Input:\n{\"CONTEXT\": \"Ten new television shows appeared during the month of September. Five of the shows were sitcoms, three were hourlong dramas, and two were news-magazine shows. By January, only seven of these new shows were still on the air. Five of the shows that remained were sitcoms.\", \"QUESTION\": \"\", \"ANSWER\": \"At least one of the shows that were cancelled was an hourlong drama.\"}\n## Example Task #2 Output:\n5\n## Example Task #3 Input:\n{\"CONTEXT\": \"In Quebec, an allophone is a resident, usually an immigrant, whose mother tongue or home language is neither French nor English.\", \"QUESTION\": \"\", \"ANSWER\": \"In Quebec, an allophone is a resident, usually an immigrant, whose mother tongue or home language is not French.\"}\n## Example Task #3 Output:\n5\n## Example Task #4 Input:\n{\"CONTEXT\": \"Some are reported as not having been wanted at all.\", \"QUESTION\": \"\", \"ANSWER\": \"All are reported as being completely and fully wanted.\"}\n## Example Task #4 Output:\n1\n## Actual Task Input:\n{\"CONTEXT\": Logging can be done using any OSS Sdk, \"QUESTION\": \"\", \"ANSWER\": There are a few ways to log models in Azure Machine Learning. \n\nOne way is to use the `register_model()` method of the `Run` object. The `register_model()` method logs a model file in the Azure Machine Learning service workspace and makes it available for deployment. Here's an example:\n\n```python\nfrom azureml.core import Model\n\nmodel_path = './outputs/my_model.pkl'\nmodel = Model.register(workspace=ws, model_path=model_path, model_name='my_model')\n```\n\nThis code registers the model file located at `model_path` to the Azure Machine Learning service workspace with the name `my_model`. \n\nAnother way to log a model is to save it as an output of a `Run`. If your model generation code is part of a script or Jupyter notebook that runs as an Azure Machine Learning experiment, you can save the model file as an output of the `Run` object. Here's an example:\n\n```python\nfrom sklearn.linear_model import LogisticRegression\nfrom azureml.core.run import Run\n\n# Initialize a run object\nrun = Run.get_context()\n\n# Train your model\nX_train, y_train = ...\nclf = LogisticRegression().fit(X_train, y_train)\n\n# Save the model to the Run object's outputs directory\nmodel_path = 'outputs/model.pkl'\njoblib.dump(value=clf, filename=model_path)\n\n# Log the model as a run artifact\nrun.upload_file(name=model_path, path_or_stream=model_path)\n```\n\nIn this code, `Run.get_context()` retrieves the current run context object, which you can use to track metadata and metrics for the run. After training your model, you can use `joblib.dump()` to save the model to a file, and then log the file as an artifact of the run using `run.upload_file()`.}\nReminder: The return values for each task should be correctly formatted as an integer between 1 and 5. Do not repeat the context and question.\nActual Task Output:"
          }
        ],
        "model": "aoai-deployment",
        "frequency_penalty": 0,
        "max_tokens": 1,
        "presence_penalty": 0,
        "response_format": {
          "type": "text"
        },
        "temperature": 0.0,
        "top_p": 1.0
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Access-Control-Allow-Origin": "*",
        "apim-request-id": "67f8054a-23aa-44a5-add0-48d5c3dca125",
        "azureml-model-session": "d051-20240925115107",
        "Cache-Control": "must-revalidate, no-cache",
        "cmp-upstream-response-duration": "231",
        "Connection": "close",
        "Content-Length": "772",
        "Content-Type": "application/json",
        "Date": "Thu, 17 Oct 2024 18:42:34 GMT",
        "ms-azureml-model-time": "269",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "x-accel-buffering": "no",
        "X-Content-Type-Options": "nosniff",
        "x-envoy-upstream-service-time": "274",
        "x-ms-rai-invoked": "true",
        "x-ms-region": "East US",
        "x-ratelimit-remaining-requests": "7",
        "x-ratelimit-remaining-tokens": "9997",
        "X-Request-ID": "a5106e60-27de-4883-b328-21b237f417c4"
      },
      "ResponseBody": {
        "choices": [
          {
            "content_filter_results": {
              "hate": {
                "filtered": false,
                "severity": "safe"
              },
              "self_harm": {
                "filtered": false,
                "severity": "safe"
              },
              "sexual": {
                "filtered": false,
                "severity": "safe"
              },
              "violence": {
                "filtered": false,
                "severity": "safe"
              }
            },
            "finish_reason": "length",
            "index": 0,
            "logprobs": null,
            "message": {
              "content": "3",
              "role": "assistant"
            }
          }
        ],
        "created": 1729190554,
        "id": "Sanitized",
        "model": "aoai-deployment",
        "object": "chat.completion",
        "prompt_filter_results": [
          {
            "prompt_index": 0,
            "content_filter_results": {
              "hate": {
                "filtered": false,
                "severity": "safe"
              },
              "self_harm": {
                "filtered": false,
                "severity": "safe"
              },
              "sexual": {
                "filtered": false,
                "severity": "safe"
              },
              "violence": {
                "filtered": false,
                "severity": "safe"
              }
            }
          }
        ],
        "system_fingerprint": null,
        "usage": {
          "completion_tokens": 1,
          "prompt_tokens": 977,
          "total_tokens": 978
        }
      }
    }
  ],
  "Variables": {}
}
