{
  "Entries": [
    {
      "RequestUri": "https://REDACTED/Azure/iot-plugandplay-models/main/%2FAzure%2Fiot-plugandplay-models%2Fmain%2Fmetadata.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Content-Length": "0",
        "Date": "Thu, 20 Jul 2023 16:52:51 GMT",
        "User-Agent": "azsdk-java-azure-iot-modelsrepository/1.0.0-beta.2 (17.0.2; Windows 11; 10.0)",
        "x-ms-client-request-id": "46ebf669-14bc-43bf-9775-74db7fad6b0b"
      },
      "RequestBody": null,
      "StatusCode": 301,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Access-Control-Allow-Origin": "*",
        "Connection": "keep-alive",
        "Content-Length": "117",
        "Content-Type": "text/html; charset=utf-8",
        "Cross-Origin-Resource-Policy": "cross-origin",
        "Date": "Thu, 20 Jul 2023 16:52:50 GMT",
        "Expires": "Thu, 20 Jul 2023 16:57:50 GMT",
        "Location": "/Azure/iot-plugandplay-models/main/Azure/iot-plugandplay-models/main/metadata.json",
        "Source-Age": "1",
        "Vary": [
          "Authorization",
          "Accept-Encoding"
        ],
        "Via": "1.1 varnish",
        "X-Cache": "HIT",
        "X-Cache-Hits": "2",
        "X-Fastly-Request-ID": "5ef2d1db43135c633d4623de910e8573cc82e4b2",
        "X-GitHub-Request-Id": "0D40:63C8:754BF2:88FC1D:64B96660",
        "X-Served-By": "cache-bfi-krnt7300096-BFI",
        "X-Timer": "S1689871970.474361,VS0,VE0"
      },
      "ResponseBody": [
        "\u003Ca href=\u0022/Azure/iot-plugandplay-models/main/Azure/iot-plugandplay-models/main/metadata.json\u0022\u003EMoved Permanently\u003C/a\u003E.\n\n"
      ]
    },
    {
      "RequestUri": "https://REDACTED/Azure/iot-plugandplay-models/main/dtmi%2Fcom%2Fexample%2Fthermostat-1.json",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "*/*",
        "Content-Length": "0",
        "Date": "Thu, 20 Jul 2023 16:52:51 GMT",
        "User-Agent": "azsdk-java-azure-iot-modelsrepository/1.0.0-beta.2 (17.0.2; Windows 11; 10.0)",
        "x-ms-client-request-id": "da560df6-9e95-4d3b-8208-85d470bce6bc"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Accept-Ranges": "bytes",
        "Access-Control-Allow-Origin": "*",
        "Cache-Control": "max-age=300",
        "Connection": "keep-alive",
        "Content-Length": "2469",
        "Content-Security-Policy": "default-src \u0027none\u0027; style-src \u0027unsafe-inline\u0027; sandbox",
        "Content-Type": "text/plain; charset=utf-8",
        "Cross-Origin-Resource-Policy": "cross-origin",
        "Date": "Thu, 20 Jul 2023 16:52:50 GMT",
        "ETag": "\u00220d2c122754b690ebb4106d28683b3bc7be1dced98582291e46df6433d31e464d\u0022",
        "Expires": "Thu, 20 Jul 2023 16:57:50 GMT",
        "Source-Age": "1",
        "Strict-Transport-Security": "max-age=31536000",
        "Vary": [
          "Authorization",
          "Accept-Encoding",
          "Origin"
        ],
        "Via": "1.1 varnish",
        "X-Cache": "HIT",
        "X-Cache-Hits": "1",
        "X-Content-Type-Options": "nosniff",
        "X-Fastly-Request-ID": "97f5f493cb05c5a5cd6285a1f912eb653795aaf2",
        "X-Frame-Options": "DENY",
        "X-GitHub-Request-Id": "8D48:3789:6235B2:736E82:64B96661",
        "X-Served-By": "cache-bfi-krnt7300096-BFI",
        "X-Timer": "S1689871970.484394,VS0,VE0",
        "X-XSS-Protection": "1; mode=block"
      },
      "ResponseBody": {
        "@context": "dtmi:dtdl:context;2",
        "@id": "dtmi:com:example:Thermostat;1",
        "@type": "Interface",
        "displayName": "Thermostat",
        "description": "Reports current temperature and provides desired temperature control.",
        "contents": [
          {
            "@type": [
              "Telemetry",
              "Temperature"
            ],
            "name": "temperature",
            "displayName": "Temperature",
            "description": "Temperature in degrees Celsius.",
            "schema": "double",
            "unit": "degreeCelsius"
          },
          {
            "@type": [
              "Property",
              "Temperature"
            ],
            "name": "targetTemperature",
            "schema": "double",
            "displayName": "Target Temperature",
            "description": "Allows to remotely specify the desired target temperature.",
            "unit": "degreeCelsius",
            "writable": true
          },
          {
            "@type": [
              "Property",
              "Temperature"
            ],
            "name": "maxTempSinceLastReboot",
            "schema": "double",
            "unit": "degreeCelsius",
            "displayName": "Max temperature since last reboot.",
            "description": "Returns the max temperature since last device reboot."
          },
          {
            "@type": "Command",
            "name": "getMaxMinReport",
            "displayName": "Get Max-Min report.",
            "description": "This command returns the max, min and average temperature from the specified time to the current time.",
            "request": {
              "name": "since",
              "displayName": "Since",
              "description": "Period to return the max-min report.",
              "schema": "dateTime"
            },
            "response": {
              "name": "tempReport",
              "displayName": "Temperature Report",
              "schema": {
                "@type": "Object",
                "fields": [
                  {
                    "name": "maxTemp",
                    "displayName": "Max temperature",
                    "schema": "double"
                  },
                  {
                    "name": "minTemp",
                    "displayName": "Min temperature",
                    "schema": "double"
                  },
                  {
                    "name": "avgTemp",
                    "displayName": "Average Temperature",
                    "schema": "double"
                  },
                  {
                    "name": "startTime",
                    "displayName": "Start Time",
                    "schema": "dateTime"
                  },
                  {
                    "name": "endTime",
                    "displayName": "End Time",
                    "schema": "dateTime"
                  }
                ]
              }
            }
          }
        ]
      }
    }
  ],
  "Variables": {}
}
