{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/Sanitized?api-version=2021-04-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "Content-Length": "21",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-go-armresources/v1.0.0 (go1.19; Windows_NT)"
      },
      "RequestBody": {
        "location": "westus"
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "225",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:15:36 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021537Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized",
        "name": "Sanitized",
        "type": "Microsoft.Resources/resourceGroups",
        "location": "westus",
        "properties": {
          "provisioningState": "Succeeded"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI?api-version=2023-06-30",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "Content-Length": "1152",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": {
        "etag": "AAAAAAFD6M4=",
        "location": "westus",
        "properties": {
          "cloudToDevice": {
            "defaultTtlAsIso8601": "PT1H",
            "feedback": {
              "lockDurationAsIso8601": "PT1M",
              "maxDeliveryCount": 10,
              "ttlAsIso8601": "PT1H"
            },
            "maxDeliveryCount": 10
          },
          "enableDataResidency": false,
          "enableFileUploadNotifications": false,
          "eventHubEndpoints": {
            "events": {
              "partitionCount": 2,
              "retentionTimeInDays": 1
            }
          },
          "features": "None",
          "ipFilterRules": [],
          "messagingEndpoints": {
            "fileNotifications": {
              "lockDurationAsIso8601": "PT1M",
              "maxDeliveryCount": 10,
              "ttlAsIso8601": "PT1H"
            }
          },
          "minTlsVersion": "1.2",
          "networkRuleSets": {
            "applyToBuiltInEventHubEndpoint": true,
            "defaultAction": "Deny",
            "ipRules": [
              {
                "action": "Allow",
                "filterName": "rule1",
                "ipMask": "131.117.159.53"
              },
              {
                "action": "Allow",
                "filterName": "rule2",
                "ipMask": "157.55.59.128/25"
              }
            ]
          },
          "routing": {
            "endpoints": {
              "eventHubs": [],
              "serviceBusQueues": [],
              "serviceBusTopics": [],
              "storageContainers": []
            },
            "fallbackRoute": {
              "condition": "true",
              "endpointNames": [
                "events"
              ],
              "isEnabled": true,
              "name": "$fallback",
              "source": "DeviceMessages"
            },
            "routes": []
          },
          "storageEndpoints": {
            "$default": {
              "connectionString": "",
              "containerName": "",
              "sasTtlAsIso8601": "PT1H"
            }
          }
        },
        "sku": {
          "capacity": 1,
          "name": "S1"
        },
        "tags": {}
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfNzgzZDhiNTctOTU3Yy00YTgxLTljMzAtYmUyYjJlNWVjOGViO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
        "Cache-Control": "no-cache",
        "Content-Length": "1510",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:15:47 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-resource-requests": "4999",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021548Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI",
        "name": "resourceiyiLeI",
        "type": "Microsoft.Devices/IotHubs",
        "location": "westus",
        "tags": {},
        "subscriptionid": "00000000-0000-0000-0000-000000000000",
        "resourcegroup": "Sanitized",
        "etag": "AAAAAAFD6M4=",
        "properties": {
          "provisioningState": "Accepted",
          "ipFilterRules": [],
          "networkRuleSets": {
            "defaultAction": "Deny",
            "applyToBuiltInEventHubEndpoint": true,
            "ipRules": [
              {
                "filterName": "rule1",
                "action": "Allow",
                "ipMask": "131.117.159.53"
              },
              {
                "filterName": "rule2",
                "action": "Allow",
                "ipMask": "157.55.59.128/25"
              }
            ]
          },
          "eventHubEndpoints": {
            "events": {
              "retentionTimeInDays": 1,
              "partitionCount": 2
            }
          },
          "routing": {
            "endpoints": {
              "serviceBusQueues": [],
              "serviceBusTopics": [],
              "eventHubs": [],
              "storageContainers": []
            },
            "routes": [],
            "fallbackRoute": {
              "name": "$fallback",
              "source": "DeviceMessages",
              "condition": "true",
              "endpointNames": [
                "events"
              ],
              "isEnabled": true
            }
          },
          "storageEndpoints": {
            "$default": {
              "sasTtlAsIso8601": "PT1H",
              "connectionString": "",
              "containerName": ""
            }
          },
          "messagingEndpoints": {
            "fileNotifications": {
              "lockDurationAsIso8601": "PT1M",
              "ttlAsIso8601": "PT1H",
              "maxDeliveryCount": 10
            }
          },
          "enableFileUploadNotifications": false,
          "cloudToDevice": {
            "maxDeliveryCount": 10,
            "defaultTtlAsIso8601": "PT1H",
            "feedback": {
              "lockDurationAsIso8601": "PT1M",
              "ttlAsIso8601": "PT1H",
              "maxDeliveryCount": 10
            }
          },
          "features": "None",
          "minTlsVersion": "1.2",
          "allowedFqdnList": [],
          "enableDataResidency": false
        },
        "sku": {
          "name": "S1",
          "tier": "Standard",
          "capacity": 1
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfNzgzZDhiNTctOTU3Yy00YTgxLTljMzAtYmUyYjJlNWVjOGViO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:15:47 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021548Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfNzgzZDhiNTctOTU3Yy00YTgxLTljMzAtYmUyYjJlNWVjOGViO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:16:18 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11998",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021619Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfNzgzZDhiNTctOTU3Yy00YTgxLTljMzAtYmUyYjJlNWVjOGViO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:16:49 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11997",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021649Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfNzgzZDhiNTctOTU3Yy00YTgxLTljMzAtYmUyYjJlNWVjOGViO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:19 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11996",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021719Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfNzgzZDhiNTctOTU3Yy00YTgxLTljMzAtYmUyYjJlNWVjOGViO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:49 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11995",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021750Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Succeeded"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:50 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11994",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021751Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI",
        "name": "resourceiyiLeI",
        "type": "Microsoft.Devices/IotHubs",
        "location": "westus",
        "tags": {},
        "subscriptionid": "00000000-0000-0000-0000-000000000000",
        "resourcegroup": "Sanitized",
        "etag": "AAAADH3c\u002BOo=",
        "properties": {
          "locations": [
            {
              "location": "West US",
              "role": "primary"
            },
            {
              "location": "East US",
              "role": "secondary"
            }
          ],
          "state": "Active",
          "provisioningState": "Succeeded",
          "ipFilterRules": [],
          "networkRuleSets": {
            "defaultAction": "Deny",
            "applyToBuiltInEventHubEndpoint": true,
            "ipRules": [
              {
                "filterName": "rule1",
                "action": "Allow",
                "ipMask": "131.117.159.53"
              },
              {
                "filterName": "rule2",
                "action": "Allow",
                "ipMask": "157.55.59.128/25"
              }
            ]
          },
          "hostName": "resourceiyiLeI.azure-devices.net",
          "eventHubEndpoints": {
            "events": {
              "retentionTimeInDays": 1,
              "partitionCount": 2,
              "partitionIds": [
                "0",
                "1"
              ],
              "path": "resourceiyilei",
              "endpoint": "sb://iothub-ns-resourceiy-25006456-d7448e4b0f.servicebus.windows.net/"
            }
          },
          "routing": {
            "endpoints": {
              "serviceBusQueues": [],
              "serviceBusTopics": [],
              "eventHubs": [],
              "storageContainers": []
            },
            "routes": [],
            "fallbackRoute": {
              "name": "$fallback",
              "source": "DeviceMessages",
              "condition": "true",
              "endpointNames": [
                "events"
              ],
              "isEnabled": true
            }
          },
          "storageEndpoints": {
            "$default": {
              "sasTtlAsIso8601": "PT1H",
              "connectionString": "",
              "containerName": ""
            }
          },
          "messagingEndpoints": {
            "fileNotifications": {
              "lockDurationAsIso8601": "PT1M",
              "ttlAsIso8601": "PT1H",
              "maxDeliveryCount": 10
            }
          },
          "enableFileUploadNotifications": false,
          "cloudToDevice": {
            "maxDeliveryCount": 10,
            "defaultTtlAsIso8601": "PT1H",
            "feedback": {
              "lockDurationAsIso8601": "PT1M",
              "ttlAsIso8601": "PT1H",
              "maxDeliveryCount": 10
            }
          },
          "features": "None",
          "minTlsVersion": "1.2",
          "allowedFqdnList": [],
          "enableDataResidency": false
        },
        "sku": {
          "name": "S1",
          "tier": "Standard",
          "capacity": 1
        },
        "identity": {
          "type": "None"
        },
        "systemData": {
          "createdAt": "2023-05-09T02:15:46.25Z"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/checkNameAvailability?api-version=2023-06-30",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "Content-Length": "23",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": {
        "name": "test-request"
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:51 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021752Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "nameAvailable": true,
        "reason": "Invalid",
        "message": null
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/IotHubs?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:52 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11993",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021753Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/myiothubx",
            "name": "myiothubx",
            "type": "Microsoft.Devices/IotHubs",
            "location": "westus",
            "tags": {},
            "subscriptionid": "00000000-0000-0000-0000-000000000000",
            "resourcegroup": "Sanitized",
            "etag": "AAAADH3cNmo=",
            "properties": {
              "locations": [
                {
                  "location": "West US",
                  "role": "primary"
                },
                {
                  "location": "East US",
                  "role": "secondary"
                }
              ],
              "state": "Active",
              "provisioningState": "Succeeded",
              "ipFilterRules": [],
              "hostName": "myiothubx.azure-devices.net",
              "eventHubEndpoints": {
                "events": {
                  "retentionTimeInDays": 1,
                  "partitionCount": 2,
                  "partitionIds": [
                    "0",
                    "1"
                  ],
                  "path": "myiothubx",
                  "endpoint": "sb://iothub-ns-myiothubx-25004112-3c1356d63b.servicebus.windows.net/"
                }
              },
              "routing": {
                "endpoints": {
                  "serviceBusQueues": [],
                  "serviceBusTopics": [],
                  "eventHubs": [],
                  "storageContainers": []
                },
                "routes": [],
                "fallbackRoute": {
                  "name": "$fallback",
                  "source": "DeviceMessages",
                  "condition": "true",
                  "endpointNames": [
                    "events"
                  ],
                  "isEnabled": true
                }
              },
              "storageEndpoints": {
                "$default": {
                  "sasTtlAsIso8601": "PT1H",
                  "connectionString": "",
                  "containerName": ""
                }
              },
              "messagingEndpoints": {
                "fileNotifications": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
                }
              },
              "enableFileUploadNotifications": false,
              "cloudToDevice": {
                "maxDeliveryCount": 10,
                "defaultTtlAsIso8601": "PT1H",
                "feedback": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
                }
              },
              "features": "None",
              "disableLocalAuth": false,
              "allowedFqdnList": [],
              "enableDataResidency": false
            },
            "sku": {
              "name": "S1",
              "tier": "Standard",
              "capacity": 1
            },
            "identity": {
              "type": "None"
            },
            "systemData": {
              "createdAt": "2023-05-08T03:30:22.0666667Z"
            }
          },
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI",
            "name": "resourceiyiLeI",
            "type": "Microsoft.Devices/IotHubs",
            "location": "westus",
            "tags": {},
            "subscriptionid": "00000000-0000-0000-0000-000000000000",
            "resourcegroup": "Sanitized",
            "etag": "AAAADH3c\u002BOo=",
            "properties": {
              "locations": [
                {
                  "location": "West US",
                  "role": "primary"
                },
                {
                  "location": "East US",
                  "role": "secondary"
                }
              ],
              "state": "Active",
              "provisioningState": "Succeeded",
              "ipFilterRules": [],
              "networkRuleSets": {
                "defaultAction": "Deny",
                "applyToBuiltInEventHubEndpoint": true,
                "ipRules": [
                  {
                    "filterName": "rule1",
                    "action": "Allow",
                    "ipMask": "131.117.159.53"
                  },
                  {
                    "filterName": "rule2",
                    "action": "Allow",
                    "ipMask": "157.55.59.128/25"
                  }
                ]
              },
              "hostName": "resourceiyiLeI.azure-devices.net",
              "eventHubEndpoints": {
                "events": {
                  "retentionTimeInDays": 1,
                  "partitionCount": 2,
                  "partitionIds": [
                    "0",
                    "1"
                  ],
                  "path": "resourceiyilei",
                  "endpoint": "sb://iothub-ns-resourceiy-25006456-d7448e4b0f.servicebus.windows.net/"
                }
              },
              "routing": {
                "endpoints": {
                  "serviceBusQueues": [],
                  "serviceBusTopics": [],
                  "eventHubs": [],
                  "storageContainers": []
                },
                "routes": [],
                "fallbackRoute": {
                  "name": "$fallback",
                  "source": "DeviceMessages",
                  "condition": "true",
                  "endpointNames": [
                    "events"
                  ],
                  "isEnabled": true
                }
              },
              "storageEndpoints": {
                "$default": {
                  "sasTtlAsIso8601": "PT1H",
                  "connectionString": "",
                  "containerName": ""
                }
              },
              "messagingEndpoints": {
                "fileNotifications": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
                }
              },
              "enableFileUploadNotifications": false,
              "cloudToDevice": {
                "maxDeliveryCount": 10,
                "defaultTtlAsIso8601": "PT1H",
                "feedback": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
                }
              },
              "features": "None",
              "minTlsVersion": "1.2",
              "allowedFqdnList": [],
              "enableDataResidency": false
            },
            "sku": {
              "name": "S1",
              "tier": "Standard",
              "capacity": 1
            },
            "identity": {
              "type": "None"
            },
            "systemData": {
              "createdAt": "2023-05-09T02:15:46.25Z"
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI/IotHubStats?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:53 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11992",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021754Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "totalDeviceCount": 0,
        "enabledDeviceCount": 0,
        "disabledDeviceCount": 0
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI/eventHubEndpoints/events/ConsumerGroups?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:55 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11991",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021755Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "created": "Tue, 09 May 2023 02:17:24 GMT"
            },
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI/eventHubEndpoints/events/ConsumerGroups/%24Default",
            "name": "$Default",
            "type": "Microsoft.Devices/IotHubs/EventHubEndpoints/ConsumerGroups",
            "etag": null
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI/quotaMetrics?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:56 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11990",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021757Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "value": [
          {
            "name": "TotalMessages",
            "currentValue": 0,
            "maxValue": 400000
          },
          {
            "name": "TotalDeviceCount",
            "currentValue": 0,
            "maxValue": 1000000
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:57 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11989",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021758Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI",
            "name": "resourceiyiLeI",
            "type": "Microsoft.Devices/IotHubs",
            "location": "westus",
            "tags": {},
            "subscriptionid": "00000000-0000-0000-0000-000000000000",
            "resourcegroup": "Sanitized",
            "etag": "AAAADH3c\u002BOo=",
            "properties": {
              "locations": [
                {
                  "location": "West US",
                  "role": "primary"
                },
                {
                  "location": "East US",
                  "role": "secondary"
                }
              ],
              "state": "Active",
              "provisioningState": "Succeeded",
              "ipFilterRules": [],
              "networkRuleSets": {
                "defaultAction": "Deny",
                "applyToBuiltInEventHubEndpoint": true,
                "ipRules": [
                  {
                    "filterName": "rule1",
                    "action": "Allow",
                    "ipMask": "131.117.159.53"
                  },
                  {
                    "filterName": "rule2",
                    "action": "Allow",
                    "ipMask": "157.55.59.128/25"
                  }
                ]
              },
              "hostName": "resourceiyiLeI.azure-devices.net",
              "eventHubEndpoints": {
                "events": {
                  "retentionTimeInDays": 1,
                  "partitionCount": 2,
                  "partitionIds": [
                    "0",
                    "1"
                  ],
                  "path": "resourceiyilei",
                  "endpoint": "sb://iothub-ns-resourceiy-25006456-d7448e4b0f.servicebus.windows.net/"
                }
              },
              "routing": {
                "endpoints": {
                  "serviceBusQueues": [],
                  "serviceBusTopics": [],
                  "eventHubs": [],
                  "storageContainers": []
                },
                "routes": [],
                "fallbackRoute": {
                  "name": "$fallback",
                  "source": "DeviceMessages",
                  "condition": "true",
                  "endpointNames": [
                    "events"
                  ],
                  "isEnabled": true
                }
              },
              "storageEndpoints": {
                "$default": {
                  "sasTtlAsIso8601": "PT1H",
                  "connectionString": "",
                  "containerName": ""
                }
              },
              "messagingEndpoints": {
                "fileNotifications": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
                }
              },
              "enableFileUploadNotifications": false,
              "cloudToDevice": {
                "maxDeliveryCount": 10,
                "defaultTtlAsIso8601": "PT1H",
                "feedback": {
                  "lockDurationAsIso8601": "PT1M",
                  "ttlAsIso8601": "PT1H",
                  "maxDeliveryCount": 10
                }
              },
              "features": "None",
              "minTlsVersion": "1.2",
              "allowedFqdnList": [],
              "enableDataResidency": false
            },
            "sku": {
              "name": "S1",
              "tier": "Standard",
              "capacity": 1
            },
            "identity": {
              "type": "None"
            },
            "systemData": {
              "createdAt": "2023-05-09T02:15:46.25Z"
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI/skus?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:17:58 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11988",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021759Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "value": [
          {
            "resourceType": "Microsoft.Devices/IotHubs",
            "sku": {
              "name": "S1",
              "tier": "Standard"
            },
            "capacity": {
              "minimum": 1,
              "maximum": 200,
              "default": 1,
              "scaleType": "Manual"
            }
          },
          {
            "resourceType": "Microsoft.Devices/IotHubs",
            "sku": {
              "name": "S2",
              "tier": "Standard"
            },
            "capacity": {
              "minimum": 1,
              "maximum": 200,
              "default": 1,
              "scaleType": "Manual"
            }
          },
          {
            "resourceType": "Microsoft.Devices/IotHubs",
            "sku": {
              "name": "S3",
              "tier": "Standard"
            },
            "capacity": {
              "minimum": 1,
              "maximum": 10,
              "default": 1,
              "scaleType": "Manual"
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI/jobs?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:18:00 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11987",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021800Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "value": []
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI?api-version=2023-06-30",
      "RequestMethod": "PATCH",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "Content-Length": "22",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": {
        "tags": {
          "foo": "bar"
        }
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:18:04 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-resource-requests": "4998",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021804Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI",
        "name": "resourceiyiLeI",
        "type": "Microsoft.Devices/IotHubs",
        "location": "westus",
        "tags": {
          "foo": "bar"
        },
        "subscriptionid": "00000000-0000-0000-0000-000000000000",
        "resourcegroup": "Sanitized",
        "etag": "",
        "properties": {
          "locations": [
            {
              "location": "West US",
              "role": "primary"
            },
            {
              "location": "East US",
              "role": "secondary"
            }
          ],
          "state": "Active",
          "provisioningState": "Succeeded",
          "ipFilterRules": [],
          "networkRuleSets": {
            "defaultAction": "Deny",
            "applyToBuiltInEventHubEndpoint": true,
            "ipRules": [
              {
                "filterName": "rule1",
                "action": "Allow",
                "ipMask": "131.117.159.53"
              },
              {
                "filterName": "rule2",
                "action": "Allow",
                "ipMask": "157.55.59.128/25"
              }
            ]
          },
          "hostName": "resourceiyiLeI.azure-devices.net",
          "eventHubEndpoints": {
            "events": {
              "retentionTimeInDays": 1,
              "partitionCount": 2,
              "partitionIds": [
                "0",
                "1"
              ],
              "path": "resourceiyilei",
              "endpoint": "sb://iothub-ns-resourceiy-25006456-d7448e4b0f.servicebus.windows.net/"
            }
          },
          "routing": {
            "endpoints": {
              "serviceBusQueues": [],
              "serviceBusTopics": [],
              "eventHubs": [],
              "storageContainers": []
            },
            "routes": [],
            "fallbackRoute": {
              "name": "$fallback",
              "source": "DeviceMessages",
              "condition": "true",
              "endpointNames": [
                "events"
              ],
              "isEnabled": true
            }
          },
          "storageEndpoints": {
            "$default": {
              "sasTtlAsIso8601": "PT1H",
              "connectionString": "",
              "containerName": ""
            }
          },
          "messagingEndpoints": {
            "fileNotifications": {
              "lockDurationAsIso8601": "PT1M",
              "ttlAsIso8601": "PT1H",
              "maxDeliveryCount": 10
            }
          },
          "enableFileUploadNotifications": false,
          "cloudToDevice": {
            "maxDeliveryCount": 10,
            "defaultTtlAsIso8601": "PT1H",
            "feedback": {
              "lockDurationAsIso8601": "PT1M",
              "ttlAsIso8601": "PT1H",
              "maxDeliveryCount": 10
            }
          },
          "features": "None",
          "minTlsVersion": "1.2",
          "allowedFqdnList": [],
          "enableDataResidency": false
        },
        "sku": {
          "name": "S1",
          "tier": "Standard",
          "capacity": 1
        },
        "identity": {
          "type": "None"
        },
        "systemData": {
          "createdAt": "2023-05-09T02:15:46.25Z"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI/listkeys?api-version=2023-06-30",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "Content-Length": "0",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:18:04 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-writes": "1198",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021805Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "value": [
          {
            "keyName": "iothubowner",
            "primaryKey": "",
            "secondaryKey": "",
            "rights": "RegistryWrite, ServiceConnect, DeviceConnect"
          },
          {
            "keyName": "service",
            "primaryKey": "",
            "secondaryKey": "",
            "rights": "ServiceConnect"
          },
          {
            "keyName": "device",
            "primaryKey": "",
            "secondaryKey": "",
            "rights": "DeviceConnect"
          },
          {
            "keyName": "registryRead",
            "primaryKey": "",
            "secondaryKey": "",
            "rights": "RegistryRead"
          },
          {
            "keyName": "registryReadWrite",
            "primaryKey": "",
            "secondaryKey": "",
            "rights": "RegistryWrite"
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI/IotHubKeys/iothubowner/listkeys?api-version=2023-06-30",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "Content-Length": "0",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:18:05 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-writes": "1197",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021805Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "keyName": "iothubowner",
        "primaryKey": "",
        "secondaryKey": "",
        "rights": "RegistryWrite, ServiceConnect, DeviceConnect"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI/failover?api-version=2023-06-30",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "Content-Length": "27",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": {
        "failoverRegion": "eastus"
      },
      "StatusCode": 202,
      "ResponseHeaders": {
        "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
        "Cache-Control": "no-cache",
        "Content-Length": "4",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:18:08 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other",
        "Pragma": "no-cache",
        "Retry-After": "15",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-writes": "1196",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021808Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": "null"
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:18:23 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11986",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021823Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:18:53 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11985",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021853Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:19:24 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11984",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021924Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:19:53 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11983",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T021954Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:20:24 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11982",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022024Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:20:55 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11981",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022056Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:21:25 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11980",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022126Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:21:55 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11979",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022156Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:22:26 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11978",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022227Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:22:57 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11977",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022257Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:23:26 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11976",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022327Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:23:57 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11975",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022357Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:24:27 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11974",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022428Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:24:58 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11973",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022458Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:25:28 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11972",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022528Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:25:59 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11971",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022600Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:26:30 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11970",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022630Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:26:59 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11969",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022700Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Succeeded"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM=?api-version=2023-06-30\u0026operationSource=other",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "0",
        "Date": "Tue, 09 May 2023 02:27:00 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfZTJhNWU0MjYtY2Y2ZC00NzhlLWIzOWEtODkyZDM5NzVkNTJiO3JlZ2lvbj13ZXN0dXM%3D?api-version=2023-06-30\u0026operationSource=other",
        "Pragma": "no-cache",
        "Retry-After": "15",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11968",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022700Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/providers/Microsoft.Devices/operations?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:27:01 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-tenant-reads": "11999",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022702Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "value": [
          {
            "name": "Microsoft.Devices/register/action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Register Resource Provider",
              "description": "Register the subscription for the IotHub resource provider and enables the creation of IotHub resources"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/IotHubs/diagnosticSettings/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Get Diagnostic Setting",
              "description": "Gets the diagnostic setting for the resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/IotHubs/diagnosticSettings/write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Set Diagnostic Setting",
              "description": "Creates or updates the diagnostic setting for the resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/IotHubs/logDefinitions/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Read IotHub service log definitions",
              "description": "Gets the available log definitions for the IotHub Service"
            },
            "properties": {
              "serviceSpecification": {
                "logSpecifications": [
                  {
                    "name": "Connections",
                    "displayName": "Connections",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "DeviceTelemetry",
                    "displayName": "Device Telemetry",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "C2DCommands",
                    "displayName": "C2D Commands",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "DeviceIdentityOperations",
                    "displayName": "Device Identity Operations",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "FileUploadOperations",
                    "displayName": "File Upload Operations",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "Routes",
                    "displayName": "Routes",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "D2CTwinOperations",
                    "displayName": "D2CTwinOperations",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "C2DTwinOperations",
                    "displayName": "C2D Twin Operations",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "TwinQueries",
                    "displayName": "Twin Queries",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "JobsOperations",
                    "displayName": "Jobs Operations",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "DirectMethods",
                    "displayName": "Direct Methods",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "DistributedTracing",
                    "displayName": "Distributed Tracing (Preview)",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "Configurations",
                    "displayName": "Configurations",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "DeviceStreams",
                    "displayName": "Device Streams (Preview)",
                    "blobDuration": "PT1H"
                  }
                ]
              }
            }
          },
          {
            "name": "Microsoft.Devices/IotHubs/metricDefinitions/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Read IotHub service metric definitions",
              "description": "Gets the available metrics for the IotHub service"
            },
            "properties": {
              "serviceSpecification": {
                "metricSpecifications": [
                  {
                    "name": "d2c.telemetry.ingress.allProtocol",
                    "displayName": "Telemetry message send attempts",
                    "displayDescription": "Number of device-to-cloud telemetry messages attempted to be sent to your IoT hub",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.telemetry.ingress.success",
                    "displayName": "Telemetry messages sent",
                    "displayDescription": "Number of device-to-cloud telemetry messages sent successfully to your IoT hub",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.commands.egress.complete.success",
                    "displayName": "C2D message deliveries completed",
                    "displayDescription": "Number of cloud-to-device message deliveries completed successfully by the device",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.commands.egress.abandon.success",
                    "displayName": "C2D messages abandoned",
                    "displayDescription": "Number of cloud-to-device messages abandoned by the device",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.commands.egress.reject.success",
                    "displayName": "C2D messages rejected",
                    "displayDescription": "Number of cloud-to-device messages rejected by the device",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "C2DMessagesExpired",
                    "displayName": "C2D Messages Expired",
                    "displayDescription": "Number of expired cloud-to-device messages",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "devices.totalDevices",
                    "displayName": "Total devices (deprecated)",
                    "displayDescription": "Number of devices registered to your IoT hub",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "devices.connectedDevices.allProtocol",
                    "displayName": "Connected devices (deprecated) ",
                    "displayDescription": "Number of devices connected to your IoT hub",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.telemetry.egress.success",
                    "displayName": "Routing: telemetry messages delivered",
                    "displayDescription": "The number of times messages were successfully delivered to all endpoints using IoT Hub routing. If a message is routed to multiple endpoints, this value increases by one for each successful delivery. If a message is delivered to the same endpoint multiple times, this value increases by one for each successful delivery.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.telemetry.egress.dropped",
                    "displayName": "Routing: telemetry messages dropped\u00A0",
                    "displayDescription": "The number of times messages were dropped by IoT Hub routing due to dead endpoints. This value does not count messages delivered to fallback route as dropped messages are not delivered there.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.telemetry.egress.orphaned",
                    "displayName": "Routing: telemetry messages orphaned\u00A0",
                    "displayDescription": "The number of times messages were orphaned by IoT Hub routing because they didn\u0027t match any routing rules (including the fallback rule).\u00A0",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.telemetry.egress.invalid",
                    "displayName": "Routing: telemetry messages incompatible",
                    "displayDescription": "The number of times IoT Hub routing failed to deliver messages due to an incompatibility with the endpoint. This value does not include retries.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.telemetry.egress.fallback",
                    "displayName": "Routing: messages delivered to fallback",
                    "displayDescription": "The number of times IoT Hub routing delivered messages to the endpoint associated with the fallback route.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.egress.eventHubs",
                    "displayName": "Routing: messages delivered to Event Hub",
                    "displayDescription": "The number of times IoT Hub routing successfully delivered messages to Event Hub endpoints.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.latency.eventHubs",
                    "displayName": "Routing: message latency for Event Hub",
                    "displayDescription": "The average latency (milliseconds) between message ingress to IoT Hub and message ingress into an Event Hub endpoint.",
                    "fillGapWithZero": true,
                    "unit": "Milliseconds",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.egress.serviceBusQueues",
                    "displayName": "Routing: messages delivered to Service Bus Queue",
                    "displayDescription": "The number of times IoT Hub routing successfully delivered messages to Service Bus queue endpoints.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.latency.serviceBusQueues",
                    "displayName": "Routing: message latency for Service Bus Queue",
                    "displayDescription": "The average latency (milliseconds) between message ingress to IoT Hub and telemetry message ingress into a Service Bus queue endpoint.",
                    "fillGapWithZero": true,
                    "unit": "Milliseconds",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.egress.serviceBusTopics",
                    "displayName": "Routing: messages delivered to Service Bus Topic",
                    "displayDescription": "The number of times IoT Hub routing successfully delivered messages to Service Bus topic endpoints.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.latency.serviceBusTopics",
                    "displayName": "Routing: message latency for Service Bus Topic",
                    "displayDescription": "The average latency (milliseconds) between message ingress to IoT Hub and telemetry message ingress into a Service Bus topic endpoint.",
                    "fillGapWithZero": true,
                    "unit": "Milliseconds",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.egress.builtIn.events",
                    "displayName": "Routing: messages delivered to messages/events",
                    "displayDescription": "The number of times IoT Hub routing successfully delivered messages to the built-in endpoint (messages/events).",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.latency.builtIn.events",
                    "displayName": "Routing: message latency for messages/events",
                    "displayDescription": "The average latency (milliseconds) between message ingress to IoT Hub and telemetry message ingress into the built-in endpoint (messages/events).",
                    "fillGapWithZero": true,
                    "unit": "Milliseconds",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.egress.storage",
                    "displayName": "Routing: messages delivered to storage",
                    "displayDescription": "The number of times IoT Hub routing successfully delivered messages to storage endpoints.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.latency.storage",
                    "displayName": "Routing: message latency for storage",
                    "displayDescription": "The average latency (milliseconds) between message ingress to IoT Hub and telemetry message ingress into a storage endpoint.",
                    "fillGapWithZero": true,
                    "unit": "Milliseconds",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.egress.storage.bytes",
                    "displayName": "Routing: data delivered to storage",
                    "displayDescription": "The amount of data (bytes) IoT Hub routing delivered to storage endpoints.",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.endpoints.egress.storage.blobs",
                    "displayName": "Routing: blobs delivered to storage",
                    "displayDescription": "The number of times IoT Hub routing delivered blobs to storage endpoints.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "EventGridDeliveries",
                    "displayName": "Event Grid deliveries",
                    "displayDescription": "The number of IoT Hub events published to Event Grid. Use the Result dimension for the number of successful and failed requests. EventType dimension shows the type of event (https://aka.ms/ioteventgrid).",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "dimensions": [
                      {
                        "name": "Result",
                        "displayName": "Routing Result"
                      },
                      {
                        "name": "EventType",
                        "displayName": "Event Type"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "EventGridLatency",
                    "displayName": "Event Grid latency",
                    "displayDescription": "The average latency (milliseconds) from when the Iot Hub event was generated to when the event was published to Event Grid. This number is an average between all event types. Use the EventType dimension to see latency of a specific type of event.",
                    "fillGapWithZero": true,
                    "unit": "Milliseconds",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum"
                    ],
                    "dimensions": [
                      {
                        "name": "EventType",
                        "displayName": "Event Type"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "RoutingDeliveries",
                    "displayName": "Routing Deliveries (preview)",
                    "displayDescription": "The number of times IoT Hub attempted to deliver messages to all endpoints using routing. To see the number of successful or failed attempts, use the Result dimension. To see the reason of failure, like invalid, dropped, or orphaned, use the FailureReasonCategory dimension. You can also use the EndpointName and EndpointType dimensions to understand how many messages were delivered to your different endpoints. The metric value increases by one for each delivery attempt, including if the message is delivered to multiple endpoints or if the message is delivered to the same endpoint multiple times.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "dimensions": [
                      {
                        "name": "EndpointType",
                        "displayName": "Endpoint Type"
                      },
                      {
                        "name": "EndpointName",
                        "displayName": "Endpoint Name"
                      },
                      {
                        "name": "FailureReasonCategory",
                        "displayName": "Failure Reason Category"
                      },
                      {
                        "name": "Result",
                        "displayName": "Result"
                      },
                      {
                        "name": "RoutingSource",
                        "displayName": "Routing Source"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "RoutingDeliveryLatency",
                    "displayName": "Routing Delivery Latency (preview)",
                    "displayDescription": "The average latency (milliseconds) between message ingress to IoT Hub and telemetry message ingress into an endpoint. You can use the EndpointName and EndpointType dimensions to understand the latency to your different endpoints.",
                    "fillGapWithZero": true,
                    "unit": "Milliseconds",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum"
                    ],
                    "dimensions": [
                      {
                        "name": "EndpointType",
                        "displayName": "Endpoint Type"
                      },
                      {
                        "name": "EndpointName",
                        "displayName": "Endpoint Name"
                      },
                      {
                        "name": "RoutingSource",
                        "displayName": "Routing Source"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "RoutingDataSizeInBytesDelivered",
                    "displayName": "Routing Delivery Message Size in Bytes (preview)",
                    "displayDescription": "The total size in bytes of messages delivered by IoT hub to an endpoint. You can use the EndpointName and EndpointType dimensions to view the size of the messages in bytes delivered to your different endpoints. The metric value increases for every message delivered, including if the message is delivered to multiple endpoints or if the message is delivered to the same endpoint multiple times.",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "dimensions": [
                      {
                        "name": "EndpointType",
                        "displayName": "Endpoint Type"
                      },
                      {
                        "name": "EndpointName",
                        "displayName": "Endpoint Name"
                      },
                      {
                        "name": "RoutingSource",
                        "displayName": "Routing Source"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.twin.read.success",
                    "displayName": "Successful twin reads from devices",
                    "displayDescription": "The count of all successful device-initiated twin reads.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.twin.read.failure",
                    "displayName": "Failed twin reads from devices",
                    "displayDescription": "The count of all failed device-initiated twin reads.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.twin.read.size",
                    "displayName": "Response size of twin reads from devices",
                    "displayDescription": "The average, min, and max of all successful device-initiated twin reads.",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.twin.update.success",
                    "displayName": "Successful twin updates from devices",
                    "displayDescription": "The count of all successful device-initiated twin updates.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.twin.update.failure",
                    "displayName": "Failed twin updates from devices",
                    "displayDescription": "The count of all failed device-initiated twin updates.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.twin.update.size",
                    "displayName": "Size of twin updates from devices",
                    "displayDescription": "The average, min, and max size of all successful device-initiated twin updates.",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.methods.success",
                    "displayName": "Successful direct method invocations",
                    "displayDescription": "The count of all successful direct method calls.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.methods.failure",
                    "displayName": "Failed direct method invocations",
                    "displayDescription": "The count of all failed direct method calls.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.methods.requestSize",
                    "displayName": "Request size of direct method invocations",
                    "displayDescription": "The average, min, and max of all successful direct method requests.",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.methods.responseSize",
                    "displayName": "Response size of direct method invocations",
                    "displayDescription": "The average, min, and max of all successful direct method responses.",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.twin.read.success",
                    "displayName": "Successful twin reads from back end",
                    "displayDescription": "The count of all successful back-end-initiated twin reads.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.twin.read.failure",
                    "displayName": "Failed twin reads from back end",
                    "displayDescription": "The count of all failed back-end-initiated twin reads.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.twin.read.size",
                    "displayName": "Response size of twin reads from back end",
                    "displayDescription": "The average, min, and max of all successful back-end-initiated twin reads.",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.twin.update.success",
                    "displayName": "Successful twin updates from back end",
                    "displayDescription": "The count of all successful back-end-initiated twin updates.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.twin.update.failure",
                    "displayName": "Failed twin updates from back end",
                    "displayDescription": "The count of all failed back-end-initiated twin updates.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "c2d.twin.update.size",
                    "displayName": "Size of twin updates from back end",
                    "displayDescription": "The average, min, and max size of all successful back-end-initiated twin updates.",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "twinQueries.success",
                    "displayName": "Successful twin queries",
                    "displayDescription": "The count of all successful twin queries.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "twinQueries.failure",
                    "displayName": "Failed twin queries",
                    "displayDescription": "The count of all failed twin queries.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "twinQueries.resultSize",
                    "displayName": "Twin queries result size",
                    "displayDescription": "The average, min, and max of the result size of all successful twin queries.",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.createTwinUpdateJob.success",
                    "displayName": "Successful creations of twin update jobs",
                    "displayDescription": "The count of all successful creation of twin update jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.createTwinUpdateJob.failure",
                    "displayName": "Failed creations of twin update jobs",
                    "displayDescription": "The count of all failed creation of twin update jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.createDirectMethodJob.success",
                    "displayName": "Successful creations of method invocation jobs",
                    "displayDescription": "The count of all successful creation of direct method invocation jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.createDirectMethodJob.failure",
                    "displayName": "Failed creations of method invocation jobs",
                    "displayDescription": "The count of all failed creation of direct method invocation jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.listJobs.success",
                    "displayName": "Successful calls to list jobs",
                    "displayDescription": "The count of all successful calls to list jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.listJobs.failure",
                    "displayName": "Failed calls to list jobs",
                    "displayDescription": "The count of all failed calls to list jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.cancelJob.success",
                    "displayName": "Successful job cancellations",
                    "displayDescription": "The count of all successful calls to cancel a job.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.cancelJob.failure",
                    "displayName": "Failed job cancellations",
                    "displayDescription": "The count of all failed calls to cancel a job.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.queryJobs.success",
                    "displayName": "Successful job queries",
                    "displayDescription": "The count of all successful calls to query jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.queryJobs.failure",
                    "displayName": "Failed job queries",
                    "displayDescription": "The count of all failed calls to query jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.completed",
                    "displayName": "Completed jobs",
                    "displayDescription": "The count of all completed jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "jobs.failed",
                    "displayName": "Failed jobs",
                    "displayDescription": "The count of all failed jobs.",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "d2c.telemetry.ingress.sendThrottle",
                    "displayName": "Number of throttling errors",
                    "displayDescription": "Number of throttling errors due to device throughput throttles",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "dailyMessageQuotaUsed",
                    "displayName": "Total number of messages used",
                    "displayDescription": "Number of total messages used today",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Maximum",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "deviceDataUsage",
                    "displayName": "Total device data usage",
                    "displayDescription": "Bytes transferred to and from any devices connected to IotHub",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "deviceDataUsageV2",
                    "displayName": "Total device data usage (preview)",
                    "displayDescription": "Bytes transferred to and from any devices connected to IotHub",
                    "fillGapWithZero": true,
                    "unit": "Bytes",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "totalDeviceCount",
                    "displayName": "Total devices",
                    "displayDescription": "Number of devices registered to your IoT hub",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Maximum",
                      "Minimum"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ],
                    "lockAggregationType": "Total"
                  },
                  {
                    "name": "connectedDeviceCount",
                    "displayName": "Connected devices",
                    "displayDescription": "Number of devices connected to your IoT hub",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Maximum",
                      "Minimum"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ],
                    "lockAggregationType": "Total"
                  },
                  {
                    "name": "configurations",
                    "displayName": "Configuration Metrics",
                    "displayDescription": "Metrics for Configuration Operations",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "broker.msgs.published",
                    "displayName": "Broker: Messages Published (Preview)",
                    "displayDescription": "Total number of messages published to the broker",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "dimensions": [
                      {
                        "name": "Result",
                        "displayName": "Result"
                      },
                      {
                        "name": "FailureReasonCategory",
                        "displayName": "Failure Reason Category"
                      },
                      {
                        "name": "QoS",
                        "displayName": "QoS"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "broker.msgs.delivered",
                    "displayName": "Broker: Messages Delivered (Preview)",
                    "displayDescription": "Total number of messages delivered by the broker",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "dimensions": [
                      {
                        "name": "Result",
                        "displayName": "Result"
                      },
                      {
                        "name": "FailureReasonCategory",
                        "displayName": "Failure Reason Category"
                      },
                      {
                        "name": "QoS",
                        "displayName": "QoS"
                      },
                      {
                        "name": "TopicSpaceName",
                        "displayName": "Topic Space Name"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "broker.msgs.delivery.throttlingLatency",
                    "displayName": "Broker: Message delivery latency from throttling (Preview)",
                    "displayDescription": "The average egress message delivery latency due to throttling",
                    "fillGapWithZero": true,
                    "unit": "Milliseconds",
                    "aggregationType": "Average",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum"
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "mqtt.connections",
                    "displayName": "MQTT: New Connections (Preview)",
                    "displayDescription": "The number of new connections per IoT Hub",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "dimensions": [
                      {
                        "name": "SessionType",
                        "displayName": "Session Type"
                      },
                      {
                        "name": "MqttEndpoint",
                        "displayName": "Mqtt Endpoint"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "mqtt.sessions.dropped",
                    "displayName": "MQTT: Dropped Sessions (Preview)",
                    "displayDescription": "The rate of dropped sessions per IoT Hub",
                    "fillGapWithZero": true,
                    "unit": "Percent",
                    "aggregationType": "Average",
                    "dimensions": [
                      {
                        "name": "DropReason",
                        "displayName": "Drop Reason"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "mqtt.subscriptions",
                    "displayName": "MQTT: New Subscriptions (Preview)",
                    "displayDescription": "The number of subscriptions",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "dimensions": [
                      {
                        "name": "Result",
                        "displayName": "Result"
                      },
                      {
                        "name": "FailureReasonCategory",
                        "displayName": "Failure Reason Category"
                      },
                      {
                        "name": "OperationType",
                        "displayName": "Operation Type"
                      },
                      {
                        "name": "TopicSpaceName",
                        "displayName": "Topic Space Name"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "mqtt.sessions",
                    "displayName": "MQTT: New Sessions (Preview)",
                    "displayDescription": "The number of new sessions per IoT Hub",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "dimensions": [
                      {
                        "name": "SessionType",
                        "displayName": "Session Type"
                      },
                      {
                        "name": "MqttEndpoint",
                        "displayName": "Mqtt Endpoint"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "messagesUsedByIntegratedServices",
                    "displayName": "Messages Grouped By Integrated Service Names",
                    "displayDescription": "Messages Grouped By Integrated Service Names",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "supportedAggregationTypes": [
                      "Average",
                      "Minimum",
                      "Maximum",
                      "Total"
                    ],
                    "dimensions": [
                      {
                        "name": "Result",
                        "displayName": "Result"
                      },
                      {
                        "name": "IntegratedServiceName",
                        "displayName": "Integrated Service Name"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  }
                ]
              }
            }
          },
          {
            "name": "Microsoft.Devices/IotHubs/devices/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Read Device/Module",
              "description": "Read any device or module identity"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/devices/write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Write Device/Module",
              "description": "Create or update any device or module identity"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/devices/delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Delete Device/Module",
              "description": "Delete any device or module identity"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/twins/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Read DeviceTwin",
              "description": "Read any device or module twin"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/twins/write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Write DeviceTwin",
              "description": "Write any device or module twin"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/jobs/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Read Jobs",
              "description": "Return a list of jobs"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/jobs/write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Write Jobs",
              "description": "Create or update any job"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/jobs/delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Delete Jobs",
              "description": "Delete any job"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/cloudToDeviceMessages/send/action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Send cloud-to-device message",
              "description": "Send cloud-to-device message to any device "
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/cloudToDeviceMessages/feedback/action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Receive cloud-to-device messages",
              "description": "Receive, complete, or abandon cloud-to-device message feedback notification"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/cloudToDeviceMessages/queue/purge/action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Delete cloud-to-device messages",
              "description": "Deletes all the pending commands for a device"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/directMethods/invoke/action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Invoke Direct Method",
              "description": "Invokes a direct method on a device"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/fileUpload/notifications/action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "File Upload Notifications",
              "description": "Receive, complete, or abandon file upload notifications"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/statistics/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Read Statistics",
              "description": "Read device and service statistics"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/configurations/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Read Configuration",
              "description": "Read device management configurations"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/configurations/write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Write Configuration",
              "description": "Create or update device management configurations"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/configurations/delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Delete Configuration",
              "description": "Delete any device management configuration"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/configurations/applyToEdgeDevice/action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Apply Configuration to Edge Device",
              "description": "Applies the configuration content to an edge device"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/IotHubs/configurations/testQueries/action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "IotHubs",
              "operation": "Test Configuration Queries",
              "description": "Validates target condition and custom metric queries for a configuration"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/iotHubs/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get IotHub(s)",
              "description": "Gets the IotHub resource(s)"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Create or update IotHub Resource",
              "description": "Create or update IotHub Resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Delete IotHub Resource",
              "description": "Delete IotHub Resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/operationresults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get Operation Result (Obsolete API)",
              "description": "Get Operation Result (Obsolete API)"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/iotHubStats/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get IotHub Statistics",
              "description": "Get IotHub Statistics"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/skus/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get valid IotHub Skus",
              "description": "Get valid IotHub Skus"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/listkeys/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get all IotHub Keys",
              "description": "Get all IotHub Keys"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/iotHubKeys/listkeys/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get IotHub Key for the given name",
              "description": "Get IotHub Key for the given name"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/eventHubEndpoints/consumerGroups/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Create EventHub Consumer Group",
              "description": "Create EventHub Consumer Group"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/eventHubEndpoints/consumerGroups/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get EventHub Consumer Group(s)",
              "description": "Get EventHub Consumer Group(s)"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/eventHubEndpoints/consumerGroups/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Delete EventHub Consumer Group",
              "description": "Delete EventHub Consumer Group"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/exportDevices/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Export Devices",
              "description": "Export Devices"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/importDevices/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Import Devices",
              "description": "Import Devices"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/jobs/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get the Job(s) on IotHub",
              "description": "Get Job(s) details submitted on given IotHub"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/quotaMetrics/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get Quota Metrics",
              "description": "Get Quota Metrics"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/routing/$testall/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Routing Rule Test All",
              "description": "Test a message against all existing Routes"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/routing/$testnew/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Routing Rule Test Route",
              "description": "Test a message against a provided test Route"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/routingEndpointsHealth/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get Endpoint Health",
              "description": "Gets the health of all routing Endpoints for an IotHub"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/operations/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get All ResourceProvider Operations",
              "description": "Get All ResourceProvider Operations"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/checkNameAvailability/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Check If IotHub name is available",
              "description": "Check If IotHub name is available"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/checkProvisioningServiceNameAvailability/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Check If Provisioning Service name is available",
              "description": "Check If Provisioning service name is available"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/usages/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get Subscription Usages",
              "description": "Get subscription usage details for this provider."
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/operationresults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get Operation Result",
              "description": "Get Operation Result"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningserviceoperationresults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get Provisioning Service Operation Result",
              "description": "Get Provisioning Service Operation Result"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/locations/provisioningserviceoperationresults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get Location Based Provisioning Service Operation Result",
              "description": "Get Location Based Provisioning Service Operation Result"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/locations/operationresults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get Location based Operation Result",
              "description": "Get Location based Operation Result"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/certificates/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Gets the Certificate",
              "description": "Gets the Certificate"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/certificates/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Create or Update Certificate",
              "description": "Create or Update Certificate"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/certificates/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Deletes Certificate",
              "description": "Deletes Certificate"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/certificates/generateVerificationCode/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Generate Verification code",
              "description": "Generate Verification code"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/certificates/verify/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Verify Certificate resource",
              "description": "Verify Certificate resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get IotDps resource",
              "description": "Get IotDps resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Create IotDps resource",
              "description": "Create IotDps resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Delete IotDps resource",
              "description": "Delete IotDps resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/operationresults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get DPS Operation Result",
              "description": "Get DPS Operation Result"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/skus/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get valid IotDps Skus",
              "description": "Get valid IotDps Skus"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/listkeys/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get all IotDps keys",
              "description": "Get all IotDps keys"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/keys/listkeys/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Get IotDps Keys for key name",
              "description": "Get IotDps Keys for key name"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/certificates/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Gets the Certificate",
              "description": "Gets the Certificate"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/certificates/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Create or Update Certificate",
              "description": "Create or Update Certificate"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/certificates/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Deletes Certificate",
              "description": "Deletes Certificate"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/certificates/generateVerificationCode/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Generate Verification code",
              "description": "Generate Verification code"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/certificates/verify/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": null,
              "operation": "Verify Certificate resource",
              "description": "Verify Certificate resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/diagnosticSettings/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Get Diagnostic Setting",
              "description": "Gets the diagnostic setting for the resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/diagnosticSettings/write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Set Diagnostic Setting",
              "description": "Creates or updates the diagnostic setting for the resource"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/metricDefinitions/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Read provisioning service metric definitions",
              "description": "Gets the available metrics for the provisioning service"
            },
            "properties": {
              "serviceSpecification": {
                "metricSpecifications": [
                  {
                    "name": "RegistrationAttempts",
                    "displayName": "Registration attempts",
                    "displayDescription": "Number of device registrations attempted",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "dimensions": [
                      {
                        "name": "ProvisioningServiceName",
                        "displayName": "Provisioning service name"
                      },
                      {
                        "name": "IotHubName",
                        "displayName": "IoT hub name"
                      },
                      {
                        "name": "Status",
                        "displayName": "Status",
                        "toBeExportedForShoebox": true
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "DeviceAssignments",
                    "displayName": "Devices assigned",
                    "displayDescription": "Number of devices assigned to an IoT hub",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "dimensions": [
                      {
                        "name": "ProvisioningServiceName",
                        "displayName": "Provisioning service name"
                      },
                      {
                        "name": "IotHubName",
                        "displayName": "IoT hub name"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  },
                  {
                    "name": "AttestationAttempts",
                    "displayName": "Attestation attempts",
                    "displayDescription": "Number of device attestations attempted",
                    "fillGapWithZero": true,
                    "unit": "Count",
                    "aggregationType": "Total",
                    "dimensions": [
                      {
                        "name": "ProvisioningServiceName",
                        "displayName": "Provisioning service name"
                      },
                      {
                        "name": "Status",
                        "displayName": "Status",
                        "toBeExportedForShoebox": true
                      },
                      {
                        "name": "Protocol",
                        "displayName": "Protocol"
                      }
                    ],
                    "availabilities": [
                      {
                        "timeGrain": "PT1M",
                        "blobDuration": "PT1H"
                      }
                    ]
                  }
                ]
              }
            }
          },
          {
            "name": "Microsoft.Devices/provisioningServices/logDefinitions/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Read provisioning service log definitions",
              "description": "Gets the available log definitions for the provisioning Service"
            },
            "properties": {
              "serviceSpecification": {
                "logSpecifications": [
                  {
                    "name": "DeviceOperations",
                    "displayName": "Device Operations",
                    "blobDuration": "PT1H"
                  },
                  {
                    "name": "ServiceOperations",
                    "displayName": "Service Operations",
                    "blobDuration": "PT1H"
                  }
                ]
              }
            }
          },
          {
            "name": "Microsoft.Devices/provisioningServices/enrollments/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Read Enrollments",
              "description": "Read Enrollments"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/provisioningServices/enrollments/write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Write Enrollments",
              "description": "Write Enrollments"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/provisioningServices/enrollments/delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Delete Enrollments",
              "description": "Delete Enrollments"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/provisioningServices/enrollmentGroups/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Read Enrollment Groups",
              "description": "Read Enrollment Groups"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/provisioningServices/enrollmentGroups/write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Write Enrollment Groups",
              "description": "Write Enrollment Groups"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/provisioningServices/enrollmentGroups/delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Delete Enrollment Groups",
              "description": "Delete Enrollment Groups"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/provisioningServices/registrationStates/read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Read Registration States",
              "description": "Read Registration States"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/provisioningServices/registrationStates/delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Delete Registration States",
              "description": "Delete Registration States"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/provisioningServices/attestationmechanism/details/action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "provisioningServices",
              "operation": "Fetch Attestation Mechanism Details",
              "description": "Fetch Attestation Mechanism Details"
            },
            "properties": null,
            "isDataAction": true
          },
          {
            "name": "Microsoft.Devices/iotHubs/eventGridFilters/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/EventGridFilters",
              "operation": "Create or Update Event Grid filter",
              "description": "Create new or Update existing Event Grid filter"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/eventGridFilters/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/EventGridFilters",
              "operation": "Get Event Grid filter",
              "description": "Gets the Event Grid filter"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/eventGridFilters/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/EventGridFilters",
              "operation": "Delete Event Grid filter",
              "description": "Deletes the Event Grid filter"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/securitySettings/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/SecuritySettings",
              "operation": "Update Iot Hub SecuritySettings",
              "description": "Update the Azure Security Center settings on Iot Hub"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/securitySettings/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/SecuritySettings",
              "operation": "Get Iot Hub SecuritySettings",
              "description": "Get the Azure Security Center settings on Iot Hub"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/securitySettings/operationResults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/SecuritySettings",
              "operation": "Get Async operation result for Iot Hub SecuritySettings",
              "description": "Get the result of the Async Put operation for Iot Hub SecuritySettings"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnectionsApproval/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs",
              "operation": "Approve Private Endpoint Connection",
              "description": "Approve or reject a private endpoint connection"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateLinkResources/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateLinkResources",
              "operation": "Get Private Link Resources",
              "description": "Gets private link resources for IotHub"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnectionProxies/validate/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateEndpointConnectionProxies",
              "operation": "Validate Private Endpoint Connection Proxy",
              "description": "Validates private endpoint connection proxy input during create"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnectionProxies/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateEndpointConnectionProxies",
              "operation": "Get Private Endpoint Connection Proxy",
              "description": "Gets properties for specified private endpoint connection proxy"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnectionProxies/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateEndpointConnectionProxies",
              "operation": "Put Private Endpoint Connection Proxy",
              "description": "Creates or updates a private endpoint connection proxy"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnectionProxies/operationResults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateEndpointConnectionProxies",
              "operation": "Get Private Endpoint Connection Proxy Async Operation Result",
              "description": "Get the result of an async operation on a private endpoint connection proxy"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnectionProxies/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateEndpointConnectionProxies",
              "operation": "Delete Private Endpoint Connection Proxy",
              "description": "Deletes an existing private endpoint connection proxy"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnections/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateEndpointConnections",
              "operation": "Get All Private Endpoint Connections",
              "description": "Gets all the private endpoint connections for the specified iot hub"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnections/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateEndpointConnections",
              "operation": "Delete Private Endpoint Connection",
              "description": "Deletes an existing private endpoint connection"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnections/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateEndpointConnections",
              "operation": "Put Private Endpoint Connection",
              "description": "Creates or updates a private endpoint connection"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/iotHubs/privateEndpointConnections/operationResults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/IotHubs/PrivateEndpointConnections",
              "operation": "Get Private Endpoint Connection Async Operation Result",
              "description": "Get the result of an async operation on a private endpoint connection"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnectionsApproval/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices",
              "operation": "Approve Private Endpoint Connection",
              "description": "Approve or reject a private endpoint connection"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateLinkResources/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateLinkResources",
              "operation": "Get Private Link Resources",
              "description": "Gets private link resources for IotHub"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnectionProxies/validate/Action",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateEndpointConnectionProxies",
              "operation": "Validate Private Endpoint Connection Proxy",
              "description": "Validates private endpoint connection proxy input during create"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnectionProxies/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateEndpointConnectionProxies",
              "operation": "Get Private Endpoint Connection Proxy",
              "description": "Gets properties for specified private endpoint connection proxy"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnectionProxies/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateEndpointConnectionProxies",
              "operation": "Put Private Endpoint Connection Proxy",
              "description": "Creates or updates a private endpoint connection proxy"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnectionProxies/operationResults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateEndpointConnectionProxies",
              "operation": "Get Private Endpoint Connection Proxy Async Operation Result",
              "description": "Get the result of an async operation on a private endpoint connection proxy"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnectionProxies/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateEndpointConnectionProxies",
              "operation": "Delete Private Endpoint Connection Proxy",
              "description": "Deletes an existing private endpoint connection proxy"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnections/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateEndpointConnections",
              "operation": "Get All Private Endpoint Connections",
              "description": "Gets all the private endpoint connections for the specified iot hub"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnections/Delete",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateEndpointConnections",
              "operation": "Delete Private Endpoint Connection",
              "description": "Deletes an existing private endpoint connection"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnections/Write",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateEndpointConnections",
              "operation": "Put Private Endpoint Connection",
              "description": "Creates or updates a private endpoint connection"
            },
            "properties": null
          },
          {
            "name": "Microsoft.Devices/provisioningServices/privateEndpointConnections/operationResults/Read",
            "display": {
              "provider": "Microsoft Devices",
              "resource": "Microsoft.Devices/provisioningServices/PrivateEndpointConnections",
              "operation": "Get Private Endpoint Connection Async Operation Result",
              "description": "Get the result of an async operation on a private endpoint connection"
            },
            "properties": null
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/usages?api-version=2023-06-30",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:27:02 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11967",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022703Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "value": [
          {
            "id": null,
            "type": null,
            "unit": "count",
            "currentValue": 0,
            "limit": 1,
            "name": {
              "value": "freeIotHubCount",
              "localizedValue": "Free Iot Hub Count"
            }
          },
          {
            "id": null,
            "type": null,
            "unit": "count",
            "currentValue": 2,
            "limit": 50,
            "name": {
              "value": "paidIotHubCount",
              "localizedValue": "Paid Iot Hub Count"
            }
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Sanitized/providers/Microsoft.Devices/IotHubs/resourceiyiLeI?api-version=2023-06-30",
      "RequestMethod": "DELETE",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Azure-AsyncOperation": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfMzBhMGJkMTQtODdmNC00MmZkLTljNmMtMDVmNGI0NTM3MzQ0O3JlZ2lvbj1lYXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
        "Cache-Control": "no-cache",
        "Content-Length": "4",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:27:04 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfMzBhMGJkMTQtODdmNC00MmZkLTljNmMtMDVmNGI0NTM3MzQ0O3JlZ2lvbj1lYXN0dXM=?api-version=2023-06-30\u0026operationSource=other",
        "Pragma": "no-cache",
        "Retry-After": "15",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-deletes": "14999",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022704Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": "null"
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Devices/locations/westus/operationResults/aWQ9b3NfaWhfMzBhMGJkMTQtODdmNC00MmZkLTljNmMtMDVmNGI0NTM3MzQ0O3JlZ2lvbj1lYXN0dXM=?api-version=2023-06-30\u0026operationSource=other\u0026asyncinfo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armiothub/v1.2.0-beta.1 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Encoding": "gzip",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 09 May 2023 02:27:20 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Transfer-Encoding": "chunked",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-reads": "11966",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022720Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": {
        "status": "Succeeded"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/Sanitized?api-version=2021-04-01",
      "RequestMethod": "DELETE",
      "RequestHeaders": {
        "Accept": "application/json",
        "Accept-Encoding": "gzip",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-go-armresources/v1.0.0 (go1.19; Windows_NT)"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "0",
        "Date": "Tue, 09 May 2023 02:27:23 GMT",
        "Expires": "-1",
        "Location": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/operationresults/eyJqb2JJZCI6IlJFU09VUkNFR1JPVVBERUxFVElPTkpPQi1HTzoyRFNESzoyRFRFU1Q6MkQzODQtV0VTVFVTIiwiam9iTG9jYXRpb24iOiJ3ZXN0dXMifQ?api-version=2021-04-01",
        "Pragma": "no-cache",
        "Retry-After": "15",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-ratelimit-remaining-subscription-deletes": "14998",
        "x-ms-request-id": "00000000-0000-0000-0000-000000000000",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230509T022723Z:00000000-0000-0000-0000-000000000000"
      },
      "ResponseBody": null
    }
  ],
  "Variables": {
    "randSeed": "1683598532",
    "recordingRandomSeed": "0"
  }
}
