{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c?api-version=2022-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-6b9e4055006cfa5c8f2d65ee61eb7162-9c07608cda055596-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "a47bc4f422f36b5c3f8399c6c3160419",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "748",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:13 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f356c5f3-31f5-4f78-89bb-bdb5fc0d3949",
        "x-ms-ratelimit-remaining-subscription-reads": "11982",
        "x-ms-request-id": "f356c5f3-31f5-4f78-89bb-bdb5fc0d3949",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151413Z:f356c5f3-31f5-4f78-89bb-bdb5fc0d3949"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c",
        "authorizationSource": "RoleBased",
        "managedByTenants": [],
        "tags": {
          "TagKey-9823": "TagValue-1254",
          "TagKey-3481": "TagValue-320",
          "TagKey-4926": "TagValue-1187",
          "TagKey-751": "TagValue-3921",
          "TagKey-1866": "TagValue-8559",
          "TagKey-3094": "TagValue-9190",
          "TagKey-2449": "TagValue-9",
          "TagKey-8379": "TagValue-164",
          "TagKey-7470": "TagValue-2205",
          "TagKey-4236": "TagValue-3698",
          "TagKey-5316": "TagValue-2725"
        },
        "subscriptionId": "db1ab6f0-4769-4b27-930e-01e2ef9c123c",
        "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
        "displayName": ".NET Mgmt SDK Test with TTL = 1 Day",
        "state": "Enabled",
        "subscriptionPolicies": {
          "locationPlacementId": "Internal_2014-09-01",
          "quotaId": "Internal_2014-09-01",
          "spendingLimit": "Off"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/DevTestLabRG949?api-version=2022-09-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "21",
        "Content-Type": "application/json",
        "traceparent": "00-d866582c776273c3efcdc1222d314667-134db6314c1b00d9-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "6871863d560bef1e2e7214e414fa653c",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "location": "eastus"
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "227",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:13 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "95add882-225e-4a4d-9a35-a1c1596c852d",
        "x-ms-ratelimit-remaining-subscription-writes": "1197",
        "x-ms-request-id": "95add882-225e-4a4d-9a35-a1c1596c852d",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151414Z:95add882-225e-4a4d-9a35-a1c1596c852d"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG949",
        "name": "DevTestLabRG949",
        "type": "Microsoft.Resources/resourceGroups",
        "location": "eastus",
        "properties": {
          "provisioningState": "Succeeded"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG949/providers/Microsoft.DevTestLab/labs/lab2057?api-version=2018-09-15",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "114",
        "Content-Type": "application/json",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-675d2bb5d3718edd-00",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231116.1 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "344658c78188ff3b5ded4971118e8987",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "location": "eastus",
        "properties": {
          "premiumDataDisks": "Disabled",
          "environmentPermission": "Contributor"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Azure-AsyncOperation": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
        "Cache-Control": "no-cache",
        "Content-Length": "674",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:15 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8aab362b-679a-4335-a649-ae43ce3f694a",
        "x-ms-ratelimit-remaining-subscription-writes": "1196",
        "x-ms-request-id": "8aab362b-679a-4335-a649-ae43ce3f694a",
        "x-ms-return-client-request-id": "344658c78188ff3b5ded4971118e8987",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151416Z:8aab362b-679a-4335-a649-ae43ce3f694a"
      },
      "ResponseBody": {
        "properties": {
          "labStorageType": "Premium",
          "mandatoryArtifactsResourceIdsLinux": [],
          "mandatoryArtifactsResourceIdsWindows": [],
          "createdDate": "2023-11-16T23:14:15.4400947+08:00",
          "premiumDataDisks": "Disabled",
          "environmentPermission": "Contributor",
          "announcement": {
            "title": "",
            "markdown": "",
            "enabled": "Disabled",
            "expired": false
          },
          "support": {
            "enabled": "Disabled",
            "markdown": ""
          },
          "provisioningState": "Creating",
          "uniqueIdentifier": "48394bbd-3ee9-45d3-b3a9-2da970bc25f8"
        },
        "location": "eastus",
        "tags": {},
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.devtestlab/labs/lab2057",
        "name": "lab2057",
        "type": "Microsoft.DevTestLab/labs"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-1c3c81f936003569-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "ab4e9b8a41d305b43669ae69d47e1ce4",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:16 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "74a3bf9f-0241-4f10-94e2-498a423916b7",
        "x-ms-ratelimit-remaining-subscription-reads": "11981",
        "x-ms-request-id": "74a3bf9f-0241-4f10-94e2-498a423916b7",
        "x-ms-return-client-request-id": "ab4e9b8a41d305b43669ae69d47e1ce4",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151416Z:74a3bf9f-0241-4f10-94e2-498a423916b7"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-fad5fb0e105532cf-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "36345c8a736cde94eae97fc3d1f37832",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:17 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "761c4d23-61a6-43d7-9691-c53e331964f5",
        "x-ms-ratelimit-remaining-subscription-reads": "11980",
        "x-ms-request-id": "761c4d23-61a6-43d7-9691-c53e331964f5",
        "x-ms-return-client-request-id": "36345c8a736cde94eae97fc3d1f37832",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151417Z:761c4d23-61a6-43d7-9691-c53e331964f5"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-8004f5f408c1a92b-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "76e61565de3f9eb40ff492293a048836",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:18 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "0e78a436-636d-46f0-b259-4470b011a57d",
        "x-ms-ratelimit-remaining-subscription-reads": "11979",
        "x-ms-request-id": "0e78a436-636d-46f0-b259-4470b011a57d",
        "x-ms-return-client-request-id": "76e61565de3f9eb40ff492293a048836",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151419Z:0e78a436-636d-46f0-b259-4470b011a57d"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-32e9c6a78b18baf1-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "2abdcba852f517c6066fc0e9c2f13442",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:20 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "ed6ef967-a58e-4282-9c38-8612e09209a9",
        "x-ms-ratelimit-remaining-subscription-reads": "11978",
        "x-ms-request-id": "ed6ef967-a58e-4282-9c38-8612e09209a9",
        "x-ms-return-client-request-id": "2abdcba852f517c6066fc0e9c2f13442",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151420Z:ed6ef967-a58e-4282-9c38-8612e09209a9"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-6cb13492b943e3e5-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "bf047bf1a698aba5a8962678e06ba4e5",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:22 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "be9fcf91-9eae-424a-998e-10a47de3c4ea",
        "x-ms-ratelimit-remaining-subscription-reads": "11977",
        "x-ms-request-id": "be9fcf91-9eae-424a-998e-10a47de3c4ea",
        "x-ms-return-client-request-id": "bf047bf1a698aba5a8962678e06ba4e5",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151423Z:be9fcf91-9eae-424a-998e-10a47de3c4ea"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-dbb1fadeadecf949-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "051a49614e36133d4ecf70cf1ecadb1e",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:26 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8b43272d-873f-43ab-9b15-01a1fbdb97e3",
        "x-ms-ratelimit-remaining-subscription-reads": "11976",
        "x-ms-request-id": "8b43272d-873f-43ab-9b15-01a1fbdb97e3",
        "x-ms-return-client-request-id": "051a49614e36133d4ecf70cf1ecadb1e",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151427Z:8b43272d-873f-43ab-9b15-01a1fbdb97e3"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-398dae8d26115950-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "bf3850bfc800029d2611825e2b4e369a",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:35 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "84e88080-6512-4f65-829f-c3bcc7ac74e4",
        "x-ms-ratelimit-remaining-subscription-reads": "11975",
        "x-ms-request-id": "84e88080-6512-4f65-829f-c3bcc7ac74e4",
        "x-ms-return-client-request-id": "bf3850bfc800029d2611825e2b4e369a",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151435Z:84e88080-6512-4f65-829f-c3bcc7ac74e4"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-c3016e28022e971f-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "7988dacb2ed6a30c3ef170c835d58ddd",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:14:51 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "24b91871-3bd4-4899-93c2-e847d5a1e01f",
        "x-ms-ratelimit-remaining-subscription-reads": "11974",
        "x-ms-request-id": "24b91871-3bd4-4899-93c2-e847d5a1e01f",
        "x-ms-return-client-request-id": "7988dacb2ed6a30c3ef170c835d58ddd",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151452Z:24b91871-3bd4-4899-93c2-e847d5a1e01f"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-0664fe3813bb7738-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "90b808bbe53298e4ab18de24cbdee700",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:15:24 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "85187e80-2e6c-4120-8a5b-c64a34996c56",
        "x-ms-ratelimit-remaining-subscription-reads": "11973",
        "x-ms-request-id": "85187e80-2e6c-4120-8a5b-c64a34996c56",
        "x-ms-return-client-request-id": "90b808bbe53298e4ab18de24cbdee700",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151524Z:85187e80-2e6c-4120-8a5b-c64a34996c56"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-9728ded188267143-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "4303d598624191474395800f58d5cc50",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:15:57 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8518c9aa-0870-417c-8d25-77cb233420d4",
        "x-ms-ratelimit-remaining-subscription-reads": "11972",
        "x-ms-request-id": "8518c9aa-0870-417c-8d25-77cb233420d4",
        "x-ms-return-client-request-id": "4303d598624191474395800f58d5cc50",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151557Z:8518c9aa-0870-417c-8d25-77cb233420d4"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231116-8cd16042-9bec-4e80-aa5d-a7cdb1e39db4?api-version=2018-09-15&t=638357444560351616&c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo&s=cuaMod2xP2-GXuD9g9hOZg4mzU8K5gkAYfnE1VEXtXRkx6LJogM4_miXEqgHQ8FlEgAGdYddRk4WZiUO8uWuax6p037KlaPMqk_wzn6yOk6M8H5qYYxBWv4X7Icd4TTmpukdU3CdPWcmNFExtzR9SUgEYZp8nWc4pxW-MA-a3eGgRJj_PZCP-bQfTwkatUV7Df0teeViL4xe-MGwYNcF8pndP87V-rnL3WmsY0ezpZrfdTPQqeCXN3BjnuZ3L9CPQvrkpUqIbRb7yrulEqLHL3SHXyF2xA_0u-6bRhsc2_wVPt_kLIHdRsAupZeSN2QKMshOKoA6gZVsSiHRRiBuRA&h=Qz8T---dRbCVTPYuSYmAcG0RDJO1UUgO22He7ZtwuYo",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-6ce521fb53789188-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "23a3a584a696e668f5f0cdbd4fe7d75f",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "22",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:16:28 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "368c24ed-04c2-4605-8ae8-35f8122eba96",
        "x-ms-ratelimit-remaining-subscription-reads": "11971",
        "x-ms-request-id": "368c24ed-04c2-4605-8ae8-35f8122eba96",
        "x-ms-return-client-request-id": "23a3a584a696e668f5f0cdbd4fe7d75f",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151629Z:368c24ed-04c2-4605-8ae8-35f8122eba96"
      },
      "ResponseBody": {
        "status": "Succeeded"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG949/providers/Microsoft.DevTestLab/labs/lab2057?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-8dc4b813d18ecced80a2994404dcd4d9-15e93f389f3cf955-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "602f700949d2589bc0274c9d64d43fd5",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1501",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:16:29 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "d037929f-9048-4e03-973a-11fa1fa345e9",
        "x-ms-ratelimit-remaining-subscription-reads": "11970",
        "x-ms-request-id": "d037929f-9048-4e03-973a-11fa1fa345e9",
        "x-ms-return-client-request-id": "602f700949d2589bc0274c9d64d43fd5",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151630Z:d037929f-9048-4e03-973a-11fa1fa345e9"
      },
      "ResponseBody": {
        "properties": {
          "defaultStorageAccount": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.storage/storageaccounts/alab20572437",
          "defaultPremiumStorageAccount": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.storage/storageaccounts/alab20572437",
          "artifactsStorageAccount": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.storage/storageaccounts/alab20572437",
          "premiumDataDiskStorageAccount": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.storage/storageaccounts/alab20572437",
          "vaultName": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.keyvault/vaults/lab20572839",
          "labStorageType": "Premium",
          "mandatoryArtifactsResourceIdsLinux": [],
          "mandatoryArtifactsResourceIdsWindows": [],
          "createdDate": "2023-11-16T23:14:15.4400947+08:00",
          "premiumDataDisks": "Disabled",
          "environmentPermission": "Contributor",
          "announcement": {
            "title": "",
            "markdown": "",
            "enabled": "Disabled",
            "expired": false
          },
          "support": {
            "enabled": "Disabled",
            "markdown": ""
          },
          "provisioningState": "Succeeded",
          "uniqueIdentifier": "48394bbd-3ee9-45d3-b3a9-2da970bc25f8"
        },
        "location": "eastus",
        "tags": {},
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.devtestlab/labs/lab2057",
        "name": "lab2057",
        "type": "Microsoft.DevTestLab/labs"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactsources?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231116.1 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "26a08d4cc43bf2696d1c4d51958a415b",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1093",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:16:30 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "2a234503-6a39-4b62-bb43-bddcd4fecb5a",
        "x-ms-ratelimit-remaining-subscription-reads": "11969",
        "x-ms-request-id": "2a234503-6a39-4b62-bb43-bddcd4fecb5a",
        "x-ms-return-client-request-id": "26a08d4cc43bf2696d1c4d51958a415b",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151630Z:2a234503-6a39-4b62-bb43-bddcd4fecb5a"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "displayName": "Public Artifact Repo",
              "uri": "https://github.com/Azure/azure-devtestlab.git",
              "sourceType": "GitHub",
              "folderPath": "/Artifacts",
              "branchRef": "master",
              "status": "Enabled",
              "provisioningState": "Succeeded",
              "uniqueIdentifier": "00000000-0000-0000-0000-000000000000"
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.devtestlab/labs/lab2057/artifactsources/public repo",
            "name": "Public Repo",
            "type": "Microsoft.DevTestLab/labs/artifactSources"
          },
          {
            "properties": {
              "displayName": "Public Environment Repo",
              "uri": "https://github.com/Azure/azure-devtestlab.git",
              "sourceType": "GitHub",
              "armTemplateFolderPath": "/Environments",
              "branchRef": "master",
              "status": "Disabled",
              "provisioningState": "Succeeded",
              "uniqueIdentifier": "00000000-0000-0000-0000-000000000000"
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.devtestlab/labs/lab2057/artifactsources/public environment repo",
            "name": "Public Environment Repo",
            "type": "Microsoft.DevTestLab/labs/artifactSources"
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactsources/public%20environment%20repo/armtemplates?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231116.1 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "e80621bd6ba63b7e094a626f5aca8221",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "121323",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:16:32 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "97bbaca5-0a5b-4ad1-9f72-eae32a3e2cbe",
        "x-ms-ratelimit-remaining-subscription-reads": "11968",
        "x-ms-request-id": "97bbaca5-0a5b-4ad1-9f72-eae32a3e2cbe",
        "x-ms-return-client-request-id": "e80621bd6ba63b7e094a626f5aca8221",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151633Z:97bbaca5-0a5b-4ad1-9f72-eae32a3e2cbe"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "displayName": "Service Fabric Lab Cluster",
              "description": "A secure 5 node, single nodetype Service fabric Cluster.",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "clusterOS": {
                    "type": "string",
                    "allowedValues": [
                      "Windows",
                      "Linux"
                    ],
                    "defaultValue": "Windows",
                    "metadata": {
                      "description": "Select the cluster OS."
                    }
                  },
                  "adminUsername": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Remote desktop user Id"
                    }
                  },
                  "adminPassword": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Remote desktop user password. Must be a strong password"
                    }
                  },
                  "certificate": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Certificate as Base64 encoded string."
                    }
                  },
                  "certificatePassword": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Certificate password for installation."
                    }
                  },
                  "certificateThumbprint": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Certificate thumbprint for identification in the local certificate store."
                    }
                  },
                  "appPort1": {
                    "type": "int",
                    "defaultValue": 80,
                    "minValue": 1,
                    "metadata": {
                      "description": "Public accessible application port #1."
                    }
                  },
                  "appPort2": {
                    "type": "int",
                    "defaultValue": 443,
                    "minValue": 1,
                    "metadata": {
                      "description": "Public accessible application port #2."
                    }
                  },
                  "tenantId": {
                    "type": "string",
                    "defaultValue": "",
                    "metadata": {
                      "description": "Tenant the cluster- and clientapplication belongs to. Required for Windows clusters."
                    }
                  },
                  "clusterApplication": {
                    "type": "string",
                    "defaultValue": "",
                    "metadata": {
                      "description": "Client id of cluster application. Required for Windows clusters."
                    }
                  },
                  "clientApplication": {
                    "type": "string",
                    "defaultValue": "",
                    "metadata": {
                      "description": "Client id of client application. Required for Windows clusters."
                    }
                  }
                },
                "variables": {
                  "quickstartRepoRoot": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.servicefabric/",
                  "clusterName": "[concat('sf-', toLower(uniqueString(resourceGroup().name)))]",
                  "vaultName": "[concat('kv-', toLower(uniqueString(resourceGroup().name)))]",
                  "vaultSecret": "ClusterCertificate",
                  "loadBalancedAppPort1": "[parameters('appPort1')]",
                  "loadBalancedAppPort2": "[parameters('appPort2')]",
                  "nt0InstanceCount": 5
                },
                "resources": [
                  {
                    "name": "[variables('vaultName')]",
                    "type": "Microsoft.KeyVault/vaults",
                    "apiVersion": "2015-06-01",
                    "location": "[resourceGroup().location]",
                    "tags": {},
                    "properties": {
                      "enabledForDeployment": true,
                      "enabledForTemplateDeployment": false,
                      "enabledForVolumeEncryption": false,
                      "tenantId": "[subscription().tenantId]",
                      "sku": {
                        "name": "standard",
                        "family": "A"
                      },
                      "accessPolicies": []
                    }
                  },
                  {
                    "name": "[concat(variables('vaultName'), '/', variables('vaultSecret'))]",
                    "type": "Microsoft.KeyVault/vaults/secrets",
                    "apiVersion": "2015-06-01",
                    "dependsOn": [
                      "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                    ],
                    "properties": {
                      "value": "[base64(concat('{ \"data\":\"', parameters('certificate'), '\", \"dataType\":\"pfx\", \"password\":\"', parameters('certificatePassword'), '\" }'))]"
                    }
                  },
                  {
                    "condition": "[equals(parameters('clusterOS'), 'Windows')]",
                    "name": "[concat(deployment().name, '-QuickstartTemplate-Windows')]",
                    "type": "Microsoft.Resources/deployments",
                    "apiVersion": "2015-01-01",
                    "dependsOn": [
                      "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
                    ],
                    "properties": {
                      "mode": "Incremental",
                      "templateLink": {
                        "uri": "[concat(variables('quickstartRepoRoot'), 'service-fabric-secure-cluster-5-node-1-nodetype/azuredeploy.json')]",
                        "contentVersion": "1.0.0.0"
                      },
                      "parameters": {
                        "clusterName": {
                          "value": "[variables('clusterName')]"
                        },
                        "adminUsername": {
                          "value": "[parameters('adminUsername')]"
                        },
                        "adminPassword": {
                          "value": "[parameters('adminPassword')]"
                        },
                        "vmImagePublisher": {
                          "value": "MicrosoftWindowsServer"
                        },
                        "vmImageOffer": {
                          "value": "WindowsServer"
                        },
                        "vmImageSku": {
                          "value": "2022-datacenter"
                        },
                        "vmImageVersion": {
                          "value": "latest"
                        },
                        "loadBalancedAppPort1": {
                          "value": "[variables('loadBalancedAppPort1')]"
                        },
                        "loadBalancedAppPort2": {
                          "value": "[variables('loadBalancedAppPort2')]"
                        },
                        "certificateThumbprint": {
                          "value": "[parameters('certificateThumbprint')]"
                        },
                        "sourceVaultResourceId": {
                          "value": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                        },
                        "certificateUrlValue": {
                          "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))).secretUriWithVersion]"
                        },
                        "nt0InstanceCount": {
                          "value": "[variables('nt0InstanceCount')]"
                        },
                        "nodeDataDrive": {
                          "value": "OS"
                        },
                        "tenantId": {
                          "value": "[parameters('tenantId')]"
                        },
                        "clusterApplication": {
                          "value": "[parameters('clusterApplication')]"
                        },
                        "clientapplication": {
                          "value": "[parameters('clientApplication')]"
                        }
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('clusterOS'), 'Linux')]",
                    "name": "[concat(deployment().name, '-QuickstartTemplate-Linux')]",
                    "type": "Microsoft.Resources/deployments",
                    "apiVersion": "2015-01-01",
                    "dependsOn": [
                      "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
                    ],
                    "properties": {
                      "mode": "Incremental",
                      "templateLink": {
                        "uri": "[concat(variables('quickstartRepoRoot'), '5-vm-ubuntu-1-nodetypes-secure/azuredeploy.json')]",
                        "contentVersion": "1.0.0.0"
                      },
                      "parameters": {
                        "clusterName": {
                          "value": "[variables('clusterName')]"
                        },
                        "adminUsername": {
                          "value": "[parameters('adminUsername')]"
                        },
                        "adminPassword": {
                          "value": "[parameters('adminPassword')]"
                        },
                        "vmImagePublisher": {
                          "value": "Canonical"
                        },
                        "vmImageOffer": {
                          "value": "UbuntuServer"
                        },
                        "vmImageSku": {
                          "value": "16.04-LTS"
                        },
                        "vmImageVersion": {
                          "value": "latest"
                        },
                        "loadBalancedAppPort1": {
                          "value": "[variables('loadBalancedAppPort1')]"
                        },
                        "loadBalancedAppPort2": {
                          "value": "[variables('loadBalancedAppPort2')]"
                        },
                        "certificateThumbprint": {
                          "value": "[parameters('certificateThumbprint')]"
                        },
                        "sourceVaultValue": {
                          "value": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                        },
                        "certificateUrlValue": {
                          "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))).secretUriWithVersion]"
                        },
                        "nt0InstanceCount": {
                          "value": "[variables('nt0InstanceCount')]"
                        },
                        "storageAccountEndPoint": {
                          "value": "[resourceGroup().location]"
                        }
                      }
                    }
                  }
                ],
                "outputs": {}
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactSources/public environment repo/armTemplates/ServiceFabric-LabCluster",
            "name": "ServiceFabric-LabCluster",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "SharePoint Subscription / 2019 / 2016 / 2013 with a lightweight configuration",
              "description": "Deploy SharePoint Subscription / 2019 / 2016 / 2013 with a lightweight configuration. Each version is independent and may or may not be deployed.",
              "publisher": "Yvand",
              "contents": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "4.0.0.0",
                "metadata": {
                  "description": "Deploy SharePoint Subscription / 2019 / 2016 / 2013 with a lightweight configuration. Each version is independent and may or may not be deployed.",
                  "author": "Yvand"
                },
                "parameters": {
                  "location": {
                    "type": "string",
                    "defaultValue": "[resourceGroup().location]",
                    "metadata": {
                      "description": "Location for all resources."
                    }
                  },
                  "provisionSharePointSubscription": {
                    "type": "string",
                    "defaultValue": "Subscription-Latest",
                    "allowedValues": [
                      "No",
                      "Subscription-RTM",
                      "Subscription-22H2",
                      "Subscription-23H1",
                      "Subscription-23H2",
                      "Subscription-Latest"
                    ],
                    "metadata": {
                      "description": "Specify if a SharePoint Subscription farm should be provisioned, and which version if so."
                    }
                  },
                  "provisionSharePoint2019": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if a SharePoint 2019 farm should be provisioned."
                    }
                  },
                  "provisionSharePoint2016": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if a SharePoint 2016 farm should be provisioned."
                    }
                  },
                  "provisionSharePoint2013": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if a SharePoint 2013 farm should be provisioned."
                    }
                  },
                  "domainFQDN": {
                    "type": "string",
                    "defaultValue": "contoso.local",
                    "minLength": 5,
                    "metadata": {
                      "description": "FQDN of the AD forest to create."
                    }
                  },
                  "configureADFS": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if ADFS shoulde be provisioned, and used in SharePoint in an extended zone."
                    }
                  },
                  "addAzureBastion": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if Azure Bastion should be provisioned. See https://azure.microsoft.com/en-us/services/azure-bastion for more information."
                    }
                  },
                  "addPublicIPAddress": {
                    "type": "string",
                    "defaultValue": "SharePointVMsOnly",
                    "allowedValues": [
                      "Yes",
                      "No",
                      "SharePointVMsOnly"
                    ],
                    "metadata": {
                      "description": "Specify if each VM should have a public IP and be reachable from Internet."
                    }
                  },
                  "RDPTrafficAllowed": {
                    "type": "string",
                    "defaultValue": "No",
                    "minLength": 1,
                    "metadata": {
                      "description": "Specify if RDP traffic is allowed:<br>- If 'No' (default): Firewall denies all incoming RDP traffic.<br>- If '*' or 'Internet': Firewall accepts all incoming RDP traffic from Internet.<br>- If CIDR notation (e.g. 192.168.99.0/24 or 2001:1234::/64) or IP address (e.g. 192.168.99.0 or 2001:1234::): Firewall accepts incoming RDP traffic from the IP addresses specified."
                    }
                  },
                  "adminUserName": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Name of the AD and SharePoint administrator. 'admin' and 'administrator' are not allowed."
                    }
                  },
                  "adminPassword": {
                    "type": "securestring",
                    "minLength": 8,
                    "metadata": {
                      "description": "Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
                    }
                  },
                  "serviceAccountsPassword": {
                    "type": "securestring",
                    "minLength": 8,
                    "metadata": {
                      "description": "Password for all service accounts and SharePoint passphrase. Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
                    }
                  },
                  "vmsTimeZone": {
                    "type": "string",
                    "defaultValue": "Romance Standard Time",
                    "allowedValues": [
                      "Dateline Standard Time",
                      "UTC-11",
                      "Aleutian Standard Time",
                      "Hawaiian Standard Time",
                      "Marquesas Standard Time",
                      "Alaskan Standard Time",
                      "UTC-09",
                      "Pacific Standard Time (Mexico)",
                      "UTC-08",
                      "Pacific Standard Time",
                      "US Mountain Standard Time",
                      "Mountain Standard Time (Mexico)",
                      "Mountain Standard Time",
                      "Central America Standard Time",
                      "Central Standard Time",
                      "Easter Island Standard Time",
                      "Central Standard Time (Mexico)",
                      "Canada Central Standard Time",
                      "SA Pacific Standard Time",
                      "Eastern Standard Time (Mexico)",
                      "Eastern Standard Time",
                      "Haiti Standard Time",
                      "Cuba Standard Time",
                      "US Eastern Standard Time",
                      "Turks And Caicos Standard Time",
                      "Paraguay Standard Time",
                      "Atlantic Standard Time",
                      "Venezuela Standard Time",
                      "Central Brazilian Standard Time",
                      "SA Western Standard Time",
                      "Pacific SA Standard Time",
                      "Newfoundland Standard Time",
                      "Tocantins Standard Time",
                      "E. South America Standard Time",
                      "SA Eastern Standard Time",
                      "Argentina Standard Time",
                      "Greenland Standard Time",
                      "Montevideo Standard Time",
                      "Magallanes Standard Time",
                      "Saint Pierre Standard Time",
                      "Bahia Standard Time",
                      "UTC-02",
                      "Mid-Atlantic Standard Time",
                      "Azores Standard Time",
                      "Cape Verde Standard Time",
                      "UTC",
                      "GMT Standard Time",
                      "Greenwich Standard Time",
                      "Sao Tome Standard Time",
                      "Morocco Standard Time",
                      "W. Europe Standard Time",
                      "Central Europe Standard Time",
                      "Romance Standard Time",
                      "Central European Standard Time",
                      "W. Central Africa Standard Time",
                      "Jordan Standard Time",
                      "GTB Standard Time",
                      "Middle East Standard Time",
                      "Egypt Standard Time",
                      "E. Europe Standard Time",
                      "Syria Standard Time",
                      "West Bank Standard Time",
                      "South Africa Standard Time",
                      "FLE Standard Time",
                      "Israel Standard Time",
                      "Kaliningrad Standard Time",
                      "Sudan Standard Time",
                      "Libya Standard Time",
                      "Namibia Standard Time",
                      "Arabic Standard Time",
                      "Turkey Standard Time",
                      "Arab Standard Time",
                      "Belarus Standard Time",
                      "Russian Standard Time",
                      "E. Africa Standard Time",
                      "Iran Standard Time",
                      "Arabian Standard Time",
                      "Astrakhan Standard Time",
                      "Azerbaijan Standard Time",
                      "Russia Time Zone 3",
                      "Mauritius Standard Time",
                      "Saratov Standard Time",
                      "Georgian Standard Time",
                      "Volgograd Standard Time",
                      "Caucasus Standard Time",
                      "Afghanistan Standard Time",
                      "West Asia Standard Time",
                      "Ekaterinburg Standard Time",
                      "Pakistan Standard Time",
                      "Qyzylorda Standard Time",
                      "India Standard Time",
                      "Sri Lanka Standard Time",
                      "Nepal Standard Time",
                      "Central Asia Standard Time",
                      "Bangladesh Standard Time",
                      "Omsk Standard Time",
                      "Myanmar Standard Time",
                      "SE Asia Standard Time",
                      "Altai Standard Time",
                      "W. Mongolia Standard Time",
                      "North Asia Standard Time",
                      "N. Central Asia Standard Time",
                      "Tomsk Standard Time",
                      "China Standard Time",
                      "North Asia East Standard Time",
                      "Singapore Standard Time",
                      "W. Australia Standard Time",
                      "Taipei Standard Time",
                      "Ulaanbaatar Standard Time",
                      "Aus Central W. Standard Time",
                      "Transbaikal Standard Time",
                      "Tokyo Standard Time",
                      "North Korea Standard Time",
                      "Korea Standard Time",
                      "Yakutsk Standard Time",
                      "Cen. Australia Standard Time",
                      "AUS Central Standard Time",
                      "E. Australia Standard Time",
                      "AUS Eastern Standard Time",
                      "West Pacific Standard Time",
                      "Tasmania Standard Time",
                      "Vladivostok Standard Time",
                      "Lord Howe Standard Time",
                      "Bougainville Standard Time",
                      "Russia Time Zone 10",
                      "Magadan Standard Time",
                      "Norfolk Standard Time",
                      "Sakhalin Standard Time",
                      "Central Pacific Standard Time",
                      "Russia Time Zone 11",
                      "New Zealand Standard Time",
                      "UTC+12",
                      "Fiji Standard Time",
                      "Kamchatka Standard Time",
                      "Chatham Islands Standard Time",
                      "UTC+13",
                      "Tonga Standard Time",
                      "Samoa Standard Time",
                      "Line Islands Standard Time"
                    ],
                    "minLength": 2,
                    "metadata": {
                      "description": "Time zone of the virtual machines. Type \"[TimeZoneInfo]::GetSystemTimeZones().Id\" in PowerShell to get the list."
                    }
                  },
                  "enableAutomaticUpdates": {
                    "type": "bool",
                    "defaultValue": true,
                    "metadata": {
                      "description": "Enable automatic Windows Updates."
                    }
                  },
                  "enableHybridBenefitServerLicenses": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Enable Azure Hybrid Benefit to use your on-premises Windows Server licenses and reduce cost. See https://docs.microsoft.com/en-us/azure/virtual-machines/windows/hybrid-use-benefit-licensing for more information."
                    }
                  },
                  "vmDCSize": {
                    "type": "string",
                    "defaultValue": "Standard_B2s",
                    "metadata": {
                      "description": "Size of the DC VM"
                    }
                  },
                  "vmDCStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
                    }
                  },
                  "vmSQLSize": {
                    "type": "string",
                    "defaultValue": "Standard_B2ms",
                    "metadata": {
                      "description": "Size of the SQL VM"
                    }
                  },
                  "vmSQLStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
                    }
                  },
                  "vmSPSize": {
                    "type": "string",
                    "defaultValue": "Standard_B4ms",
                    "metadata": {
                      "description": "Size of the SharePoint VM"
                    }
                  },
                  "vmSPStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
                    }
                  },
                  "_artifactsLocation": {
                    "type": "string",
                    "defaultValue": "https://github.com/Azure/azure-devtestlab/raw/master/Environments/SharePoint-AllVersions",
                    "metadata": {
                      "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
                    }
                  },
                  "_artifactsLocationSasToken": {
                    "type": "securestring",
                    "defaultValue": "",
                    "metadata": {
                      "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
                    }
                  }
                },
                "variables": {
                  "resourceGroupNameFormatted": "[replace(replace(replace(replace(resourceGroup().name, '.', '-'), '(', '-'), ')', '-'), '_', '-')]",
                  "_artifactsLocationWithTrailingSlash": "[concat(parameters('_artifactsLocation'), '/')]",
                  "sharePointSettings": {
                    "sharePointImagesList": {
                      "Subscription": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest",
                      "sp2019": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2019gen2smalldisk:latest",
                      "sp2016": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2016:latest",
                      "sp2013": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2013:latest"
                    },
                    "sharePointSubscriptionBits": [
                      {
                        "Label": "RTM",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5f8a7e-462b-41ff-a5b2-04bdf5821ceb/OfficeServer.iso",
                            "ChecksumType": "SHA256",
                            "Checksum": "C576B847C573234B68FC602A0318F5794D7A61D8149EB6AE537AF04470B7FC05"
                          }
                        ]
                      },
                      {
                        "Label": "22H2",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/8/d/f/8dfcb515-6e49-42e5-b20f-5ebdfd19d8e7/wssloc-subscription-kb5002270-fullfile-x64-glb.exe",
                            "ChecksumType": "SHA256",
                            "Checksum": "7E496530EB873146650A9E0653DE835CB2CAD9AF8D154CBD7387BB0F2297C9FC"
                          },
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5b1ee0-3336-45d7-b2f4-1e6af977d574/sts-subscription-kb5002271-fullfile-x64-glb.exe",
                            "ChecksumType": "SHA256",
                            "Checksum": "247011443AC573D4F03B1622065A7350B8B3DAE04D6A5A6DC64C8270A3BE7636"
                          }
                        ]
                      },
                      {
                        "Label": "23H1",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/c/6/a/c6a17105-3d86-42ad-888d-49b22383bfa1/uber-subscription-kb5002355-fullfile-x64-glb.exe"
                          }
                        ]
                      },
                      {
                        "Label": "23H2",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/f/5/5/f5559e3f-8b24-419f-b238-b09cf986e927/uber-subscription-kb5002474-fullfile-x64-glb.exe"
                          }
                        ]
                      },
                      {
                        "Label": "Latest",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/c/4/9/c492d312-f267-4ead-bfea-5aaad0f817b6/uber-subscription-kb5002506-fullfile-x64-glb.exe"
                          }
                        ]
                      }
                    ]
                  },
                  "networkSettings": {
                    "vNetPrivatePrefix": "10.1.0.0/16",
                    "subnetDCPrefix": "10.1.1.0/24",
                    "dcPrivateIPAddress": "10.1.1.4",
                    "subnetSQLPrefix": "10.1.2.0/24",
                    "subnetSPPrefix": "10.1.3.0/24",
                    "vNetPrivateName": "[concat(variables('resourceGroupNameFormatted'), '-vnet')]",
                    "subnetDCName": "Subnet-DC",
                    "subnetSQLName": "Subnet-SQL",
                    "subnetSPName": "Subnet-SP",
                    "nsgSubnetDCName": "NSG-Subnet-DC",
                    "nsgSubnetSQLName": "NSG-Subnet-SQL",
                    "nsgSubnetSPName": "NSG-Subnet-SP",
                    "vmDCPublicIPNicAssociation": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmDCPublicIPName)]"
                    },
                    "vmSQLPublicIPNicAssociation": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSQLPublicIPName)]"
                    },
                    "vmSP2013PublicIPNicAssociation": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSP2013PublicIPName)]"
                    },
                    "vmSP2016PublicIPNicAssociation": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSP2016PublicIPName)]"
                    },
                    "vmSP2019PublicIPNicAssociation": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSP2019PublicIPName)]"
                    },
                    "vmSPSubscriptionPublicIPNicAssociation": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSPSubscriptionPublicIPName)]"
                    },
                    "nsgRuleAllowIncomingRdp": [
                      {
                        "name": "allow-rdp-rule",
                        "properties": {
                          "description": "Allow RDP",
                          "protocol": "Tcp",
                          "sourcePortRange": "*",
                          "destinationPortRange": "3389",
                          "sourceAddressPrefix": "[parameters('RDPTrafficAllowed')]",
                          "destinationAddressPrefix": "*",
                          "access": "Allow",
                          "priority": 110,
                          "direction": "Inbound"
                        }
                      }
                    ]
                  },
                  "vmsSettings": {
                    "vmDCName": "DC",
                    "vmSQLName": "SQL",
                    "vmSPSubscriptionName": "SPSE",
                    "vmSP2019Name": "SP2019",
                    "vmSP2016Name": "SP2016",
                    "vmSP2013Name": "SP2013",
                    "vmDCImage": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest",
                    "vmSQLImage": "MicrosoftSQLServer:sql2022-ws2022:sqldev-gen2:latest",
                    "vmSPSubscriptionImage": "[variables('sharePointSettings').sharePointImagesList.Subscription]",
                    "vmSP2019Image": "[variables('sharePointSettings').sharePointImagesList.sp2019]",
                    "vmSP2016Image": "[variables('sharePointSettings').sharePointImagesList.sp2016]",
                    "vmSP2013Image": "[variables('sharePointSettings').sharePointImagesList.sp2013]"
                  },
                  "vmsResourcesNames": {
                    "vmDCNicName": "[concat('NIC-', variables('vmsSettings').vmDCName, '-0')]",
                    "vmDCPublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmDCName)]",
                    "vmSQLNicName": "[concat('NIC-', variables('vmsSettings').vmSQLName, '-0')]",
                    "vmSQLPublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmSQLName)]",
                    "vmSPSubscriptionNicName": "[concat('NIC-', variables('vmsSettings').vmSPSubscriptionName, '-0')]",
                    "vmSPSubscriptionPublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmSPSubscriptionName)]",
                    "vmSP2019NicName": "[concat('NIC-', variables('vmsSettings').vmSP2019Name, '-0')]",
                    "vmSP2019PublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmSP2019Name)]",
                    "vmSP2016NicName": "[concat('NIC-', variables('vmsSettings').vmSP2016Name, '-0')]",
                    "vmSP2016PublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmSP2016Name)]",
                    "vmSP2013NicName": "[concat('NIC-', variables('vmsSettings').vmSP2013Name, '-0')]",
                    "vmSP2013PublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmSP2013Name)]"
                  },
                  "dscSettings": {
                    "forceUpdateTag": "1.0",
                    "vmDCScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), concat('dsc/ConfigureDCVM.zip', parameters('_artifactsLocationSasToken')))]",
                    "vmDCScript": "ConfigureDCVM.ps1",
                    "vmDCFunction": "ConfigureDCVM",
                    "vmSQLScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), concat('dsc/ConfigureSQLVM.zip', parameters('_artifactsLocationSasToken')))]",
                    "vmSQLScript": "ConfigureSQLVM.ps1",
                    "vmSQLFunction": "ConfigureSQLVM",
                    "vmSPSubscriptionScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), concat('dsc/ConfigureSPSE.zip', parameters('_artifactsLocationSasToken')))]",
                    "vmSPLegacyScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), concat('dsc/ConfigureSPLegacy.zip', parameters('_artifactsLocationSasToken')))]",
                    "vmSPSubscriptionScript": "ConfigureSPSE.ps1",
                    "vmSPLegacyScript": "ConfigureSPLegacy.ps1",
                    "vmSPFunction": "ConfigureSPVM"
                  },
                  "deploymentSettings": {
                    "sharePointSitesAuthority": "spsites",
                    "sharePointCentralAdminPort": 5000,
                    "localAdminUserName": "[concat('l-', uniqueString(subscription().subscriptionId))]",
                    "enableAnalysis": false,
                    "applyBrowserPolicies": true,
                    "sqlAlias": "SQLAlias",
                    "spSuperUserName": "spSuperUser",
                    "spSuperReaderName": "spSuperReader",
                    "adfsSvcUserName": "adfssvc",
                    "sqlSvcUserName": "sqlsvc",
                    "spSetupUserName": "spsetup",
                    "spFarmUserName": "spfarm",
                    "spSvcUserName": "spsvc",
                    "spAppPoolUserName": "spapppool",
                    "spADDirSyncUserName": "spdirsync"
                  }
                },
                "resources": [
                  {
                    "name": "[variables('networkSettings').nsgSubnetDCName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters('RDPTrafficAllowed')), 'no'), json('null'), variables('networkSettings').nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables('networkSettings').nsgSubnetSQLName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters('RDPTrafficAllowed')), 'no'), json('null'), variables('networkSettings').nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables('networkSettings').nsgSubnetSPName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters('RDPTrafficAllowed')), 'no'), json('null'), variables('networkSettings').nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables('networkSettings').vNetPrivateName]",
                    "type": "Microsoft.Network/virtualNetworks",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetDCName)]",
                      "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetSQLName)]",
                      "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetSPName)]"
                    ],
                    "properties": {
                      "addressSpace": {
                        "addressPrefixes": [
                          "[variables('networkSettings').vNetPrivatePrefix]"
                        ]
                      },
                      "subnets": [
                        {
                          "name": "[variables('networkSettings').subnetDCName]",
                          "properties": {
                            "addressPrefix": "[variables('networkSettings').subnetDCPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetDCName)]"
                            }
                          }
                        },
                        {
                          "name": "[variables('networkSettings').subnetSQLName]",
                          "properties": {
                            "addressPrefix": "[variables('networkSettings').subnetSQLPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetSQLName)]"
                            }
                          }
                        },
                        {
                          "name": "[variables('networkSettings').subnetSPName]",
                          "properties": {
                            "addressPrefix": "[variables('networkSettings').subnetSPPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetSPName)]"
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters('addPublicIPAddress'), 'Yes')]",
                    "name": "[variables('vmsResourcesNames').vmDCPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmDCName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('vmsResourcesNames').vmDCNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmDCPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('networkSettings').dcPrivateIPAddress]",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetDCName)]"
                            },
                            "publicIPAddress": "[if(equals(parameters('addPublicIPAddress'), 'Yes'), variables('networkSettings').vmDCPublicIPNicAssociation, json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('vmsSettings').vmDCName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmDCNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmDCSize')]"
                      },
                      "osProfile": {
                        "computerName": "[variables('vmsSettings').vmDCName]",
                        "adminUsername": "[parameters('adminUserName')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmDCImage, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmDCImage, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmDCImage, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmDCImage, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmDCName, '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "diskSizeGB": 32,
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmDCStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmDCNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": [
                      {
                        "name": "ConfigureDCVM",
                        "type": "extensions",
                        "location": "[parameters('location')]",
                        "apiVersion": "2022-08-01",
                        "dependsOn": [
                          "[resourceId('Microsoft.Compute/virtualMachines', variables('vmsSettings').vmDCName)]"
                        ],
                        "properties": {
                          "publisher": "Microsoft.Powershell",
                          "type": "DSC",
                          "typeHandlerVersion": "2.9",
                          "autoUpgradeMinorVersion": true,
                          "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                          "settings": {
                            "wmfVersion": "latest",
                            "configuration": {
                              "url": "[variables('dscSettings').vmDCScriptFileUri]",
                              "script": "[variables('dscSettings').vmDCScript]",
                              "function": "[variables('dscSettings').vmDCFunction]"
                            },
                            "configurationArguments": {
                              "domainFQDN": "[parameters('domainFQDN')]",
                              "PrivateIP": "[variables('networkSettings').dcPrivateIPAddress]",
                              "SPServerName": "[if(not(equals(parameters('provisionSharePointSubscription'), 'No')), variables('vmsSettings').vmSPSubscriptionName, if(parameters('provisionSharePoint2019'), variables('vmsSettings').vmSP2019Image, if(parameters('provisionSharePoint2016'), variables('vmsSettings').vmSP2016Image, variables('vmsSettings').vmSP2013Image)))]",
                              "SharePointSitesAuthority": "[concat(variables('deploymentSettings').sharePointSitesAuthority, 'SE')]",
                              "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
                              "ApplyBrowserPolicies": "[variables('deploymentSettings').applyBrowserPolicies]",
                              "ConfigureADFS": "[parameters('configureADFS')]"
                            },
                            "privacy": {
                              "dataCollection": "enable"
                            }
                          },
                          "protectedSettings": {
                            "configurationArguments": {
                              "AdminCreds": {
                                "UserName": "[parameters('adminUserName')]",
                                "Password": "[parameters('adminPassword')]"
                              },
                              "AdfsSvcCreds": {
                                "UserName": "[variables('deploymentSettings').adfsSvcUserName]",
                                "Password": "[parameters('serviceAccountsPassword')]"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "condition": "[equals(parameters('addPublicIPAddress'), 'Yes')]",
                    "name": "[variables('vmsResourcesNames').vmSQLPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmSQLName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('vmsResourcesNames').vmSQLNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSQLPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetSQLName)]"
                            },
                            "publicIPAddress": "[if(equals(parameters('addPublicIPAddress'), 'Yes'), variables('networkSettings').vmSQLPublicIPNicAssociation, json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('vmsSettings').vmSQLName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSQLNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSQLSize')]"
                      },
                      "osProfile": {
                        "computerName": "[variables('vmsSettings').vmSQLName]",
                        "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmSQLImage, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmSQLImage, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmSQLImage, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmSQLImage, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmSQLName, '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "diskSizeGB": 128,
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmSQLStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSQLNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": []
                  },
                  {
                    "name": "[concat(variables('vmsSettings').vmSQLName, '/ConfigureSQLVM')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines', variables('vmsSettings').vmSQLName)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables('dscSettings').vmSQLScriptFileUri]",
                          "script": "[variables('dscSettings').vmSQLScript]",
                          "function": "[variables('dscSettings').vmSQLFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters('domainFQDN')]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters('adminUserName')]",
                            "Password": "[parameters('adminPassword')]"
                          },
                          "SqlSvcCreds": {
                            "UserName": "[variables('deploymentSettings').sqlSvcUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables('deploymentSettings').spSetupUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(equals(parameters('provisionSharePoint2013'), true()), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "name": "[variables('vmsResourcesNames').vmSP2013PublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmSP2013Name))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('provisionSharePoint2013'), true())]",
                    "name": "[variables('vmsResourcesNames').vmSP2013NicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSP2013PublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')), variables('networkSettings').vmSP2013PublicIPNicAssociation, json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters('provisionSharePoint2013'), true())]",
                    "name": "[variables('vmsSettings').vmSP2013Name]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSP2013NicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSPSize')]"
                      },
                      "osProfile": {
                        "computerName": "[variables('vmsSettings').vmSP2013Name]",
                        "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmSP2013Image, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmSP2013Image, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmSP2013Image, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmSP2013Image, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmSP2013Name, '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmSPStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSP2013NicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[equals(parameters('provisionSharePoint2013'), true())]",
                    "name": "[concat(variables('vmsSettings').vmSP2013Name, '/ConfigureSPVM')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines', variables('vmsSettings').vmSP2013Name)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables('dscSettings').vmSPLegacyScriptFileUri]",
                          "script": "[variables('dscSettings').vmSPLegacyScript]",
                          "function": "[variables('dscSettings').vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters('domainFQDN')]",
                          "DCServerName": "[variables('vmsSettings').vmDCName]",
                          "SQLServerName": "[variables('vmsSettings').vmSQLName]",
                          "SQLAlias": "[variables('deploymentSettings').sqlAlias]",
                          "SharePointVersion": "2013",
                          "SharePointSitesAuthority": "[concat(variables('deploymentSettings').sharePointSitesAuthority, '2013')]",
                          "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables('deploymentSettings').enableAnalysis]",
                          "SharePointBits": "[json('null')]",
                          "ConfigureADFS": "[parameters('configureADFS')]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters('adminUserName')]",
                            "Password": "[parameters('adminPassword')]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables('deploymentSettings').spSetupUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables('deploymentSettings').spFarmUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables('deploymentSettings').spAppPoolUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(equals(parameters('provisionSharePoint2016'), true()), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "name": "[variables('vmsResourcesNames').vmSP2016PublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmSP2016Name))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('provisionSharePoint2016'), true())]",
                    "name": "[variables('vmsResourcesNames').vmSP2016NicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSP2016PublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')), variables('networkSettings').vmSP2016PublicIPNicAssociation, json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters('provisionSharePoint2016'), true())]",
                    "name": "[variables('vmsSettings').vmSP2016Name]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSP2016NicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSPSize')]"
                      },
                      "osProfile": {
                        "computerName": "[variables('vmsSettings').vmSP2016Name]",
                        "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmSP2016Image, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmSP2016Image, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmSP2016Image, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmSP2016Image, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmSP2016Name, '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmSPStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSP2016NicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[equals(parameters('provisionSharePoint2016'), true())]",
                    "name": "[concat(variables('vmsSettings').vmSP2016Name, '/ConfigureSPVM')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines', variables('vmsSettings').vmSP2016Name)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables('dscSettings').vmSPLegacyScriptFileUri]",
                          "script": "[variables('dscSettings').vmSPLegacyScript]",
                          "function": "[variables('dscSettings').vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters('domainFQDN')]",
                          "DCServerName": "[variables('vmsSettings').vmDCName]",
                          "SQLServerName": "[variables('vmsSettings').vmSQLName]",
                          "SQLAlias": "[variables('deploymentSettings').sqlAlias]",
                          "SharePointVersion": "2016",
                          "SharePointSitesAuthority": "[concat(variables('deploymentSettings').sharePointSitesAuthority, '2016')]",
                          "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables('deploymentSettings').enableAnalysis]",
                          "SharePointBits": "[json('null')]",
                          "ConfigureADFS": "[parameters('configureADFS')]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters('adminUserName')]",
                            "Password": "[parameters('adminPassword')]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables('deploymentSettings').spSetupUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables('deploymentSettings').spFarmUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables('deploymentSettings').spAppPoolUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(equals(parameters('provisionSharePoint2019'), true()), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "name": "[variables('vmsResourcesNames').vmSP2019PublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmSP2019Name))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('provisionSharePoint2019'), true())]",
                    "name": "[variables('vmsResourcesNames').vmSP2019NicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSP2019PublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')), variables('networkSettings').vmSP2019PublicIPNicAssociation, json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters('provisionSharePoint2019'), true())]",
                    "name": "[variables('vmsSettings').vmSP2019Name]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSP2019NicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSPSize')]"
                      },
                      "osProfile": {
                        "computerName": "[variables('vmsSettings').vmSP2019Name]",
                        "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmSP2019Image, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmSP2019Image, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmSP2019Image, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmSP2019Image, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmSP2019Name, '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmSPStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSP2019NicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[equals(parameters('provisionSharePoint2019'), true())]",
                    "name": "[concat(variables('vmsSettings').vmSP2019Name, '/ConfigureSPVM')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines', variables('vmsSettings').vmSP2019Name)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables('dscSettings').vmSPLegacyScriptFileUri]",
                          "script": "[variables('dscSettings').vmSPLegacyScript]",
                          "function": "[variables('dscSettings').vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters('domainFQDN')]",
                          "DCServerName": "[variables('vmsSettings').vmDCName]",
                          "SQLServerName": "[variables('vmsSettings').vmSQLName]",
                          "SQLAlias": "[variables('deploymentSettings').sqlAlias]",
                          "SharePointVersion": "2019",
                          "SharePointSitesAuthority": "[concat(variables('deploymentSettings').sharePointSitesAuthority, '2019')]",
                          "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables('deploymentSettings').enableAnalysis]",
                          "SharePointBits": "[json('null')]",
                          "ConfigureADFS": "[parameters('configureADFS')]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters('adminUserName')]",
                            "Password": "[parameters('adminPassword')]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables('deploymentSettings').spSetupUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables('deploymentSettings').spFarmUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables('deploymentSettings').spAppPoolUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(not(equals(parameters('provisionSharePointSubscription'), 'No')), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "name": "[variables('vmsResourcesNames').vmSPSubscriptionPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmSPSubscriptionName))]"
                      }
                    }
                  },
                  {
                    "condition": "[not(equals(parameters('provisionSharePointSubscription'), 'No'))]",
                    "name": "[variables('vmsResourcesNames').vmSPSubscriptionNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSPSubscriptionPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')), variables('networkSettings').vmSPSubscriptionPublicIPNicAssociation, json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[not(equals(parameters('provisionSharePointSubscription'), 'No'))]",
                    "name": "[variables('vmsSettings').vmSPSubscriptionName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSPSubscriptionNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSPSize')]"
                      },
                      "osProfile": {
                        "computerName": "[variables('vmsSettings').vmSPSubscriptionName]",
                        "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmSPSubscriptionImage, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmSPSubscriptionImage, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmSPSubscriptionImage, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmSPSubscriptionImage, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmSPSubscriptionName, '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmSPStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSPSubscriptionNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[not(equals(parameters('provisionSharePointSubscription'), 'No'))]",
                    "name": "[concat(variables('vmsSettings').vmSPSubscriptionName, '/ConfigureSPVM')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines', variables('vmsSettings').vmSPSubscriptionName)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables('dscSettings').vmSPSubscriptionScriptFileUri]",
                          "script": "[variables('dscSettings').vmSPSubscriptionScript]",
                          "function": "[variables('dscSettings').vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters('domainFQDN')]",
                          "DCServerName": "[variables('vmsSettings').vmDCName]",
                          "SQLServerName": "[variables('vmsSettings').vmSQLName]",
                          "SQLAlias": "[variables('deploymentSettings').sqlAlias]",
                          "SharePointVersion": "[parameters('provisionSharePointSubscription')]",
                          "SharePointSitesAuthority": "[concat(variables('deploymentSettings').sharePointSitesAuthority, 'SE')]",
                          "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables('deploymentSettings').enableAnalysis]",
                          "SharePointBits": "[variables('sharePointSettings').sharePointSubscriptionBits]",
                          "ConfigureADFS": "[parameters('configureADFS')]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters('adminUserName')]",
                            "Password": "[parameters('adminPassword')]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables('deploymentSettings').spSetupUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables('deploymentSettings').spFarmUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables('deploymentSettings').spAppPoolUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('addAzureBastion'), true())]",
                    "name": "NSG-Subnet-AzureBastion",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "properties": {
                      "securityRules": [
                        {
                          "name": "AllowHttpsInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowGatewayManagerInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowLoadBalancerInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowBastionHostCommunicationInBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                              "8080",
                              "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "DenyAllInBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowSshRdpOutBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                              "22",
                              "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowAzureCloudCommunicationOutBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowBastionHostCommunicationOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                              "8080",
                              "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowGetSessionInformationOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "destinationPortRanges": [
                              "80",
                              "443"
                            ],
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "DenyAllOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters('addAzureBastion'), true())]",
                    "name": "[concat(variables('networkSettings').vNetPrivateName, '/', 'AzureBastionSubnet')]",
                    "type": "Microsoft.Network/virtualNetworks/subnets",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-Subnet-AzureBastion')]"
                    ],
                    "properties": {
                      "addressPrefix": "10.1.4.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-Subnet-AzureBastion')]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('addAzureBastion'), true())]",
                    "name": "PublicIP-Bastion",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Standard",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Static",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(replace(concat(variables('resourceGroupNameFormatted'), '-', 'Bastion'), '_', '-'))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('addAzureBastion'), true())]",
                    "name": "Bastion",
                    "type": "Microsoft.Network/bastionHosts",
                    "location": "[parameters('location')]",
                    "apiVersion": "2022-07-01",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/publicIPAddresses', 'PublicIP-Bastion')]",
                      "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, 'AzureBastionSubnet')]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "IpConf",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'PublicIP-Bastion')]"
                            },
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, 'AzureBastionSubnet')]"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "outputs": {
                  "domainAdminAccount": {
                    "type": "string",
                    "value": "[concat(substring(parameters('domainFQDN'), 0, indexOf(parameters('domainFQDN'), '.')), '\\', parameters('adminUserName'))]"
                  },
                  "domainAdminAccountFormatForBastion": {
                    "type": "string",
                    "value": "[concat(parameters('adminUserName'), '@', parameters('domainFQDN'))]"
                  },
                  "localAdminAccount": {
                    "type": "string",
                    "value": "[variables('deploymentSettings').localAdminUserName]"
                  },
                  "publicIPAddressSPSE": {
                    "condition": "[and(not(equals(parameters('provisionSharePointSubscription'), 'No')), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "type": "string",
                    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSPSubscriptionPublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressSP2019": {
                    "condition": "[and(equals(parameters('provisionSharePoint2019'), true()), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "type": "string",
                    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSP2019PublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressSP2016": {
                    "condition": "[and(equals(parameters('provisionSharePoint2016'), true()), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "type": "string",
                    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSP2016PublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressSP2013": {
                    "condition": "[and(equals(parameters('provisionSharePoint2013'), true()), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "type": "string",
                    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSP2013PublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressSQL": {
                    "condition": "[equals(parameters('addPublicIPAddress'), 'Yes')]",
                    "type": "string",
                    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSQLPublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressDC": {
                    "condition": "[equals(parameters('addPublicIPAddress'), 'Yes')]",
                    "type": "string",
                    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmDCPublicIPName)).dnsSettings.fqdn]"
                  }
                }
              },
              "parametersValueFilesInfo": [
                {
                  "fileName": "azuredeploy.parameters.json",
                  "parametersValueInfo": {}
                }
              ],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactSources/public environment repo/armTemplates/SharePoint-AllVersions",
            "name": "SharePoint-AllVersions",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "SharePoint Subscription / 2019 / 2016 / 2013 with an extensive configuration",
              "description": "This template creates a SharePoint Subscription / 2019 / 2016 / 2013 farm with an extensive configuration that would take ages to perform manually, including a federated authentication with ADFS, an OAuth trust, the User Profiles service and a web application with 2 zones that contains multiple path based and host-named site collections. On the SharePoint virtual machines, Chocolatey is used to install the latest version of Notepad++, Visual Studio Code, Azure Data Studio, Fiddler, ULS Viewer and 7-Zip.",
              "publisher": "Yvand",
              "contents": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "4.0.0.0",
                "metadata": {
                  "description": "Create a SharePoint Subscription / 2019 / 2016 / 2013 farm with an extensive configuration that would take ages to perform manually, and install useful softwares like Fiddler, vscode, np++, 7zip, ULS Viewer to get ready to use",
                  "author": "Yvand"
                },
                "parameters": {
                  "location": {
                    "type": "string",
                    "defaultValue": "[resourceGroup().location]",
                    "metadata": {
                      "description": "Location for all resources."
                    }
                  },
                  "sharePointVersion": {
                    "type": "string",
                    "defaultValue": "Subscription-Latest",
                    "allowedValues": [
                      "2013",
                      "2016",
                      "2019",
                      "Subscription-RTM",
                      "Subscription-22H2",
                      "Subscription-23H1",
                      "Subscription-23H2",
                      "Subscription-Latest"
                    ],
                    "metadata": {
                      "description": "Version of SharePoint farm to create."
                    }
                  },
                  "domainFQDN": {
                    "type": "string",
                    "defaultValue": "contoso.local",
                    "minLength": 5,
                    "metadata": {
                      "description": "FQDN of the AD forest to create."
                    }
                  },
                  "numberOfAdditionalFrontEnd": {
                    "type": "int",
                    "allowedValues": [
                      0,
                      1,
                      2,
                      3,
                      4
                    ],
                    "defaultValue": 0,
                    "metadata": {
                      "description": "Number of MinRole Front-end to add to the farm. The MinRole type can be changed later as needed."
                    }
                  },
                  "addAzureBastion": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if Azure Bastion should be provisioned. See https://azure.microsoft.com/en-us/services/azure-bastion for more information."
                    }
                  },
                  "addPublicIPAddress": {
                    "type": "string",
                    "defaultValue": "SharePointVMsOnly",
                    "allowedValues": [
                      "Yes",
                      "No",
                      "SharePointVMsOnly"
                    ],
                    "metadata": {
                      "description": "Specify if each VM should have a public IP and be reachable from Internet."
                    }
                  },
                  "RDPTrafficAllowed": {
                    "type": "string",
                    "defaultValue": "No",
                    "minLength": 1,
                    "metadata": {
                      "description": "Specify if RDP traffic is allowed:<br>- If 'No' (default): Firewall denies all incoming RDP traffic.<br>- If '*' or 'Internet': Firewall accepts all incoming RDP traffic from Internet.<br>- If CIDR notation (e.g. 192.168.99.0/24 or 2001:1234::/64) or IP address (e.g. 192.168.99.0 or 2001:1234::): Firewall accepts incoming RDP traffic from the IP addresses specified."
                    }
                  },
                  "adminUserName": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Name of the AD and SharePoint administrator. 'admin' and 'administrator' are not allowed."
                    }
                  },
                  "adminPassword": {
                    "type": "securestring",
                    "minLength": 8,
                    "metadata": {
                      "description": "Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
                    }
                  },
                  "serviceAccountsPassword": {
                    "type": "securestring",
                    "minLength": 8,
                    "metadata": {
                      "description": "Password for all service accounts and SharePoint passphrase. Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
                    }
                  },
                  "vmsTimeZone": {
                    "type": "string",
                    "defaultValue": "Romance Standard Time",
                    "allowedValues": [
                      "Dateline Standard Time",
                      "UTC-11",
                      "Aleutian Standard Time",
                      "Hawaiian Standard Time",
                      "Marquesas Standard Time",
                      "Alaskan Standard Time",
                      "UTC-09",
                      "Pacific Standard Time (Mexico)",
                      "UTC-08",
                      "Pacific Standard Time",
                      "US Mountain Standard Time",
                      "Mountain Standard Time (Mexico)",
                      "Mountain Standard Time",
                      "Central America Standard Time",
                      "Central Standard Time",
                      "Easter Island Standard Time",
                      "Central Standard Time (Mexico)",
                      "Canada Central Standard Time",
                      "SA Pacific Standard Time",
                      "Eastern Standard Time (Mexico)",
                      "Eastern Standard Time",
                      "Haiti Standard Time",
                      "Cuba Standard Time",
                      "US Eastern Standard Time",
                      "Turks And Caicos Standard Time",
                      "Paraguay Standard Time",
                      "Atlantic Standard Time",
                      "Venezuela Standard Time",
                      "Central Brazilian Standard Time",
                      "SA Western Standard Time",
                      "Pacific SA Standard Time",
                      "Newfoundland Standard Time",
                      "Tocantins Standard Time",
                      "E. South America Standard Time",
                      "SA Eastern Standard Time",
                      "Argentina Standard Time",
                      "Greenland Standard Time",
                      "Montevideo Standard Time",
                      "Magallanes Standard Time",
                      "Saint Pierre Standard Time",
                      "Bahia Standard Time",
                      "UTC-02",
                      "Mid-Atlantic Standard Time",
                      "Azores Standard Time",
                      "Cape Verde Standard Time",
                      "UTC",
                      "GMT Standard Time",
                      "Greenwich Standard Time",
                      "Sao Tome Standard Time",
                      "Morocco Standard Time",
                      "W. Europe Standard Time",
                      "Central Europe Standard Time",
                      "Romance Standard Time",
                      "Central European Standard Time",
                      "W. Central Africa Standard Time",
                      "Jordan Standard Time",
                      "GTB Standard Time",
                      "Middle East Standard Time",
                      "Egypt Standard Time",
                      "E. Europe Standard Time",
                      "Syria Standard Time",
                      "West Bank Standard Time",
                      "South Africa Standard Time",
                      "FLE Standard Time",
                      "Israel Standard Time",
                      "Kaliningrad Standard Time",
                      "Sudan Standard Time",
                      "Libya Standard Time",
                      "Namibia Standard Time",
                      "Arabic Standard Time",
                      "Turkey Standard Time",
                      "Arab Standard Time",
                      "Belarus Standard Time",
                      "Russian Standard Time",
                      "E. Africa Standard Time",
                      "Iran Standard Time",
                      "Arabian Standard Time",
                      "Astrakhan Standard Time",
                      "Azerbaijan Standard Time",
                      "Russia Time Zone 3",
                      "Mauritius Standard Time",
                      "Saratov Standard Time",
                      "Georgian Standard Time",
                      "Volgograd Standard Time",
                      "Caucasus Standard Time",
                      "Afghanistan Standard Time",
                      "West Asia Standard Time",
                      "Ekaterinburg Standard Time",
                      "Pakistan Standard Time",
                      "Qyzylorda Standard Time",
                      "India Standard Time",
                      "Sri Lanka Standard Time",
                      "Nepal Standard Time",
                      "Central Asia Standard Time",
                      "Bangladesh Standard Time",
                      "Omsk Standard Time",
                      "Myanmar Standard Time",
                      "SE Asia Standard Time",
                      "Altai Standard Time",
                      "W. Mongolia Standard Time",
                      "North Asia Standard Time",
                      "N. Central Asia Standard Time",
                      "Tomsk Standard Time",
                      "China Standard Time",
                      "North Asia East Standard Time",
                      "Singapore Standard Time",
                      "W. Australia Standard Time",
                      "Taipei Standard Time",
                      "Ulaanbaatar Standard Time",
                      "Aus Central W. Standard Time",
                      "Transbaikal Standard Time",
                      "Tokyo Standard Time",
                      "North Korea Standard Time",
                      "Korea Standard Time",
                      "Yakutsk Standard Time",
                      "Cen. Australia Standard Time",
                      "AUS Central Standard Time",
                      "E. Australia Standard Time",
                      "AUS Eastern Standard Time",
                      "West Pacific Standard Time",
                      "Tasmania Standard Time",
                      "Vladivostok Standard Time",
                      "Lord Howe Standard Time",
                      "Bougainville Standard Time",
                      "Russia Time Zone 10",
                      "Magadan Standard Time",
                      "Norfolk Standard Time",
                      "Sakhalin Standard Time",
                      "Central Pacific Standard Time",
                      "Russia Time Zone 11",
                      "New Zealand Standard Time",
                      "UTC+12",
                      "Fiji Standard Time",
                      "Kamchatka Standard Time",
                      "Chatham Islands Standard Time",
                      "UTC+13",
                      "Tonga Standard Time",
                      "Samoa Standard Time",
                      "Line Islands Standard Time"
                    ],
                    "minLength": 2,
                    "metadata": {
                      "description": "Time zone of the virtual machines. Type \"[TimeZoneInfo]::GetSystemTimeZones().Id\" in PowerShell to get the list."
                    }
                  },
                  "enableAutomaticUpdates": {
                    "type": "bool",
                    "defaultValue": true,
                    "metadata": {
                      "description": "Enable automatic Windows Updates."
                    }
                  },
                  "enableHybridBenefitServerLicenses": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Enable Azure Hybrid Benefit to use your on-premises Windows Server licenses and reduce cost. See https://docs.microsoft.com/en-us/azure/virtual-machines/windows/hybrid-use-benefit-licensing for more information."
                    }
                  },
                  "vmDCSize": {
                    "type": "string",
                    "defaultValue": "Standard_B2s",
                    "metadata": {
                      "description": "Size of the DC VM"
                    }
                  },
                  "vmDCStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
                    }
                  },
                  "vmSQLSize": {
                    "type": "string",
                    "defaultValue": "Standard_B2ms",
                    "metadata": {
                      "description": "Size of the SQL VM"
                    }
                  },
                  "vmSQLStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
                    }
                  },
                  "vmSPSize": {
                    "type": "string",
                    "defaultValue": "Standard_B4ms",
                    "metadata": {
                      "description": "Size of the SharePoint VM"
                    }
                  },
                  "vmSPStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
                    }
                  },
                  "_artifactsLocation": {
                    "type": "string",
                    "defaultValue": "https://github.com/Azure/azure-devtestlab/raw/master/Environments/SharePoint-SingleFarm-FullConfig",
                    "metadata": {
                      "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
                    }
                  },
                  "_artifactsLocationSasToken": {
                    "type": "securestring",
                    "defaultValue": "",
                    "metadata": {
                      "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
                    }
                  }
                },
                "variables": {
                  "resourceGroupNameFormatted": "[replace(replace(replace(replace(resourceGroup().name, '.', '-'), '(', '-'), ')', '-'), '_', '-')]",
                  "_artifactsLocationWithTrailingSlash": "[concat(parameters('_artifactsLocation'), '/')]",
                  "sharePointSettings": {
                    "isSharePointSubscription": "[if(startsWith(parameters('sharePointVersion'), 'subscription'), true(), false())]",
                    "sharePointImagesList": {
                      "Subscription": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest",
                      "sp2019": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2019gen2smalldisk:latest",
                      "sp2016": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2016:latest",
                      "sp2013": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2013:latest"
                    },
                    "sharePointSubscriptionBits": [
                      {
                        "Label": "RTM",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5f8a7e-462b-41ff-a5b2-04bdf5821ceb/OfficeServer.iso",
                            "ChecksumType": "SHA256",
                            "Checksum": "C576B847C573234B68FC602A0318F5794D7A61D8149EB6AE537AF04470B7FC05"
                          }
                        ]
                      },
                      {
                        "Label": "22H2",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/8/d/f/8dfcb515-6e49-42e5-b20f-5ebdfd19d8e7/wssloc-subscription-kb5002270-fullfile-x64-glb.exe",
                            "ChecksumType": "SHA256",
                            "Checksum": "7E496530EB873146650A9E0653DE835CB2CAD9AF8D154CBD7387BB0F2297C9FC"
                          },
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5b1ee0-3336-45d7-b2f4-1e6af977d574/sts-subscription-kb5002271-fullfile-x64-glb.exe",
                            "ChecksumType": "SHA256",
                            "Checksum": "247011443AC573D4F03B1622065A7350B8B3DAE04D6A5A6DC64C8270A3BE7636"
                          }
                        ]
                      },
                      {
                        "Label": "23H1",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/c/6/a/c6a17105-3d86-42ad-888d-49b22383bfa1/uber-subscription-kb5002355-fullfile-x64-glb.exe"
                          }
                        ]
                      },
                      {
                        "Label": "23H2",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/f/5/5/f5559e3f-8b24-419f-b238-b09cf986e927/uber-subscription-kb5002474-fullfile-x64-glb.exe"
                          }
                        ]
                      },
                      {
                        "Label": "Latest",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/c/4/9/c492d312-f267-4ead-bfea-5aaad0f817b6/uber-subscription-kb5002506-fullfile-x64-glb.exe"
                          }
                        ]
                      }
                    ]
                  },
                  "networkSettings": {
                    "vNetPrivatePrefix": "10.1.0.0/16",
                    "subnetDCPrefix": "10.1.1.0/24",
                    "dcPrivateIPAddress": "10.1.1.4",
                    "subnetSQLPrefix": "10.1.2.0/24",
                    "subnetSPPrefix": "10.1.3.0/24",
                    "vNetPrivateName": "[concat(variables('resourceGroupNameFormatted'), '-vnet')]",
                    "subnetDCName": "Subnet-DC",
                    "subnetSQLName": "Subnet-SQL",
                    "subnetSPName": "Subnet-SP",
                    "nsgSubnetDCName": "NSG-Subnet-DC",
                    "nsgSubnetSQLName": "NSG-Subnet-SQL",
                    "nsgSubnetSPName": "NSG-Subnet-SP",
                    "vmDCPublicIPNicAssociation": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmDCPublicIPName)]"
                    },
                    "vmSQLPublicIPNicAssociation": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSQLPublicIPName)]"
                    },
                    "vmSPPublicIPNicAssociation": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSPPublicIPName)]"
                    },
                    "nsgRuleAllowIncomingRdp": [
                      {
                        "name": "allow-rdp-rule",
                        "properties": {
                          "description": "Allow RDP",
                          "protocol": "Tcp",
                          "sourcePortRange": "*",
                          "destinationPortRange": "3389",
                          "sourceAddressPrefix": "[parameters('RDPTrafficAllowed')]",
                          "destinationAddressPrefix": "*",
                          "access": "Allow",
                          "priority": 110,
                          "direction": "Inbound"
                        }
                      }
                    ]
                  },
                  "vmsSettings": {
                    "vmDCName": "DC",
                    "vmSQLName": "SQL",
                    "vmSPName": "SP",
                    "vmFEName": "FE",
                    "vmDCImage": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest",
                    "vmSQLImage": "[if(equals(parameters('sharePointVersion'), '2013'), 'MicrosoftSQLServer:sql2014sp3-ws2012r2:sqldev:latest', 'MicrosoftSQLServer:sql2022-ws2022:sqldev-gen2:latest')]",
                    "vmSharePointImage": "[if(variables('sharePointSettings').isSharePointSubscription, variables('sharePointSettings').sharePointImagesList.Subscription, if(equals(parameters('sharePointVersion'), '2019'), variables('sharePointSettings').sharePointImagesList.sp2019, if(equals(parameters('sharePointVersion'), '2016'), variables('sharePointSettings').sharePointImagesList.sp2016,  variables('sharePointSettings').sharePointImagesList.sp2013)))]"
                  },
                  "vmsResourcesNames": {
                    "vmDCNicName": "[concat('NIC-', variables('vmsSettings').vmDCName, '-0')]",
                    "vmDCPublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmDCName)]",
                    "vmSQLNicName": "[concat('NIC-', variables('vmsSettings').vmSQLName, '-0')]",
                    "vmSQLPublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmSQLName)]",
                    "vmSPNicName": "[concat('NIC-', variables('vmsSettings').vmSPName, '-0')]",
                    "vmSPPublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmSPName)]",
                    "vmFENicName": "[concat('NIC-', variables('vmsSettings').vmFEName, '-0')]",
                    "vmFEPublicIPName": "[concat('PublicIP-', variables('vmsSettings').vmFEName)]"
                  },
                  "dscSettings": {
                    "forceUpdateTag": "1.0",
                    "vmDCScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), concat('dsc/ConfigureDCVM.zip', parameters('_artifactsLocationSasToken')))]",
                    "vmDCScript": "ConfigureDCVM.ps1",
                    "vmDCFunction": "ConfigureDCVM",
                    "vmSQLScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), concat('dsc/ConfigureSQLVM.zip', parameters('_artifactsLocationSasToken')))]",
                    "vmSQLScript": "ConfigureSQLVM.ps1",
                    "vmSQLFunction": "ConfigureSQLVM",
                    "vmSPScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), concat(if(variables('sharePointSettings').isSharePointSubscription, 'dsc/ConfigureSPSE.zip', 'dsc/ConfigureSPLegacy.zip'), parameters('_artifactsLocationSasToken')))]",
                    "vmSPScript": "[if(variables('sharePointSettings').isSharePointSubscription, 'ConfigureSPSE.ps1', 'ConfigureSPLegacy.ps1')]",
                    "vmSPFunction": "ConfigureSPVM",
                    "vmFEScriptFileUri": "[uri(variables('_artifactsLocationWithTrailingSlash'), concat(if(variables('sharePointSettings').isSharePointSubscription, 'dsc/ConfigureFESE.zip', 'dsc/ConfigureFELegacy.zip'), parameters('_artifactsLocationSasToken')))]",
                    "vmFEScript": "[if(variables('sharePointSettings').isSharePointSubscription, 'ConfigureFESE.ps1', 'ConfigureFELegacy.ps1')]",
                    "vmFEFunction": "ConfigureFEVM"
                  },
                  "deploymentSettings": {
                    "sharePointSitesAuthority": "spsites",
                    "sharePointCentralAdminPort": 5000,
                    "sharePointBitsSelected": "[if(variables('sharePointSettings').isSharePointSubscription, variables('sharePointSettings').sharePointSubscriptionBits, 'fake')]",
                    "localAdminUserName": "[concat('l-', uniqueString(subscription().subscriptionId))]",
                    "enableAnalysis": false,
                    "applyBrowserPolicies": true,
                    "sqlAlias": "SQLAlias",
                    "spSuperUserName": "spSuperUser",
                    "spSuperReaderName": "spSuperReader",
                    "adfsSvcUserName": "adfssvc",
                    "sqlSvcUserName": "sqlsvc",
                    "spSetupUserName": "spsetup",
                    "spFarmUserName": "spfarm",
                    "spSvcUserName": "spsvc",
                    "spAppPoolUserName": "spapppool",
                    "spADDirSyncUserName": "spdirsync"
                  }
                },
                "resources": [
                  {
                    "name": "[variables('networkSettings').nsgSubnetDCName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters('RDPTrafficAllowed')), 'no'), json('null'), variables('networkSettings').nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables('networkSettings').nsgSubnetSQLName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters('RDPTrafficAllowed')), 'no'), json('null'), variables('networkSettings').nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables('networkSettings').nsgSubnetSPName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters('RDPTrafficAllowed')), 'no'), json('null'), variables('networkSettings').nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables('networkSettings').vNetPrivateName]",
                    "type": "Microsoft.Network/virtualNetworks",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetDCName)]",
                      "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetSQLName)]",
                      "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetSPName)]"
                    ],
                    "properties": {
                      "addressSpace": {
                        "addressPrefixes": [
                          "[variables('networkSettings').vNetPrivatePrefix]"
                        ]
                      },
                      "subnets": [
                        {
                          "name": "[variables('networkSettings').subnetDCName]",
                          "properties": {
                            "addressPrefix": "[variables('networkSettings').subnetDCPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetDCName)]"
                            }
                          }
                        },
                        {
                          "name": "[variables('networkSettings').subnetSQLName]",
                          "properties": {
                            "addressPrefix": "[variables('networkSettings').subnetSQLPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetSQLName)]"
                            }
                          }
                        },
                        {
                          "name": "[variables('networkSettings').subnetSPName]",
                          "properties": {
                            "addressPrefix": "[variables('networkSettings').subnetSPPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSettings').nsgSubnetSPName)]"
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters('addPublicIPAddress'), 'Yes')]",
                    "name": "[variables('vmsResourcesNames').vmDCPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmDCName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('vmsResourcesNames').vmDCNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmDCPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('networkSettings').dcPrivateIPAddress]",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetDCName)]"
                            },
                            "publicIPAddress": "[if(equals(parameters('addPublicIPAddress'), 'Yes'), variables('networkSettings').vmDCPublicIPNicAssociation, json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('vmsSettings').vmDCName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmDCNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmDCSize')]"
                      },
                      "osProfile": {
                        "computerName": "[variables('vmsSettings').vmDCName]",
                        "adminUsername": "[parameters('adminUserName')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmDCImage, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmDCImage, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmDCImage, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmDCImage, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmDCName, '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "diskSizeGB": 32,
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmDCStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmDCNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": [
                      {
                        "name": "ConfigureDCVM",
                        "type": "extensions",
                        "location": "[parameters('location')]",
                        "apiVersion": "2022-08-01",
                        "dependsOn": [
                          "[resourceId('Microsoft.Compute/virtualMachines', variables('vmsSettings').vmDCName)]"
                        ],
                        "properties": {
                          "publisher": "Microsoft.Powershell",
                          "type": "DSC",
                          "typeHandlerVersion": "2.9",
                          "autoUpgradeMinorVersion": true,
                          "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                          "settings": {
                            "wmfVersion": "latest",
                            "configuration": {
                              "url": "[variables('dscSettings').vmDCScriptFileUri]",
                              "script": "[variables('dscSettings').vmDCScript]",
                              "function": "[variables('dscSettings').vmDCFunction]"
                            },
                            "configurationArguments": {
                              "domainFQDN": "[parameters('domainFQDN')]",
                              "PrivateIP": "[variables('networkSettings').dcPrivateIPAddress]",
                              "SPServerName": "[variables('vmsSettings').vmSPName]",
                              "SharePointSitesAuthority": "[variables('deploymentSettings').sharePointSitesAuthority]",
                              "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
                              "ApplyBrowserPolicies": "[variables('deploymentSettings').applyBrowserPolicies]"
                            },
                            "privacy": {
                              "dataCollection": "enable"
                            }
                          },
                          "protectedSettings": {
                            "configurationArguments": {
                              "AdminCreds": {
                                "UserName": "[parameters('adminUserName')]",
                                "Password": "[parameters('adminPassword')]"
                              },
                              "AdfsSvcCreds": {
                                "UserName": "[variables('deploymentSettings').adfsSvcUserName]",
                                "Password": "[parameters('serviceAccountsPassword')]"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "condition": "[equals(parameters('addPublicIPAddress'), 'Yes')]",
                    "name": "[variables('vmsResourcesNames').vmSQLPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmSQLName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('vmsResourcesNames').vmSQLNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSQLPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetSQLName)]"
                            },
                            "publicIPAddress": "[if(equals(parameters('addPublicIPAddress'), 'Yes'), variables('networkSettings').vmSQLPublicIPNicAssociation, json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('vmsSettings').vmSQLName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSQLNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSQLSize')]"
                      },
                      "osProfile": {
                        "computerName": "[variables('vmsSettings').vmSQLName]",
                        "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmSQLImage, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmSQLImage, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmSQLImage, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmSQLImage, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmSQLName, '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "diskSizeGB": 128,
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmSQLStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSQLNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly'))]",
                    "name": "[variables('vmsResourcesNames').vmSPPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmSPName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables('vmsResourcesNames').vmSPNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSPPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')), variables('networkSettings').vmSPPublicIPNicAssociation, json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('vmsSettings').vmSPName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSPNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSPSize')]"
                      },
                      "osProfile": {
                        "computerName": "[variables('vmsSettings').vmSPName]",
                        "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmSharePointImage, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmSharePointImage, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmSharePointImage, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmSharePointImage, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmSPName, '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmSPStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmsResourcesNames').vmSPNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": []
                  },
                  {
                    "name": "[concat(variables('vmsSettings').vmSQLName,'/ConfigureSQLVM')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "location": "[parameters('location')]",
                    "apiVersion": "2022-08-01",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines', variables('vmsSettings').vmSQLName)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables('dscSettings').vmSQLScriptFileUri]",
                          "script": "[variables('dscSettings').vmSQLScript]",
                          "function": "[variables('dscSettings').vmSQLFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters('domainFQDN')]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters('adminUserName')]",
                            "Password": "[parameters('adminPassword')]"
                          },
                          "SqlSvcCreds": {
                            "UserName": "[variables('deploymentSettings').sqlSvcUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables('deploymentSettings').spSetupUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "[concat(variables('vmsSettings').vmSPName,'/ConfigureSPVM')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "location": "[parameters('location')]",
                    "apiVersion": "2022-08-01",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines', variables('vmsSettings').vmSPName)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables('dscSettings').vmSPScriptFileUri]",
                          "script": "[variables('dscSettings').vmSPScript]",
                          "function": "[variables('dscSettings').vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters('domainFQDN')]",
                          "DCServerName": "[variables('vmsSettings').vmDCName]",
                          "SQLServerName": "[variables('vmsSettings').vmSQLName]",
                          "SQLAlias": "[variables('deploymentSettings').sqlAlias]",
                          "SharePointVersion": "[parameters('sharePointVersion')]",
                          "SharePointSitesAuthority": "[variables('deploymentSettings').sharePointSitesAuthority]",
                          "SharePointCentralAdminPort": "[variables('deploymentSettings').sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables('deploymentSettings').enableAnalysis]",
                          "SharePointBits": "[variables('deploymentSettings').sharePointBitsSelected]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters('adminUserName')]",
                            "Password": "[parameters('adminPassword')]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables('deploymentSettings').spSetupUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables('deploymentSettings').spFarmUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPSvcCreds": {
                            "UserName": "[variables('deploymentSettings').spSvcUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables('deploymentSettings').spAppPoolUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPADDirSyncCreds": {
                            "UserName": "[variables('deploymentSettings').spADDirSyncUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPSuperUserCreds": {
                            "UserName": "[variables('deploymentSettings').spSuperUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPSuperReaderCreds": {
                            "UserName": "[variables('deploymentSettings').spSuperReaderName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "name": "[concat(variables('vmsResourcesNames').vmFEPublicIPName, '-', copyIndex())]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "copy": {
                      "name": "frontendPublicIPAddresses",
                      "count": "[parameters('numberOfAdditionalFrontEnd')]"
                    },
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[concat(toLower(concat(variables('resourceGroupNameFormatted'), '-', variables('vmsSettings').vmFEName)), '-', copyIndex())]"
                      }
                    }
                  },
                  {
                    "condition": "[greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1)]",
                    "name": "[concat(variables('vmsResourcesNames').vmFENicName, '-', copyIndex())]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "frontendPublicIPAddresses"
                    ],
                    "copy": {
                      "name": "frontendNetworkInterfaces",
                      "count": "[parameters('numberOfAdditionalFrontEnd')]"
                    },
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, variables('networkSettings').subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')), json(concat('{\"id\": \"', resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmsResourcesNames').vmFEPublicIPName, '-', copyIndex())), '\" }')), json('null'))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1)]",
                    "name": "[concat(variables('vmsSettings').vmFEName, '-', copyIndex())]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "frontendNetworkInterfaces"
                    ],
                    "copy": {
                      "name": "frontendVirtualMachines",
                      "count": "[parameters('numberOfAdditionalFrontEnd')]"
                    },
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters('vmSPSize')]"
                      },
                      "osProfile": {
                        "computerName": "[concat(variables('vmsSettings').vmFEName, '-', copyIndex())]",
                        "adminUsername": "[variables('deploymentSettings').localAdminUserName]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters('vmsTimeZone')]",
                          "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables('vmsSettings').vmSharePointImage, ':')[0]]",
                          "offer": "[split(variables('vmsSettings').vmSharePointImage, ':')[1]]",
                          "sku": "[split(variables('vmsSettings').vmSharePointImage, ':')[2]]",
                          "version": "[split(variables('vmsSettings').vmSharePointImage, ':')[3]]"
                        },
                        "osDisk": {
                          "name": "[concat('Disk-', variables('vmsSettings').vmFEName, '-', copyIndex(), '-OS')]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters('vmSPStorageAccountType')]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmsResourcesNames').vmFENicName, '-', copyIndex()))]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1)]",
                    "name": "[concat(variables('vmsSettings').vmFEName, '-', copyIndex(),'/ConfigureFEVM')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "location": "[parameters('location')]",
                    "apiVersion": "2022-08-01",
                    "dependsOn": [
                      "frontendVirtualMachines"
                    ],
                    "copy": {
                      "name": "frontendVirtualMachineExtensions",
                      "count": "[parameters('numberOfAdditionalFrontEnd')]"
                    },
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables('dscSettings').forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables('dscSettings').vmFEScriptFileUri]",
                          "script": "[variables('dscSettings').vmFEScript]",
                          "function": "[variables('dscSettings').vmFEFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables('networkSettings').dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters('domainFQDN')]",
                          "DCServerName": "[variables('vmsSettings').vmDCName]",
                          "SQLServerName": "[variables('vmsSettings').vmSQLName]",
                          "SQLAlias": "[variables('deploymentSettings').sqlAlias]",
                          "SharePointVersion": "[parameters('sharePointVersion')]",
                          "SharePointSitesAuthority": "[variables('deploymentSettings').sharePointSitesAuthority]",
                          "EnableAnalysis": "[variables('deploymentSettings').enableAnalysis]",
                          "SharePointBits": "[variables('deploymentSettings').sharePointBitsSelected]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters('adminUserName')]",
                            "Password": "[parameters('adminPassword')]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables('deploymentSettings').spSetupUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables('deploymentSettings').spFarmUserName]",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters('serviceAccountsPassword')]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('addAzureBastion'), true())]",
                    "name": "NSG-Subnet-AzureBastion",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "properties": {
                      "securityRules": [
                        {
                          "name": "AllowHttpsInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowGatewayManagerInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowLoadBalancerInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowBastionHostCommunicationInBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                              "8080",
                              "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "DenyAllInBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowSshRdpOutBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                              "22",
                              "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowAzureCloudCommunicationOutBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowBastionHostCommunicationOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                              "8080",
                              "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowGetSessionInformationOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "destinationPortRanges": [
                              "80",
                              "443"
                            ],
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "DenyAllOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters('addAzureBastion'), true())]",
                    "name": "[concat(variables('networkSettings').vNetPrivateName, '/', 'AzureBastionSubnet')]",
                    "type": "Microsoft.Network/virtualNetworks/subnets",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkSettings').vNetPrivateName)]",
                      "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-Subnet-AzureBastion')]"
                    ],
                    "properties": {
                      "addressPrefix": "10.1.4.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-Subnet-AzureBastion')]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('addAzureBastion'), true())]",
                    "name": "PublicIP-Bastion",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Standard",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Static",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(replace(concat(variables('resourceGroupNameFormatted'), '-', 'Bastion'), '_', '-'))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters('addAzureBastion'), true())]",
                    "name": "Bastion",
                    "type": "Microsoft.Network/bastionHosts",
                    "location": "[parameters('location')]",
                    "apiVersion": "2022-07-01",
                    "dependsOn": [
                      "[resourceId('Microsoft.Network/publicIPAddresses', 'PublicIP-Bastion')]",
                      "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, 'AzureBastionSubnet')]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "IpConf",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'PublicIP-Bastion')]"
                            },
                            "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkSettings').vNetPrivateName, 'AzureBastionSubnet')]"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "outputs": {
                  "publicIPAddressSP": {
                    "condition": "[or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly'))]",
                    "type": "string",
                    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSPPublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressFEs": {
                    "condition": "[and(greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1), or(equals(parameters('addPublicIPAddress'), 'Yes'), equals(parameters('addPublicIPAddress'), 'SharePointVMsOnly')))]",
                    "type": "array",
                    "copy": {
                      "count": "[parameters('numberOfAdditionalFrontEnd')]",
                      "input": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmsResourcesNames').vmFEPublicIPName, '-', copyIndex()))).dnsSettings.fqdn]"
                    }
                  },
                  "publicIPAddressSQL": {
                    "condition": "[equals(parameters('addPublicIPAddress'), 'Yes')]",
                    "type": "string",
                    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmSQLPublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressDC": {
                    "condition": "[equals(parameters('addPublicIPAddress'), 'Yes')]",
                    "type": "string",
                    "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmsResourcesNames').vmDCPublicIPName)).dnsSettings.fqdn]"
                  },
                  "domainAdminAccount": {
                    "type": "string",
                    "value": "[concat(substring(parameters('domainFQDN'), 0, indexOf(parameters('domainFQDN'), '.')), '\\', parameters('adminUserName'))]"
                  },
                  "domainAdminAccountFormatForBastion": {
                    "type": "string",
                    "value": "[concat(parameters('adminUserName'), '@', parameters('domainFQDN'))]"
                  },
                  "localAdminAccount": {
                    "type": "string",
                    "value": "[variables('deploymentSettings').localAdminUserName]"
                  }
                }
              },
              "parametersValueFilesInfo": [
                {
                  "fileName": "azuredeploy.parameters.json",
                  "parametersValueInfo": {}
                }
              ],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactSources/public environment repo/armTemplates/SharePoint-SingleFarm-FullConfig",
            "name": "SharePoint-SingleFarm-FullConfig",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "Web App with MySQL",
              "description": "This template creates an Azure Web App with MySQL",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "Database Administrator Login": {
                    "type": "string",
                    "metadata": {
                      "description": "Database administrator login name"
                    }
                  },
                  "Database Administrator Login Password": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Database administrator password"
                    }
                  }
                },
                "variables": {
                  "resourceNamePrefix": "[take(uniqueString(resourceGroup().id), 3)]",
                  "hostingPlanName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-sp'))]",
                  "siteName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6)))]",
                  "serverName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-db'))]",
                  "databaseName": "[concat('db', uniqueString(resourceGroup().id, variables('siteName')))]",
                  "databaseVersion": "5.7",
                  "databaseDTU": 2,
                  "databaseSkuName": "B_Gen5_2",
                  "databaseSkuSizeMB": 51200,
                  "databaseSkuTier": "Basic",
                  "databaseSkuFamily": "Gen5"
                },
                "resources": [
                  {
                    "name": "[variables('hostingPlanName')]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2016-09-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "name": "[variables('hostingPlanName')]",
                      "workerSize": "1",
                      "hostingEnvironment": "",
                      "numberOfWorkers": 0
                    },
                    "sku": {
                      "Tier": "Standard",
                      "Name": "S1"
                    }
                  },
                  {
                    "name": "[variables('siteName')]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2015-02-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
                    ],
                    "properties": {
                      "name": "[variables('siteName')]",
                      "serverFarmId": "[variables('hostingPlanName')]",
                      "hostingEnvironment": ""
                    }
                  },
                  {
                    "name": "[concat(variables('siteName'), '/connectionstrings')]",
                    "type": "Microsoft.Web/sites/config",
                    "apiVersion": "2015-04-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[resourceId('Microsoft.DBforMySQL/servers', variables('serverName'))]"
                    ],
                    "properties": {
                      "defaultConnection": {
                        "value": "[concat('Database=', variables('databaseName'), ';Data Source=', variables('serverName'), '.mysql.database.azure.com;User Id=', parameters('Database Administrator Login'),'@', variables('serverName'),';Password=', parameters('Database Administrator Login Password'))]",
                        "type": "MySQL"
                      }
                    }
                  },
                  {
                    "name": "[variables('serverName')]",
                    "type": "Microsoft.DBforMySQL/servers",
                    "apiVersion": "2017-12-01-preview",
                    "location": "[resourceGroup().location]",
                    "kind": "",
                    "properties": {
                      "version": "[variables('databaseVersion')]",
                      "administratorLogin": "[parameters('Database Administrator Login')]",
                      "administratorLoginPassword": "[parameters('Database Administrator Login Password')]",
                      "storageMB": "[variables('databaseSkuSizeMB')]"
                    },
                    "sku": {
                      "name": "[variables('databaseSkuName')]",
                      "tier": "[variables('databaseSkuTier')]",
                      "capacity": "[variables('databaseDTU')]",
                      "size": "[variables('databaseSkuSizeMB')]",
                      "family": "[variables('databaseSkuFamily')]"
                    },
                    "resources": [
                      {
                        "name": "[concat(variables('serverName'),'-firewall')]",
                        "type": "firewallrules",
                        "apiVersion": "2017-12-01-preview",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'), '/databases/' , variables('databaseName'))]",
                          "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
                        ],
                        "properties": {
                          "startIpAddress": "0.0.0.0",
                          "endIpAddress": "255.255.255.255"
                        }
                      },
                      {
                        "name": "[variables('databaseName')]",
                        "type": "databases",
                        "apiVersion": "2017-12-01-preview",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
                        ],
                        "properties": {
                          "charset": "utf8",
                          "collation": "utf8_general_ci"
                        }
                      }
                    ]
                  }
                ]
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactSources/public environment repo/armTemplates/WebApp-MySQL",
            "name": "WebApp-MySQL",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "Web App with PostgreSQL",
              "description": "This template creates an Azure Web App with PostgreSQL.  WARNING PostgreSQL WILL NEED TO BE ENABLED IN YOUR SUBSCRIPTION.",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "Database Administrator Login": {
                    "type": "string",
                    "metadata": {
                      "description": "Database administrator login name"
                    }
                  },
                  "Database Administrator Login Password": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Database administrator password"
                    }
                  }
                },
                "variables": {
                  "resourceNamePrefix": "[take(uniqueString(resourceGroup().id), 3)]",
                  "hostingPlanName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-sp'))]",
                  "siteName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6)))]",
                  "serverName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-db'))]",
                  "databaseName": "[concat('db', uniqueString(resourceGroup().id, variables('siteName')))]",
                  "databaseVersion": "9.6",
                  "databaseDTU": 2,
                  "databaseSkuName": "GP_Gen5_2",
                  "databaseSkuSizeMB": 51200,
                  "databaseSkuTier": "GeneralPurpose"
                },
                "resources": [
                  {
                    "name": "[variables('hostingPlanName')]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2016-09-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "name": "[variables('hostingPlanName')]",
                      "workerSize": "1",
                      "hostingEnvironment": "",
                      "numberOfWorkers": 0
                    },
                    "sku": {
                      "Tier": "Standard",
                      "Name": "S1"
                    }
                  },
                  {
                    "name": "[variables('siteName')]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2015-02-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
                    ],
                    "properties": {
                      "name": "[variables('siteName')]",
                      "serverFarmId": "[variables('hostingPlanName')]",
                      "hostingEnvironment": ""
                    }
                  },
                  {
                    "name": "[concat(variables('siteName'), '/connectionstrings')]",
                    "type": "Microsoft.Web/sites/config",
                    "apiVersion": "2015-04-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
                    ],
                    "properties": {
                      "defaultConnection": {
                        "value": "[concat('Database=', variables('databaseName'), ';Data Source=', variables('serverName'), '.postgresql.database.azure.com;User Id=', parameters('Database Administrator Login'),'@', variables('serverName'),';Password=', parameters('Database Administrator Login Password'))]",
                        "type": "PostgreSQL"
                      }
                    }
                  },
                  {
                    "name": "[variables('serverName')]",
                    "type": "Microsoft.DBforPostgreSQL/servers",
                    "apiVersion": "2017-12-01",
                    "location": "[resourceGroup().location]",
                    "kind": "",
                    "properties": {
                      "version": "[variables('databaseVersion')]",
                      "administratorLogin": "[parameters('Database Administrator Login')]",
                      "administratorLoginPassword": "[parameters('Database Administrator Login Password')]",
                      "storageMB": "[variables('databaseSkuSizeMB')]"
                    },
                    "sku": {
                      "name": "[variables('databaseSkuName')]",
                      "tier": "[variables('databaseSkuTier')]",
                      "capacity": "[variables('databaseDTU')]",
                      "size": "[variables('databaseSkuSizeMB')]",
                      "family": "Gen5"
                    },
                    "resources": [
                      {
                        "name": "[concat(variables('serverName'),'-firewall')]",
                        "type": "firewallrules",
                        "apiVersion": "2017-12-01",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
                        ],
                        "properties": {
                          "startIpAddress": "0.0.0.0",
                          "endIpAddress": "255.255.255.255"
                        }
                      },
                      {
                        "name": "[variables('databaseName')]",
                        "type": "databases",
                        "apiVersion": "2017-12-01",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[concat('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
                        ],
                        "properties": {
                          "charset": "utf8",
                          "collation": "English_United States.1252"
                        }
                      }
                    ]
                  }
                ]
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactSources/public environment repo/armTemplates/WebApp-PostgresSQL",
            "name": "WebApp-PostgresSQL",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "Web App with SQL Database",
              "description": "This template creates an Azure Web App with Azure SQL Database.",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "Database Administrator Login": {
                    "type": "string",
                    "metadata": {
                      "description": "Database administrator login name"
                    }
                  },
                  "Database Administrator Login Password": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Database administrator password"
                    }
                  }
                },
                "variables": {
                  "resourceNamePrefix": "[take(uniqueString(resourceGroup().id), 3)]",
                  "hostingPlanName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-sp'))]",
                  "siteName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6)))]",
                  "serverName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-db'))]",
                  "databaseName": "[concat('db', uniqueString(resourceGroup().id, variables('siteName')))]",
                  "databaseVersion": "12.0"
                },
                "resources": [
                  {
                    "name": "[variables('hostingPlanName')]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2016-09-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "name": "[variables('hostingPlanName')]",
                      "workerSize": "1",
                      "hostingEnvironment": "",
                      "numberOfWorkers": 0
                    },
                    "sku": {
                      "Tier": "Standard",
                      "Name": "S1"
                    }
                  },
                  {
                    "name": "[variables('siteName')]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2015-02-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
                    ],
                    "properties": {
                      "name": "[variables('siteName')]",
                      "serverFarmId": "[variables('hostingPlanName')]",
                      "hostingEnvironment": ""
                    }
                  },
                  {
                    "name": "[variables('serverName')]",
                    "type": "Microsoft.Sql/servers",
                    "apiVersion": "2014-04-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "administratorLogin": "[parameters('Database Administrator Login')]",
                      "administratorLoginPassword": "[parameters('Database Administrator Login Password')]",
                      "version": "[variables('databaseVersion')]"
                    },
                    "resources": [
                      {
                        "name": "[variables('databaseName')]",
                        "type": "databases",
                        "apiVersion": "2015-01-01",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[variables('serverName')]"
                        ],
                        "properties": {
                          "edition": "Basic",
                          "collation": "SQL_Latin1_General_CP1_CI_AS",
                          "maxSizeBytes": "1073741824",
                          "requestedServiceObjectiveName": "Basic"
                        }
                      },
                      {
                        "type": "firewallrules",
                        "apiVersion": "2014-04-01",
                        "dependsOn": [
                          "[variables('serverName')]"
                        ],
                        "location": "[resourceGroup().location]",
                        "name": "AllowAllWindowsAzureIps",
                        "properties": {
                          "endIpAddress": "0.0.0.0",
                          "startIpAddress": "0.0.0.0"
                        }
                      }
                    ]
                  }
                ]
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactSources/public environment repo/armTemplates/WebApp-SQL",
            "name": "WebApp-SQL",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "Web App",
              "description": "This template creates an Azure Web App without a data store.",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {},
                "variables": {
                  "resourceNamePrefix": "[take(uniqueString(resourceGroup().id), 3)]",
                  "hostingPlanName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-sp'))]",
                  "siteName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6)))]"
                },
                "resources": [
                  {
                    "name": "[variables('hostingPlanName')]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2016-09-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "name": "[variables('hostingPlanName')]",
                      "workerSize": "1",
                      "hostingEnvironment": "",
                      "numberOfWorkers": 0
                    },
                    "sku": {
                      "Tier": "Standard",
                      "Name": "S1"
                    }
                  },
                  {
                    "name": "[variables('siteName')]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2015-02-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
                    ],
                    "properties": {
                      "name": "[variables('siteName')]",
                      "serverFarmId": "[variables('hostingPlanName')]",
                      "hostingEnvironment": ""
                    }
                  }
                ]
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactSources/public environment repo/armTemplates/WebApp",
            "name": "WebApp",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactsources/public%20environment%20repo/armtemplates/ServiceFabric-LabCluster?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-275334a6f0dcbbbabcf8812778daca1b-0dca6951dd2d346d-00",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231116.1 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "c171f7b1b0474423063cf3b5fb49c336",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "6424",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:16:34 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "ee5ae418-21af-463e-8dcc-fd0cb6151c8f",
        "x-ms-ratelimit-remaining-subscription-reads": "11967",
        "x-ms-request-id": "ee5ae418-21af-463e-8dcc-fd0cb6151c8f",
        "x-ms-return-client-request-id": "c171f7b1b0474423063cf3b5fb49c336",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151634Z:ee5ae418-21af-463e-8dcc-fd0cb6151c8f"
      },
      "ResponseBody": {
        "properties": {
          "displayName": "Service Fabric Lab Cluster",
          "description": "A secure 5 node, single nodetype Service fabric Cluster.",
          "publisher": "Microsoft",
          "contents": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "clusterOS": {
                "type": "string",
                "allowedValues": [
                  "Windows",
                  "Linux"
                ],
                "defaultValue": "Windows",
                "metadata": {
                  "description": "Select the cluster OS."
                }
              },
              "adminUsername": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Remote desktop user Id"
                }
              },
              "adminPassword": {
                "type": "securestring",
                "metadata": {
                  "description": "Remote desktop user password. Must be a strong password"
                }
              },
              "certificate": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Certificate as Base64 encoded string."
                }
              },
              "certificatePassword": {
                "type": "securestring",
                "metadata": {
                  "description": "Certificate password for installation."
                }
              },
              "certificateThumbprint": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Certificate thumbprint for identification in the local certificate store."
                }
              },
              "appPort1": {
                "type": "int",
                "defaultValue": 80,
                "minValue": 1,
                "metadata": {
                  "description": "Public accessible application port #1."
                }
              },
              "appPort2": {
                "type": "int",
                "defaultValue": 443,
                "minValue": 1,
                "metadata": {
                  "description": "Public accessible application port #2."
                }
              },
              "tenantId": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Tenant the cluster- and clientapplication belongs to. Required for Windows clusters."
                }
              },
              "clusterApplication": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Client id of cluster application. Required for Windows clusters."
                }
              },
              "clientApplication": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Client id of client application. Required for Windows clusters."
                }
              }
            },
            "variables": {
              "quickstartRepoRoot": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.servicefabric/",
              "clusterName": "[concat('sf-', toLower(uniqueString(resourceGroup().name)))]",
              "vaultName": "[concat('kv-', toLower(uniqueString(resourceGroup().name)))]",
              "vaultSecret": "ClusterCertificate",
              "loadBalancedAppPort1": "[parameters('appPort1')]",
              "loadBalancedAppPort2": "[parameters('appPort2')]",
              "nt0InstanceCount": 5
            },
            "resources": [
              {
                "name": "[variables('vaultName')]",
                "type": "Microsoft.KeyVault/vaults",
                "apiVersion": "2015-06-01",
                "location": "[resourceGroup().location]",
                "tags": {},
                "properties": {
                  "enabledForDeployment": true,
                  "enabledForTemplateDeployment": false,
                  "enabledForVolumeEncryption": false,
                  "tenantId": "[subscription().tenantId]",
                  "sku": {
                    "name": "standard",
                    "family": "A"
                  },
                  "accessPolicies": []
                }
              },
              {
                "name": "[concat(variables('vaultName'), '/', variables('vaultSecret'))]",
                "type": "Microsoft.KeyVault/vaults/secrets",
                "apiVersion": "2015-06-01",
                "dependsOn": [
                  "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                ],
                "properties": {
                  "value": "[base64(concat('{ \"data\":\"', parameters('certificate'), '\", \"dataType\":\"pfx\", \"password\":\"', parameters('certificatePassword'), '\" }'))]"
                }
              },
              {
                "condition": "[equals(parameters('clusterOS'), 'Windows')]",
                "name": "[concat(deployment().name, '-QuickstartTemplate-Windows')]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2015-01-01",
                "dependsOn": [
                  "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "templateLink": {
                    "uri": "[concat(variables('quickstartRepoRoot'), 'service-fabric-secure-cluster-5-node-1-nodetype/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                  },
                  "parameters": {
                    "clusterName": {
                      "value": "[variables('clusterName')]"
                    },
                    "adminUsername": {
                      "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                      "value": "[parameters('adminPassword')]"
                    },
                    "vmImagePublisher": {
                      "value": "MicrosoftWindowsServer"
                    },
                    "vmImageOffer": {
                      "value": "WindowsServer"
                    },
                    "vmImageSku": {
                      "value": "2022-datacenter"
                    },
                    "vmImageVersion": {
                      "value": "latest"
                    },
                    "loadBalancedAppPort1": {
                      "value": "[variables('loadBalancedAppPort1')]"
                    },
                    "loadBalancedAppPort2": {
                      "value": "[variables('loadBalancedAppPort2')]"
                    },
                    "certificateThumbprint": {
                      "value": "[parameters('certificateThumbprint')]"
                    },
                    "sourceVaultResourceId": {
                      "value": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                    },
                    "certificateUrlValue": {
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                      "value": "[variables('nt0InstanceCount')]"
                    },
                    "nodeDataDrive": {
                      "value": "OS"
                    },
                    "tenantId": {
                      "value": "[parameters('tenantId')]"
                    },
                    "clusterApplication": {
                      "value": "[parameters('clusterApplication')]"
                    },
                    "clientapplication": {
                      "value": "[parameters('clientApplication')]"
                    }
                  }
                }
              },
              {
                "condition": "[equals(parameters('clusterOS'), 'Linux')]",
                "name": "[concat(deployment().name, '-QuickstartTemplate-Linux')]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2015-01-01",
                "dependsOn": [
                  "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "templateLink": {
                    "uri": "[concat(variables('quickstartRepoRoot'), '5-vm-ubuntu-1-nodetypes-secure/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                  },
                  "parameters": {
                    "clusterName": {
                      "value": "[variables('clusterName')]"
                    },
                    "adminUsername": {
                      "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                      "value": "[parameters('adminPassword')]"
                    },
                    "vmImagePublisher": {
                      "value": "Canonical"
                    },
                    "vmImageOffer": {
                      "value": "UbuntuServer"
                    },
                    "vmImageSku": {
                      "value": "16.04-LTS"
                    },
                    "vmImageVersion": {
                      "value": "latest"
                    },
                    "loadBalancedAppPort1": {
                      "value": "[variables('loadBalancedAppPort1')]"
                    },
                    "loadBalancedAppPort2": {
                      "value": "[variables('loadBalancedAppPort2')]"
                    },
                    "certificateThumbprint": {
                      "value": "[parameters('certificateThumbprint')]"
                    },
                    "sourceVaultValue": {
                      "value": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                    },
                    "certificateUrlValue": {
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                      "value": "[variables('nt0InstanceCount')]"
                    },
                    "storageAccountEndPoint": {
                      "value": "[resourceGroup().location]"
                    }
                  }
                }
              }
            ],
            "outputs": {}
          },
          "parametersValueFilesInfo": [],
          "enabled": true
        },
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactSources/public environment repo/armTemplates/ServiceFabric-LabCluster",
        "name": "ServiceFabric-LabCluster",
        "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactsources/public%20environment%20repo/armtemplates/ServiceFabric-LabCluster?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-53ec80776cb5e31bd54b27e674aa5441-dd248dec96b7b67d-00",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231116.1 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "42dff0e557cee02f0f651cf061fa98a2",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "6424",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:16:35 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "ff582ba4-53bb-4edf-8ba9-a40f204663ed",
        "x-ms-ratelimit-remaining-subscription-reads": "11966",
        "x-ms-request-id": "ff582ba4-53bb-4edf-8ba9-a40f204663ed",
        "x-ms-return-client-request-id": "42dff0e557cee02f0f651cf061fa98a2",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151636Z:ff582ba4-53bb-4edf-8ba9-a40f204663ed"
      },
      "ResponseBody": {
        "properties": {
          "displayName": "Service Fabric Lab Cluster",
          "description": "A secure 5 node, single nodetype Service fabric Cluster.",
          "publisher": "Microsoft",
          "contents": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "clusterOS": {
                "type": "string",
                "allowedValues": [
                  "Windows",
                  "Linux"
                ],
                "defaultValue": "Windows",
                "metadata": {
                  "description": "Select the cluster OS."
                }
              },
              "adminUsername": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Remote desktop user Id"
                }
              },
              "adminPassword": {
                "type": "securestring",
                "metadata": {
                  "description": "Remote desktop user password. Must be a strong password"
                }
              },
              "certificate": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Certificate as Base64 encoded string."
                }
              },
              "certificatePassword": {
                "type": "securestring",
                "metadata": {
                  "description": "Certificate password for installation."
                }
              },
              "certificateThumbprint": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Certificate thumbprint for identification in the local certificate store."
                }
              },
              "appPort1": {
                "type": "int",
                "defaultValue": 80,
                "minValue": 1,
                "metadata": {
                  "description": "Public accessible application port #1."
                }
              },
              "appPort2": {
                "type": "int",
                "defaultValue": 443,
                "minValue": 1,
                "metadata": {
                  "description": "Public accessible application port #2."
                }
              },
              "tenantId": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Tenant the cluster- and clientapplication belongs to. Required for Windows clusters."
                }
              },
              "clusterApplication": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Client id of cluster application. Required for Windows clusters."
                }
              },
              "clientApplication": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Client id of client application. Required for Windows clusters."
                }
              }
            },
            "variables": {
              "quickstartRepoRoot": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.servicefabric/",
              "clusterName": "[concat('sf-', toLower(uniqueString(resourceGroup().name)))]",
              "vaultName": "[concat('kv-', toLower(uniqueString(resourceGroup().name)))]",
              "vaultSecret": "ClusterCertificate",
              "loadBalancedAppPort1": "[parameters('appPort1')]",
              "loadBalancedAppPort2": "[parameters('appPort2')]",
              "nt0InstanceCount": 5
            },
            "resources": [
              {
                "name": "[variables('vaultName')]",
                "type": "Microsoft.KeyVault/vaults",
                "apiVersion": "2015-06-01",
                "location": "[resourceGroup().location]",
                "tags": {},
                "properties": {
                  "enabledForDeployment": true,
                  "enabledForTemplateDeployment": false,
                  "enabledForVolumeEncryption": false,
                  "tenantId": "[subscription().tenantId]",
                  "sku": {
                    "name": "standard",
                    "family": "A"
                  },
                  "accessPolicies": []
                }
              },
              {
                "name": "[concat(variables('vaultName'), '/', variables('vaultSecret'))]",
                "type": "Microsoft.KeyVault/vaults/secrets",
                "apiVersion": "2015-06-01",
                "dependsOn": [
                  "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                ],
                "properties": {
                  "value": "[base64(concat('{ \"data\":\"', parameters('certificate'), '\", \"dataType\":\"pfx\", \"password\":\"', parameters('certificatePassword'), '\" }'))]"
                }
              },
              {
                "condition": "[equals(parameters('clusterOS'), 'Windows')]",
                "name": "[concat(deployment().name, '-QuickstartTemplate-Windows')]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2015-01-01",
                "dependsOn": [
                  "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "templateLink": {
                    "uri": "[concat(variables('quickstartRepoRoot'), 'service-fabric-secure-cluster-5-node-1-nodetype/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                  },
                  "parameters": {
                    "clusterName": {
                      "value": "[variables('clusterName')]"
                    },
                    "adminUsername": {
                      "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                      "value": "[parameters('adminPassword')]"
                    },
                    "vmImagePublisher": {
                      "value": "MicrosoftWindowsServer"
                    },
                    "vmImageOffer": {
                      "value": "WindowsServer"
                    },
                    "vmImageSku": {
                      "value": "2022-datacenter"
                    },
                    "vmImageVersion": {
                      "value": "latest"
                    },
                    "loadBalancedAppPort1": {
                      "value": "[variables('loadBalancedAppPort1')]"
                    },
                    "loadBalancedAppPort2": {
                      "value": "[variables('loadBalancedAppPort2')]"
                    },
                    "certificateThumbprint": {
                      "value": "[parameters('certificateThumbprint')]"
                    },
                    "sourceVaultResourceId": {
                      "value": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                    },
                    "certificateUrlValue": {
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                      "value": "[variables('nt0InstanceCount')]"
                    },
                    "nodeDataDrive": {
                      "value": "OS"
                    },
                    "tenantId": {
                      "value": "[parameters('tenantId')]"
                    },
                    "clusterApplication": {
                      "value": "[parameters('clusterApplication')]"
                    },
                    "clientapplication": {
                      "value": "[parameters('clientApplication')]"
                    }
                  }
                }
              },
              {
                "condition": "[equals(parameters('clusterOS'), 'Linux')]",
                "name": "[concat(deployment().name, '-QuickstartTemplate-Linux')]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2015-01-01",
                "dependsOn": [
                  "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "templateLink": {
                    "uri": "[concat(variables('quickstartRepoRoot'), '5-vm-ubuntu-1-nodetypes-secure/azuredeploy.json')]",
                    "contentVersion": "1.0.0.0"
                  },
                  "parameters": {
                    "clusterName": {
                      "value": "[variables('clusterName')]"
                    },
                    "adminUsername": {
                      "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                      "value": "[parameters('adminPassword')]"
                    },
                    "vmImagePublisher": {
                      "value": "Canonical"
                    },
                    "vmImageOffer": {
                      "value": "UbuntuServer"
                    },
                    "vmImageSku": {
                      "value": "16.04-LTS"
                    },
                    "vmImageVersion": {
                      "value": "latest"
                    },
                    "loadBalancedAppPort1": {
                      "value": "[variables('loadBalancedAppPort1')]"
                    },
                    "loadBalancedAppPort2": {
                      "value": "[variables('loadBalancedAppPort2')]"
                    },
                    "certificateThumbprint": {
                      "value": "[parameters('certificateThumbprint')]"
                    },
                    "sourceVaultValue": {
                      "value": "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
                    },
                    "certificateUrlValue": {
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('vaultSecret'))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                      "value": "[variables('nt0InstanceCount')]"
                    },
                    "storageAccountEndPoint": {
                      "value": "[resourceGroup().location]"
                    }
                  }
                }
              }
            ],
            "outputs": {}
          },
          "parametersValueFilesInfo": [],
          "enabled": true
        },
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/Microsoft.DevTestLab/labs/lab2057/artifactSources/public environment repo/armTemplates/ServiceFabric-LabCluster",
        "name": "ServiceFabric-LabCluster",
        "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG949/providers/Microsoft.Authorization/locks?api-version=**",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "9d9f2c9a7f190d14fec1e16978c93fbf",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "726",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 16 Nov 2023 15:16:35 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b2dcbcb4-0322-41de-8e16-1c123202e080",
        "x-ms-ratelimit-remaining-subscription-reads": "11965",
        "x-ms-request-id": "southeastasia:38107cb6-8e93-4c4d-ad20-ac89f89d6739",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151636Z:b2dcbcb4-0322-41de-8e16-1c123202e080"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "level": "CanNotDelete",
              "notes": "Reserved resource locked by 'lab2057' lab."
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg949/providers/microsoft.storage/storageaccounts/alab20572437/providers/Microsoft.Authorization/locks/DevTestLabs Lock",
            "type": "Microsoft.Authorization/locks",
            "name": "DevTestLabs Lock"
          },
          {
            "properties": {
              "level": "CanNotDelete",
              "notes": "Reserved resource locked by 'lab2057' lab."
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/DevTestLabRG949/providers/Microsoft.KeyVault/vaults/lab20572839/providers/Microsoft.Authorization/locks/DevTestLabs Lock",
            "type": "Microsoft.Authorization/locks",
            "name": "DevTestLabs Lock"
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg949/providers/microsoft.storage/storageaccounts/alab20572437/providers/Microsoft.Authorization/locks/DevTestLabs%20Lock?api-version=**",
      "RequestMethod": "DELETE",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-1eb9e1e15f0e1fb3327d8bcf34d00fba-b4bb86af04d10a56-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "69892c8740eb5952c890b2e29333e30b",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "0",
        "Date": "Thu, 16 Nov 2023 15:16:36 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "84911a20-7141-4b14-981d-30fc2ef65986",
        "x-ms-ratelimit-remaining-subscription-deletes": "14997",
        "x-ms-request-id": "southeastasia:8277187d-e990-4f6d-9bc9-752213f57594",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151636Z:84911a20-7141-4b14-981d-30fc2ef65986"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG949/providers/Microsoft.KeyVault/vaults/lab20572839/providers/Microsoft.Authorization/locks/DevTestLabs%20Lock?api-version=**",
      "RequestMethod": "DELETE",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-9ec9d963a9a86ecb0979f0bb4fdaea8a-93810acdf635190f-00",
        "User-Agent": "azsdk-net-ResourceManager/1.9.0 (.NET 7.0.14; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "ce1b51a426aa661cdcd1440c75c56846",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "0",
        "Date": "Thu, 16 Nov 2023 15:16:36 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "10e4d02e-bf15-4738-a4b3-fc7ec9ff31ca",
        "x-ms-ratelimit-remaining-subscription-deletes": "14996",
        "x-ms-request-id": "southeastasia:9a9896fe-4229-49f0-af0b-7a9c428efaf3",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231116T151637Z:10e4d02e-bf15-4738-a4b3-fc7ec9ff31ca"
      },
      "ResponseBody": null
    }
  ],
  "Variables": {
    "AZURE_AUTHORITY_HOST": "https://login.microsoftonline.com",
    "RandomSeed": "1614921831",
    "RESOURCE_MANAGER_URL": null,
    "SUBSCRIPTION_ID": "db1ab6f0-4769-4b27-930e-01e2ef9c123c"
  }
}