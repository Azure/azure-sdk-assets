{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c?api-version=2022-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-c8713caaec538b349d12ecc031e8b839-79d63fc46877fc88-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "58adab173a5166a5601557b384a7bf41",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "748",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:27 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "deeb7ed1-61e5-4891-8858-fd72e0fac229",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-request-id": "deeb7ed1-61e5-4891-8858-fd72e0fac229",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175328Z:deeb7ed1-61e5-4891-8858-fd72e0fac229"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c",
        "authorizationSource": "RoleBased",
        "managedByTenants": [],
        "tags": {
          "TagKey-9823": "TagValue-1254",
          "TagKey-3481": "TagValue-320",
          "TagKey-4926": "TagValue-1187",
          "TagKey-751": "TagValue-3921",
          "TagKey-1866": "TagValue-8559",
          "TagKey-3094": "TagValue-9190",
          "TagKey-2449": "TagValue-9",
          "TagKey-8379": "TagValue-164",
          "TagKey-7470": "TagValue-2205",
          "TagKey-4236": "TagValue-3698",
          "TagKey-5316": "TagValue-2725"
        },
        "subscriptionId": "db1ab6f0-4769-4b27-930e-01e2ef9c123c",
        "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
        "displayName": ".NET Mgmt SDK Test with TTL = 1 Day",
        "state": "Enabled",
        "subscriptionPolicies": {
          "locationPlacementId": "Internal_2014-09-01",
          "quotaId": "Internal_2014-09-01",
          "spendingLimit": "Off"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/DevTestLabRG9699?api-version=2022-09-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "21",
        "Content-Type": "application/json",
        "traceparent": "00-b0cb0c3479669b3a6fd4effae09edaba-b956479585fe817c-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "6cd6ad3ba62853f69c032c02f56b0803",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "location": "eastus"
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "229",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:32 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "6dac4239-df10-4a68-9967-92935e54eeb5",
        "x-ms-ratelimit-remaining-subscription-writes": "1199",
        "x-ms-request-id": "6dac4239-df10-4a68-9967-92935e54eeb5",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175332Z:6dac4239-df10-4a68-9967-92935e54eeb5"
      },
      "ResponseBody": {
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG9699",
        "name": "DevTestLabRG9699",
        "type": "Microsoft.Resources/resourceGroups",
        "location": "eastus",
        "properties": {
          "provisioningState": "Succeeded"
        }
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG9699/providers/Microsoft.DevTestLab/labs/lab1779?api-version=2018-09-15",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "114",
        "Content-Type": "application/json",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-112b28c9a91ef10d-00",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231115.1 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "9e2cbf22e91635500c635af501497ec4",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "tags": {},
        "location": "eastus",
        "properties": {
          "premiumDataDisks": "Disabled",
          "environmentPermission": "Contributor"
        }
      },
      "StatusCode": 201,
      "ResponseHeaders": {
        "Azure-AsyncOperation": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
        "Cache-Control": "no-cache",
        "Content-Length": "675",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:36 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "edcbbf50-2a6e-4942-be22-94e359228387",
        "x-ms-ratelimit-remaining-subscription-writes": "1198",
        "x-ms-request-id": "edcbbf50-2a6e-4942-be22-94e359228387",
        "x-ms-return-client-request-id": "9e2cbf22e91635500c635af501497ec4",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175336Z:edcbbf50-2a6e-4942-be22-94e359228387"
      },
      "ResponseBody": {
        "properties": {
          "labStorageType": "Premium",
          "mandatoryArtifactsResourceIdsLinux": [],
          "mandatoryArtifactsResourceIdsWindows": [],
          "createdDate": "2023-11-14T17:53:36.0295453\u002B00:00",
          "premiumDataDisks": "Disabled",
          "environmentPermission": "Contributor",
          "announcement": {
            "title": "",
            "markdown": "",
            "enabled": "Disabled",
            "expired": false
          },
          "support": {
            "enabled": "Disabled",
            "markdown": ""
          },
          "provisioningState": "Creating",
          "uniqueIdentifier": "62ffe3a9-73a6-40da-974f-3f017ac5e8ba"
        },
        "location": "eastus",
        "tags": {},
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.devtestlab/labs/lab1779",
        "name": "lab1779",
        "type": "Microsoft.DevTestLab/labs"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-67239f5385b3aa2f-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "ff84f3afa714c42486371c429b5e9ab9",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:36 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "ca3e2eab-4865-496e-b654-0734634a0de3",
        "x-ms-ratelimit-remaining-subscription-reads": "11998",
        "x-ms-request-id": "ca3e2eab-4865-496e-b654-0734634a0de3",
        "x-ms-return-client-request-id": "ff84f3afa714c42486371c429b5e9ab9",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175337Z:ca3e2eab-4865-496e-b654-0734634a0de3"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-6af857f19fad089b-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "bd883eadd30334abba759960b2d7d1a1",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:38 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "390ddcb4-ff4a-42b8-8020-c3947df3f430",
        "x-ms-ratelimit-remaining-subscription-reads": "11997",
        "x-ms-request-id": "390ddcb4-ff4a-42b8-8020-c3947df3f430",
        "x-ms-return-client-request-id": "bd883eadd30334abba759960b2d7d1a1",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175338Z:390ddcb4-ff4a-42b8-8020-c3947df3f430"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-3b7be6da3676e36b-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "0d450cba7ec5c6af8941a9add2c21ba7",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:39 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "7b453698-f098-45c8-af1e-1a4d9faacfad",
        "x-ms-ratelimit-remaining-subscription-reads": "11996",
        "x-ms-request-id": "7b453698-f098-45c8-af1e-1a4d9faacfad",
        "x-ms-return-client-request-id": "0d450cba7ec5c6af8941a9add2c21ba7",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175339Z:7b453698-f098-45c8-af1e-1a4d9faacfad"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-11283192b164eb94-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "24cb7d1aece2dc4b4750459e0ec311af",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:40 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "2d6349dc-81e1-46db-a073-ab05b2498f61",
        "x-ms-ratelimit-remaining-subscription-reads": "11995",
        "x-ms-request-id": "2d6349dc-81e1-46db-a073-ab05b2498f61",
        "x-ms-return-client-request-id": "24cb7d1aece2dc4b4750459e0ec311af",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175341Z:2d6349dc-81e1-46db-a073-ab05b2498f61"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-250f7da944629e33-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "8f887b668d182ff48fc133c12afe61f8",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:43 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "dc71557d-665b-4430-8801-68df32cb4b96",
        "x-ms-ratelimit-remaining-subscription-reads": "11994",
        "x-ms-request-id": "dc71557d-665b-4430-8801-68df32cb4b96",
        "x-ms-return-client-request-id": "8f887b668d182ff48fc133c12afe61f8",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175343Z:dc71557d-665b-4430-8801-68df32cb4b96"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-dd9b09c98c8a9f4b-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "3546f15aac0ccebec068c5753910b7c5",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:47 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "1ec0905a-d819-4058-8545-75fca7a4a24c",
        "x-ms-ratelimit-remaining-subscription-reads": "11993",
        "x-ms-request-id": "1ec0905a-d819-4058-8545-75fca7a4a24c",
        "x-ms-return-client-request-id": "3546f15aac0ccebec068c5753910b7c5",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175348Z:1ec0905a-d819-4058-8545-75fca7a4a24c"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-19335ee0cc257050-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "5747f92f8b3a8d8e889b9521b889b249",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:53:55 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "28bcb108-9260-4ced-a6e9-c728cd5e2d9f",
        "x-ms-ratelimit-remaining-subscription-reads": "11992",
        "x-ms-request-id": "28bcb108-9260-4ced-a6e9-c728cd5e2d9f",
        "x-ms-return-client-request-id": "5747f92f8b3a8d8e889b9521b889b249",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175356Z:28bcb108-9260-4ced-a6e9-c728cd5e2d9f"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-5229c62808233211-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "1c444deedc7db9a3bcbaceb0c87ff67e",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:54:12 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "a42b9a97-30ec-4078-b12d-348f96a93e91",
        "x-ms-ratelimit-remaining-subscription-reads": "11991",
        "x-ms-request-id": "a42b9a97-30ec-4078-b12d-348f96a93e91",
        "x-ms-return-client-request-id": "1c444deedc7db9a3bcbaceb0c87ff67e",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175412Z:a42b9a97-30ec-4078-b12d-348f96a93e91"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-751079e29053c7d4-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "30926d090ab6cfbe63b9ac70179d1537",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "20",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:54:45 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "79f89bba-2a2d-42ed-800c-cc774a684662",
        "x-ms-ratelimit-remaining-subscription-reads": "11990",
        "x-ms-request-id": "79f89bba-2a2d-42ed-800c-cc774a684662",
        "x-ms-return-client-request-id": "30926d090ab6cfbe63b9ac70179d1537",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175445Z:79f89bba-2a2d-42ed-800c-cc774a684662"
      },
      "ResponseBody": {
        "status": "Running"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/providers/Microsoft.DevTestLab/locations/eastus/operations/20231114-0b823ecf-5aea-4aec-8e09-477cc346f4bb?api-version=2018-09-15\u0026t=638355812165851028\u0026c=MIIHHjCCBgagAwIBAgITOgI9LlF5jGEEQe1CmgAEAj0uUTANBgkqhkiG9w0BAQsFADBEMRMwEQYKCZImiZPyLGQBGRYDR0JMMRMwEQYKCZImiZPyLGQBGRYDQU1FMRgwFgYDVQQDEw9BTUUgSU5GUkEgQ0EgMDEwHhcNMjMxMTAxMjE0OTQ5WhcNMjQxMDI2MjE0OTQ5WjBAMT4wPAYDVQQDEzVhc3luY29wZXJhdGlvbnNpZ25pbmdjZXJ0aWZpY2F0ZS5tYW5hZ2VtZW50LmF6dXJlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMKt_zl2yRFDxIUmqoEA-B7WoRkSqscgwk6CGqDbwEVJS3oTI4Gk-ukQ6El3GQJVthiuwZGw4jwvTDyVWC8mQH2Zni6X1ocTXrNNa6VFJnvzeEn-HpmPATuII8AWtdtUnBvGZGAwgspvH8iZZCiHDowHCWhjVsU6_ipCsmzQeH3oRJI4AwUS_nCVA7U9WPdgIyQp6v5QPzcYCO_zIbNW4y_Cc3phfPEQvPvtSKhuijt68F5WlUY6Ps23ksosYG5VTx7z6skGG9arA5UKUzbbEO8lxzda3OFPZdG7OHe8-VMXxJjtSanZSSbdLgYBRB9m9PGr6voKtML9W5rEukE-lEUCAwEAAaOCBAswggQHMCcGCSsGAQQBgjcVCgQaMBgwCgYIKwYBBQUHAwEwCgYIKwYBBQUHAwIwPQYJKwYBBAGCNxUHBDAwLgYmKwYBBAGCNxUIhpDjDYTVtHiE8Ys-hZvdFs6dEoFggvX2K4Py0SACAWQCAQowggHaBggrBgEFBQcBAQSCAcwwggHIMGYGCCsGAQUFBzAChlpodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpaW5mcmEvQ2VydHMvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmwxLmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MFYGCCsGAQUFBzAChkpodHRwOi8vY3JsMi5hbWUuZ2JsL2FpYS9CWTJQS0lJTlRDQTAxLkFNRS5HQkxfQU1FJTIwSU5GUkElMjBDQSUyMDAxKDQpLmNydDBWBggrBgEFBQcwAoZKaHR0cDovL2NybDMuYW1lLmdibC9haWEvQlkyUEtJSU5UQ0EwMS5BTUUuR0JMX0FNRSUyMElORlJBJTIwQ0ElMjAwMSg0KS5jcnQwVgYIKwYBBQUHMAKGSmh0dHA6Ly9jcmw0LmFtZS5nYmwvYWlhL0JZMlBLSUlOVENBMDEuQU1FLkdCTF9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3J0MB0GA1UdDgQWBBRYUmiD-EjeFFNZByiKICN9p1JofzAOBgNVHQ8BAf8EBAMCBaAwggE1BgNVHR8EggEsMIIBKDCCASSgggEgoIIBHIZCaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraWluZnJhL0NSTC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMS5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMi5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsMy5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JshjRodHRwOi8vY3JsNC5hbWUuZ2JsL2NybC9BTUUlMjBJTkZSQSUyMENBJTIwMDEoNCkuY3JsMBcGA1UdIAQQMA4wDAYKKwYBBAGCN3sBATAfBgNVHSMEGDAWgBTl2Ztn_PjsurvwwKidileIud8-YzAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAKRwStAdrsy7tgEfmtXPZXIwgdXOYwSx2Kqzlhq8b6Ptid4V3vhJvDV0WLS7d72KIMUwZiBnfPHhMmsdkLOSpNSZYC23g3QJSBWvoS86Rpkeru5bEyQmv1gucF_MyaFaUXUd4b7xnvCkv-BBNO8m1lvFAowB2odz9esggf82yeOVBx0yEK_NNOK4l36XvRjvIqemSLZOSi1wow_wn_ovhAEPpSSN7UTahPtz7J12vhP1LuZ4Rvn_hNx48ncw445nMBnMVmcuuakaKDC6_sAcs5lg9jq2yHSaIHRw4xcoS5XwvIykGPMUyAD-dXWFih_XFOKh7ea50hObFhghf3Dtvlo\u0026s=BVJq4mcBnxWj9uZFgRZSkQ6d6gNsPgOOj9XQ27BZemymAGJkKff9N3q2fmIezvliU93cAyON0ubfulhdpQV_WkPWYF8Yz9u1NdcpdpY79Up5XfR35FbflCGgMf1o7hipK7Lc2AAEipGa2wLA_P1mSjFObsQtnyrkbU-MEMVnNvuqeVh1JDdbnjyv1JxzW5RZYKO04Y3iKanGt740Bu98nm9Iqq07kiA60CFqdMrlU_3-z3MKZzVyea24v_f1eCq-FiafQSv3M0DdwPDLNcrbgegbY9bbyWiz7mrfl5xu-RrOgqW8jv4t9PW0s-E7YK7O4JF3h7AHcbHPjVgEcoGBtw\u0026h=RkLsJTjfytPGjGMI6BkorpTCZXCgToxcct_sZW1M8Os",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-4c1a9be460691376-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "eb867bb69bcc5248558e9a7fbcdec509",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "22",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:55:17 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "53741412-4005-457a-a1b4-6835b28c3ec4",
        "x-ms-ratelimit-remaining-subscription-reads": "11989",
        "x-ms-request-id": "53741412-4005-457a-a1b4-6835b28c3ec4",
        "x-ms-return-client-request-id": "eb867bb69bcc5248558e9a7fbcdec509",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175517Z:53741412-4005-457a-a1b4-6835b28c3ec4"
      },
      "ResponseBody": {
        "status": "Succeeded"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG9699/providers/Microsoft.DevTestLab/labs/lab1779?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-af3d21b6c682838cf1b6a2c0ccf353c1-e1cde3c7e2b25a89-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "4a1717a581f7e3938f74b9c42f33a21f",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1507",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:55:18 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "547169bd-08fb-4a04-b107-3c048d19e2a3",
        "x-ms-ratelimit-remaining-subscription-reads": "11988",
        "x-ms-request-id": "547169bd-08fb-4a04-b107-3c048d19e2a3",
        "x-ms-return-client-request-id": "4a1717a581f7e3938f74b9c42f33a21f",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175518Z:547169bd-08fb-4a04-b107-3c048d19e2a3"
      },
      "ResponseBody": {
        "properties": {
          "defaultStorageAccount": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.storage/storageaccounts/alab17791039",
          "defaultPremiumStorageAccount": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.storage/storageaccounts/alab17791039",
          "artifactsStorageAccount": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.storage/storageaccounts/alab17791039",
          "premiumDataDiskStorageAccount": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.storage/storageaccounts/alab17791039",
          "vaultName": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.keyvault/vaults/lab17795546",
          "labStorageType": "Premium",
          "mandatoryArtifactsResourceIdsLinux": [],
          "mandatoryArtifactsResourceIdsWindows": [],
          "createdDate": "2023-11-14T17:53:36.0295453\u002B00:00",
          "premiumDataDisks": "Disabled",
          "environmentPermission": "Contributor",
          "announcement": {
            "title": "",
            "markdown": "",
            "enabled": "Disabled",
            "expired": false
          },
          "support": {
            "enabled": "Disabled",
            "markdown": ""
          },
          "provisioningState": "Succeeded",
          "uniqueIdentifier": "62ffe3a9-73a6-40da-974f-3f017ac5e8ba"
        },
        "location": "eastus",
        "tags": {},
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.devtestlab/labs/lab1779",
        "name": "lab1779",
        "type": "Microsoft.DevTestLab/labs"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactsources?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-ea2f1bceefe5da77d335654de1469338-442e2b570a05ad77-00",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231115.1 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "4cf997a40af86eb1253fda28703e1285",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "1095",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:55:19 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "6c2932bb-9055-435a-9ca5-f147af7453f8",
        "x-ms-ratelimit-remaining-subscription-reads": "11987",
        "x-ms-request-id": "6c2932bb-9055-435a-9ca5-f147af7453f8",
        "x-ms-return-client-request-id": "4cf997a40af86eb1253fda28703e1285",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175519Z:6c2932bb-9055-435a-9ca5-f147af7453f8"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "displayName": "Public Artifact Repo",
              "uri": "https://github.com/Azure/azure-devtestlab.git",
              "sourceType": "GitHub",
              "folderPath": "/Artifacts",
              "branchRef": "master",
              "status": "Enabled",
              "provisioningState": "Succeeded",
              "uniqueIdentifier": "00000000-0000-0000-0000-000000000000"
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.devtestlab/labs/lab1779/artifactsources/public repo",
            "name": "Public Repo",
            "type": "Microsoft.DevTestLab/labs/artifactSources"
          },
          {
            "properties": {
              "displayName": "Public Environment Repo",
              "uri": "https://github.com/Azure/azure-devtestlab.git",
              "sourceType": "GitHub",
              "armTemplateFolderPath": "/Environments",
              "branchRef": "master",
              "status": "Disabled",
              "provisioningState": "Succeeded",
              "uniqueIdentifier": "00000000-0000-0000-0000-000000000000"
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.devtestlab/labs/lab1779/artifactsources/public environment repo",
            "name": "Public Environment Repo",
            "type": "Microsoft.DevTestLab/labs/artifactSources"
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactsources/public%20environment%20repo/armtemplates?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-a6527585fda4fdd2b7976cd46c695c41-0e19bd1aa65ea3d8-00",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231115.1 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "00caa3f4ca863540e8a25c57e1832222",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "121330",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:55:20 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f6621757-c247-4b2d-a180-7c41e71681b8",
        "x-ms-ratelimit-remaining-subscription-reads": "11986",
        "x-ms-request-id": "f6621757-c247-4b2d-a180-7c41e71681b8",
        "x-ms-return-client-request-id": "00caa3f4ca863540e8a25c57e1832222",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175521Z:f6621757-c247-4b2d-a180-7c41e71681b8"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "displayName": "Service Fabric Lab Cluster",
              "description": "A secure 5 node, single nodetype Service fabric Cluster.",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "clusterOS": {
                    "type": "string",
                    "allowedValues": [
                      "Windows",
                      "Linux"
                    ],
                    "defaultValue": "Windows",
                    "metadata": {
                      "description": "Select the cluster OS."
                    }
                  },
                  "adminUsername": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Remote desktop user Id"
                    }
                  },
                  "adminPassword": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Remote desktop user password. Must be a strong password"
                    }
                  },
                  "certificate": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Certificate as Base64 encoded string."
                    }
                  },
                  "certificatePassword": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Certificate password for installation."
                    }
                  },
                  "certificateThumbprint": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Certificate thumbprint for identification in the local certificate store."
                    }
                  },
                  "appPort1": {
                    "type": "int",
                    "defaultValue": 80,
                    "minValue": 1,
                    "metadata": {
                      "description": "Public accessible application port #1."
                    }
                  },
                  "appPort2": {
                    "type": "int",
                    "defaultValue": 443,
                    "minValue": 1,
                    "metadata": {
                      "description": "Public accessible application port #2."
                    }
                  },
                  "tenantId": {
                    "type": "string",
                    "defaultValue": "",
                    "metadata": {
                      "description": "Tenant the cluster- and clientapplication belongs to. Required for Windows clusters."
                    }
                  },
                  "clusterApplication": {
                    "type": "string",
                    "defaultValue": "",
                    "metadata": {
                      "description": "Client id of cluster application. Required for Windows clusters."
                    }
                  },
                  "clientApplication": {
                    "type": "string",
                    "defaultValue": "",
                    "metadata": {
                      "description": "Client id of client application. Required for Windows clusters."
                    }
                  }
                },
                "variables": {
                  "quickstartRepoRoot": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.servicefabric/",
                  "clusterName": "[concat(\u0027sf-\u0027, toLower(uniqueString(resourceGroup().name)))]",
                  "vaultName": "[concat(\u0027kv-\u0027, toLower(uniqueString(resourceGroup().name)))]",
                  "vaultSecret": "ClusterCertificate",
                  "loadBalancedAppPort1": "[parameters(\u0027appPort1\u0027)]",
                  "loadBalancedAppPort2": "[parameters(\u0027appPort2\u0027)]",
                  "nt0InstanceCount": 5
                },
                "resources": [
                  {
                    "name": "[variables(\u0027vaultName\u0027)]",
                    "type": "Microsoft.KeyVault/vaults",
                    "apiVersion": "2015-06-01",
                    "location": "[resourceGroup().location]",
                    "tags": {},
                    "properties": {
                      "enabledForDeployment": true,
                      "enabledForTemplateDeployment": false,
                      "enabledForVolumeEncryption": false,
                      "tenantId": "[subscription().tenantId]",
                      "sku": {
                        "name": "standard",
                        "family": "A"
                      },
                      "accessPolicies": []
                    }
                  },
                  {
                    "name": "[concat(variables(\u0027vaultName\u0027), \u0027/\u0027, variables(\u0027vaultSecret\u0027))]",
                    "type": "Microsoft.KeyVault/vaults/secrets",
                    "apiVersion": "2015-06-01",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, variables(\u0027vaultName\u0027))]"
                    ],
                    "properties": {
                      "value": "[base64(concat(\u0027{ \u0022data\u0022:\u0022\u0027, parameters(\u0027certificate\u0027), \u0027\u0022, \u0022dataType\u0022:\u0022pfx\u0022, \u0022password\u0022:\u0022\u0027, parameters(\u0027certificatePassword\u0027), \u0027\u0022 }\u0027))]"
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027clusterOS\u0027), \u0027Windows\u0027)]",
                    "name": "[concat(deployment().name, \u0027-QuickstartTemplate-Windows\u0027)]",
                    "type": "Microsoft.Resources/deployments",
                    "apiVersion": "2015-01-01",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))]"
                    ],
                    "properties": {
                      "mode": "Incremental",
                      "templateLink": {
                        "uri": "[concat(variables(\u0027quickstartRepoRoot\u0027), \u0027service-fabric-secure-cluster-5-node-1-nodetype/azuredeploy.json\u0027)]",
                        "contentVersion": "1.0.0.0"
                      },
                      "parameters": {
                        "clusterName": {
                          "value": "[variables(\u0027clusterName\u0027)]"
                        },
                        "adminUsername": {
                          "value": "[parameters(\u0027adminUsername\u0027)]"
                        },
                        "adminPassword": {
                          "value": "[parameters(\u0027adminPassword\u0027)]"
                        },
                        "vmImagePublisher": {
                          "value": "MicrosoftWindowsServer"
                        },
                        "vmImageOffer": {
                          "value": "WindowsServer"
                        },
                        "vmImageSku": {
                          "value": "2022-datacenter"
                        },
                        "vmImageVersion": {
                          "value": "latest"
                        },
                        "loadBalancedAppPort1": {
                          "value": "[variables(\u0027loadBalancedAppPort1\u0027)]"
                        },
                        "loadBalancedAppPort2": {
                          "value": "[variables(\u0027loadBalancedAppPort2\u0027)]"
                        },
                        "certificateThumbprint": {
                          "value": "[parameters(\u0027certificateThumbprint\u0027)]"
                        },
                        "sourceVaultResourceId": {
                          "value": "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, variables(\u0027vaultName\u0027))]"
                        },
                        "certificateUrlValue": {
                          "value": "[reference(resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))).secretUriWithVersion]"
                        },
                        "nt0InstanceCount": {
                          "value": "[variables(\u0027nt0InstanceCount\u0027)]"
                        },
                        "nodeDataDrive": {
                          "value": "OS"
                        },
                        "tenantId": {
                          "value": "[parameters(\u0027tenantId\u0027)]"
                        },
                        "clusterApplication": {
                          "value": "[parameters(\u0027clusterApplication\u0027)]"
                        },
                        "clientapplication": {
                          "value": "[parameters(\u0027clientApplication\u0027)]"
                        }
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027clusterOS\u0027), \u0027Linux\u0027)]",
                    "name": "[concat(deployment().name, \u0027-QuickstartTemplate-Linux\u0027)]",
                    "type": "Microsoft.Resources/deployments",
                    "apiVersion": "2015-01-01",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))]"
                    ],
                    "properties": {
                      "mode": "Incremental",
                      "templateLink": {
                        "uri": "[concat(variables(\u0027quickstartRepoRoot\u0027), \u00275-vm-ubuntu-1-nodetypes-secure/azuredeploy.json\u0027)]",
                        "contentVersion": "1.0.0.0"
                      },
                      "parameters": {
                        "clusterName": {
                          "value": "[variables(\u0027clusterName\u0027)]"
                        },
                        "adminUsername": {
                          "value": "[parameters(\u0027adminUsername\u0027)]"
                        },
                        "adminPassword": {
                          "value": "[parameters(\u0027adminPassword\u0027)]"
                        },
                        "vmImagePublisher": {
                          "value": "Canonical"
                        },
                        "vmImageOffer": {
                          "value": "UbuntuServer"
                        },
                        "vmImageSku": {
                          "value": "16.04-LTS"
                        },
                        "vmImageVersion": {
                          "value": "latest"
                        },
                        "loadBalancedAppPort1": {
                          "value": "[variables(\u0027loadBalancedAppPort1\u0027)]"
                        },
                        "loadBalancedAppPort2": {
                          "value": "[variables(\u0027loadBalancedAppPort2\u0027)]"
                        },
                        "certificateThumbprint": {
                          "value": "[parameters(\u0027certificateThumbprint\u0027)]"
                        },
                        "sourceVaultValue": {
                          "value": "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, variables(\u0027vaultName\u0027))]"
                        },
                        "certificateUrlValue": {
                          "value": "[reference(resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))).secretUriWithVersion]"
                        },
                        "nt0InstanceCount": {
                          "value": "[variables(\u0027nt0InstanceCount\u0027)]"
                        },
                        "storageAccountEndPoint": {
                          "value": "[resourceGroup().location]"
                        }
                      }
                    }
                  }
                ],
                "outputs": {}
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactSources/public environment repo/armTemplates/ServiceFabric-LabCluster",
            "name": "ServiceFabric-LabCluster",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "SharePoint Subscription / 2019 / 2016 / 2013 with a lightweight configuration",
              "description": "Deploy SharePoint Subscription / 2019 / 2016 / 2013 with a lightweight configuration. Each version is independent and may or may not be deployed.",
              "publisher": "Yvand",
              "contents": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "4.0.0.0",
                "metadata": {
                  "description": "Deploy SharePoint Subscription / 2019 / 2016 / 2013 with a lightweight configuration. Each version is independent and may or may not be deployed.",
                  "author": "Yvand"
                },
                "parameters": {
                  "location": {
                    "type": "string",
                    "defaultValue": "[resourceGroup().location]",
                    "metadata": {
                      "description": "Location for all resources."
                    }
                  },
                  "provisionSharePointSubscription": {
                    "type": "string",
                    "defaultValue": "Subscription-Latest",
                    "allowedValues": [
                      "No",
                      "Subscription-RTM",
                      "Subscription-22H2",
                      "Subscription-23H1",
                      "Subscription-23H2",
                      "Subscription-Latest"
                    ],
                    "metadata": {
                      "description": "Specify if a SharePoint Subscription farm should be provisioned, and which version if so."
                    }
                  },
                  "provisionSharePoint2019": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if a SharePoint 2019 farm should be provisioned."
                    }
                  },
                  "provisionSharePoint2016": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if a SharePoint 2016 farm should be provisioned."
                    }
                  },
                  "provisionSharePoint2013": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if a SharePoint 2013 farm should be provisioned."
                    }
                  },
                  "domainFQDN": {
                    "type": "string",
                    "defaultValue": "contoso.local",
                    "minLength": 5,
                    "metadata": {
                      "description": "FQDN of the AD forest to create."
                    }
                  },
                  "configureADFS": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if ADFS shoulde be provisioned, and used in SharePoint in an extended zone."
                    }
                  },
                  "addAzureBastion": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if Azure Bastion should be provisioned. See https://azure.microsoft.com/en-us/services/azure-bastion for more information."
                    }
                  },
                  "addPublicIPAddress": {
                    "type": "string",
                    "defaultValue": "SharePointVMsOnly",
                    "allowedValues": [
                      "Yes",
                      "No",
                      "SharePointVMsOnly"
                    ],
                    "metadata": {
                      "description": "Specify if each VM should have a public IP and be reachable from Internet."
                    }
                  },
                  "RDPTrafficAllowed": {
                    "type": "string",
                    "defaultValue": "No",
                    "minLength": 1,
                    "metadata": {
                      "description": "Specify if RDP traffic is allowed:\u003Cbr\u003E- If \u0027No\u0027 (default): Firewall denies all incoming RDP traffic.\u003Cbr\u003E- If \u0027*\u0027 or \u0027Internet\u0027: Firewall accepts all incoming RDP traffic from Internet.\u003Cbr\u003E- If CIDR notation (e.g. 192.168.99.0/24 or 2001:1234::/64) or IP address (e.g. 192.168.99.0 or 2001:1234::): Firewall accepts incoming RDP traffic from the IP addresses specified."
                    }
                  },
                  "adminUserName": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Name of the AD and SharePoint administrator. \u0027admin\u0027 and \u0027administrator\u0027 are not allowed."
                    }
                  },
                  "adminPassword": {
                    "type": "securestring",
                    "minLength": 8,
                    "metadata": {
                      "description": "Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
                    }
                  },
                  "serviceAccountsPassword": {
                    "type": "securestring",
                    "minLength": 8,
                    "metadata": {
                      "description": "Password for all service accounts and SharePoint passphrase. Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
                    }
                  },
                  "vmsTimeZone": {
                    "type": "string",
                    "defaultValue": "Romance Standard Time",
                    "allowedValues": [
                      "Dateline Standard Time",
                      "UTC-11",
                      "Aleutian Standard Time",
                      "Hawaiian Standard Time",
                      "Marquesas Standard Time",
                      "Alaskan Standard Time",
                      "UTC-09",
                      "Pacific Standard Time (Mexico)",
                      "UTC-08",
                      "Pacific Standard Time",
                      "US Mountain Standard Time",
                      "Mountain Standard Time (Mexico)",
                      "Mountain Standard Time",
                      "Central America Standard Time",
                      "Central Standard Time",
                      "Easter Island Standard Time",
                      "Central Standard Time (Mexico)",
                      "Canada Central Standard Time",
                      "SA Pacific Standard Time",
                      "Eastern Standard Time (Mexico)",
                      "Eastern Standard Time",
                      "Haiti Standard Time",
                      "Cuba Standard Time",
                      "US Eastern Standard Time",
                      "Turks And Caicos Standard Time",
                      "Paraguay Standard Time",
                      "Atlantic Standard Time",
                      "Venezuela Standard Time",
                      "Central Brazilian Standard Time",
                      "SA Western Standard Time",
                      "Pacific SA Standard Time",
                      "Newfoundland Standard Time",
                      "Tocantins Standard Time",
                      "E. South America Standard Time",
                      "SA Eastern Standard Time",
                      "Argentina Standard Time",
                      "Greenland Standard Time",
                      "Montevideo Standard Time",
                      "Magallanes Standard Time",
                      "Saint Pierre Standard Time",
                      "Bahia Standard Time",
                      "UTC-02",
                      "Mid-Atlantic Standard Time",
                      "Azores Standard Time",
                      "Cape Verde Standard Time",
                      "UTC",
                      "GMT Standard Time",
                      "Greenwich Standard Time",
                      "Sao Tome Standard Time",
                      "Morocco Standard Time",
                      "W. Europe Standard Time",
                      "Central Europe Standard Time",
                      "Romance Standard Time",
                      "Central European Standard Time",
                      "W. Central Africa Standard Time",
                      "Jordan Standard Time",
                      "GTB Standard Time",
                      "Middle East Standard Time",
                      "Egypt Standard Time",
                      "E. Europe Standard Time",
                      "Syria Standard Time",
                      "West Bank Standard Time",
                      "South Africa Standard Time",
                      "FLE Standard Time",
                      "Israel Standard Time",
                      "Kaliningrad Standard Time",
                      "Sudan Standard Time",
                      "Libya Standard Time",
                      "Namibia Standard Time",
                      "Arabic Standard Time",
                      "Turkey Standard Time",
                      "Arab Standard Time",
                      "Belarus Standard Time",
                      "Russian Standard Time",
                      "E. Africa Standard Time",
                      "Iran Standard Time",
                      "Arabian Standard Time",
                      "Astrakhan Standard Time",
                      "Azerbaijan Standard Time",
                      "Russia Time Zone 3",
                      "Mauritius Standard Time",
                      "Saratov Standard Time",
                      "Georgian Standard Time",
                      "Volgograd Standard Time",
                      "Caucasus Standard Time",
                      "Afghanistan Standard Time",
                      "West Asia Standard Time",
                      "Ekaterinburg Standard Time",
                      "Pakistan Standard Time",
                      "Qyzylorda Standard Time",
                      "India Standard Time",
                      "Sri Lanka Standard Time",
                      "Nepal Standard Time",
                      "Central Asia Standard Time",
                      "Bangladesh Standard Time",
                      "Omsk Standard Time",
                      "Myanmar Standard Time",
                      "SE Asia Standard Time",
                      "Altai Standard Time",
                      "W. Mongolia Standard Time",
                      "North Asia Standard Time",
                      "N. Central Asia Standard Time",
                      "Tomsk Standard Time",
                      "China Standard Time",
                      "North Asia East Standard Time",
                      "Singapore Standard Time",
                      "W. Australia Standard Time",
                      "Taipei Standard Time",
                      "Ulaanbaatar Standard Time",
                      "Aus Central W. Standard Time",
                      "Transbaikal Standard Time",
                      "Tokyo Standard Time",
                      "North Korea Standard Time",
                      "Korea Standard Time",
                      "Yakutsk Standard Time",
                      "Cen. Australia Standard Time",
                      "AUS Central Standard Time",
                      "E. Australia Standard Time",
                      "AUS Eastern Standard Time",
                      "West Pacific Standard Time",
                      "Tasmania Standard Time",
                      "Vladivostok Standard Time",
                      "Lord Howe Standard Time",
                      "Bougainville Standard Time",
                      "Russia Time Zone 10",
                      "Magadan Standard Time",
                      "Norfolk Standard Time",
                      "Sakhalin Standard Time",
                      "Central Pacific Standard Time",
                      "Russia Time Zone 11",
                      "New Zealand Standard Time",
                      "UTC\u002B12",
                      "Fiji Standard Time",
                      "Kamchatka Standard Time",
                      "Chatham Islands Standard Time",
                      "UTC\u002B13",
                      "Tonga Standard Time",
                      "Samoa Standard Time",
                      "Line Islands Standard Time"
                    ],
                    "minLength": 2,
                    "metadata": {
                      "description": "Time zone of the virtual machines. Type \u0022[TimeZoneInfo]::GetSystemTimeZones().Id\u0022 in PowerShell to get the list."
                    }
                  },
                  "enableAutomaticUpdates": {
                    "type": "bool",
                    "defaultValue": true,
                    "metadata": {
                      "description": "Enable automatic Windows Updates."
                    }
                  },
                  "enableHybridBenefitServerLicenses": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Enable Azure Hybrid Benefit to use your on-premises Windows Server licenses and reduce cost. See https://docs.microsoft.com/en-us/azure/virtual-machines/windows/hybrid-use-benefit-licensing for more information."
                    }
                  },
                  "vmDCSize": {
                    "type": "string",
                    "defaultValue": "Standard_B2s",
                    "metadata": {
                      "description": "Size of the DC VM"
                    }
                  },
                  "vmDCStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit \u0027https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes\u0027 for more information"
                    }
                  },
                  "vmSQLSize": {
                    "type": "string",
                    "defaultValue": "Standard_B2ms",
                    "metadata": {
                      "description": "Size of the SQL VM"
                    }
                  },
                  "vmSQLStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit \u0027https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes\u0027 for more information"
                    }
                  },
                  "vmSPSize": {
                    "type": "string",
                    "defaultValue": "Standard_B4ms",
                    "metadata": {
                      "description": "Size of the SharePoint VM"
                    }
                  },
                  "vmSPStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit \u0027https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes\u0027 for more information"
                    }
                  },
                  "_artifactsLocation": {
                    "type": "string",
                    "defaultValue": "https://github.com/Azure/azure-devtestlab/raw/master/Environments/SharePoint-AllVersions",
                    "metadata": {
                      "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
                    }
                  },
                  "_artifactsLocationSasToken": {
                    "type": "securestring",
                    "defaultValue": "",
                    "metadata": {
                      "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
                    }
                  }
                },
                "variables": {
                  "resourceGroupNameFormatted": "[replace(replace(replace(replace(resourceGroup().name, \u0027.\u0027, \u0027-\u0027), \u0027(\u0027, \u0027-\u0027), \u0027)\u0027, \u0027-\u0027), \u0027_\u0027, \u0027-\u0027)]",
                  "_artifactsLocationWithTrailingSlash": "[concat(parameters(\u0027_artifactsLocation\u0027), \u0027/\u0027)]",
                  "sharePointSettings": {
                    "sharePointImagesList": {
                      "Subscription": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest",
                      "sp2019": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2019gen2smalldisk:latest",
                      "sp2016": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2016:latest",
                      "sp2013": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2013:latest"
                    },
                    "sharePointSubscriptionBits": [
                      {
                        "Label": "RTM",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5f8a7e-462b-41ff-a5b2-04bdf5821ceb/OfficeServer.iso",
                            "ChecksumType": "SHA256",
                            "Checksum": "C576B847C573234B68FC602A0318F5794D7A61D8149EB6AE537AF04470B7FC05"
                          }
                        ]
                      },
                      {
                        "Label": "22H2",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/8/d/f/8dfcb515-6e49-42e5-b20f-5ebdfd19d8e7/wssloc-subscription-kb5002270-fullfile-x64-glb.exe",
                            "ChecksumType": "SHA256",
                            "Checksum": "7E496530EB873146650A9E0653DE835CB2CAD9AF8D154CBD7387BB0F2297C9FC"
                          },
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5b1ee0-3336-45d7-b2f4-1e6af977d574/sts-subscription-kb5002271-fullfile-x64-glb.exe",
                            "ChecksumType": "SHA256",
                            "Checksum": "247011443AC573D4F03B1622065A7350B8B3DAE04D6A5A6DC64C8270A3BE7636"
                          }
                        ]
                      },
                      {
                        "Label": "23H1",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/c/6/a/c6a17105-3d86-42ad-888d-49b22383bfa1/uber-subscription-kb5002355-fullfile-x64-glb.exe"
                          }
                        ]
                      },
                      {
                        "Label": "23H2",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/f/5/5/f5559e3f-8b24-419f-b238-b09cf986e927/uber-subscription-kb5002474-fullfile-x64-glb.exe"
                          }
                        ]
                      },
                      {
                        "Label": "Latest",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/c/4/9/c492d312-f267-4ead-bfea-5aaad0f817b6/uber-subscription-kb5002506-fullfile-x64-glb.exe"
                          }
                        ]
                      }
                    ]
                  },
                  "networkSettings": {
                    "vNetPrivatePrefix": "10.1.0.0/16",
                    "subnetDCPrefix": "10.1.1.0/24",
                    "dcPrivateIPAddress": "10.1.1.4",
                    "subnetSQLPrefix": "10.1.2.0/24",
                    "subnetSPPrefix": "10.1.3.0/24",
                    "vNetPrivateName": "[concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-vnet\u0027)]",
                    "subnetDCName": "Subnet-DC",
                    "subnetSQLName": "Subnet-SQL",
                    "subnetSPName": "Subnet-SP",
                    "nsgSubnetDCName": "NSG-Subnet-DC",
                    "nsgSubnetSQLName": "NSG-Subnet-SQL",
                    "nsgSubnetSPName": "NSG-Subnet-SP",
                    "vmDCPublicIPNicAssociation": {
                      "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCPublicIPName)]"
                    },
                    "vmSQLPublicIPNicAssociation": {
                      "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLPublicIPName)]"
                    },
                    "vmSP2013PublicIPNicAssociation": {
                      "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2013PublicIPName)]"
                    },
                    "vmSP2016PublicIPNicAssociation": {
                      "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2016PublicIPName)]"
                    },
                    "vmSP2019PublicIPNicAssociation": {
                      "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2019PublicIPName)]"
                    },
                    "vmSPSubscriptionPublicIPNicAssociation": {
                      "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPSubscriptionPublicIPName)]"
                    },
                    "nsgRuleAllowIncomingRdp": [
                      {
                        "name": "allow-rdp-rule",
                        "properties": {
                          "description": "Allow RDP",
                          "protocol": "Tcp",
                          "sourcePortRange": "*",
                          "destinationPortRange": "3389",
                          "sourceAddressPrefix": "[parameters(\u0027RDPTrafficAllowed\u0027)]",
                          "destinationAddressPrefix": "*",
                          "access": "Allow",
                          "priority": 110,
                          "direction": "Inbound"
                        }
                      }
                    ]
                  },
                  "vmsSettings": {
                    "vmDCName": "DC",
                    "vmSQLName": "SQL",
                    "vmSPSubscriptionName": "SPSE",
                    "vmSP2019Name": "SP2019",
                    "vmSP2016Name": "SP2016",
                    "vmSP2013Name": "SP2013",
                    "vmDCImage": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest",
                    "vmSQLImage": "MicrosoftSQLServer:sql2022-ws2022:sqldev-gen2:latest",
                    "vmSPSubscriptionImage": "[variables(\u0027sharePointSettings\u0027).sharePointImagesList.Subscription]",
                    "vmSP2019Image": "[variables(\u0027sharePointSettings\u0027).sharePointImagesList.sp2019]",
                    "vmSP2016Image": "[variables(\u0027sharePointSettings\u0027).sharePointImagesList.sp2016]",
                    "vmSP2013Image": "[variables(\u0027sharePointSettings\u0027).sharePointImagesList.sp2013]"
                  },
                  "vmsResourcesNames": {
                    "vmDCNicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmDCName, \u0027-0\u0027)]",
                    "vmDCPublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmDCName)]",
                    "vmSQLNicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmSQLName, \u0027-0\u0027)]",
                    "vmSQLPublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmSQLName)]",
                    "vmSPSubscriptionNicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmSPSubscriptionName, \u0027-0\u0027)]",
                    "vmSPSubscriptionPublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmSPSubscriptionName)]",
                    "vmSP2019NicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmSP2019Name, \u0027-0\u0027)]",
                    "vmSP2019PublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmSP2019Name)]",
                    "vmSP2016NicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmSP2016Name, \u0027-0\u0027)]",
                    "vmSP2016PublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmSP2016Name)]",
                    "vmSP2013NicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmSP2013Name, \u0027-0\u0027)]",
                    "vmSP2013PublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmSP2013Name)]"
                  },
                  "dscSettings": {
                    "forceUpdateTag": "1.0",
                    "vmDCScriptFileUri": "[uri(variables(\u0027_artifactsLocationWithTrailingSlash\u0027), concat(\u0027dsc/ConfigureDCVM.zip\u0027, parameters(\u0027_artifactsLocationSasToken\u0027)))]",
                    "vmDCScript": "ConfigureDCVM.ps1",
                    "vmDCFunction": "ConfigureDCVM",
                    "vmSQLScriptFileUri": "[uri(variables(\u0027_artifactsLocationWithTrailingSlash\u0027), concat(\u0027dsc/ConfigureSQLVM.zip\u0027, parameters(\u0027_artifactsLocationSasToken\u0027)))]",
                    "vmSQLScript": "ConfigureSQLVM.ps1",
                    "vmSQLFunction": "ConfigureSQLVM",
                    "vmSPSubscriptionScriptFileUri": "[uri(variables(\u0027_artifactsLocationWithTrailingSlash\u0027), concat(\u0027dsc/ConfigureSPSE.zip\u0027, parameters(\u0027_artifactsLocationSasToken\u0027)))]",
                    "vmSPLegacyScriptFileUri": "[uri(variables(\u0027_artifactsLocationWithTrailingSlash\u0027), concat(\u0027dsc/ConfigureSPLegacy.zip\u0027, parameters(\u0027_artifactsLocationSasToken\u0027)))]",
                    "vmSPSubscriptionScript": "ConfigureSPSE.ps1",
                    "vmSPLegacyScript": "ConfigureSPLegacy.ps1",
                    "vmSPFunction": "ConfigureSPVM"
                  },
                  "deploymentSettings": {
                    "sharePointSitesAuthority": "spsites",
                    "sharePointCentralAdminPort": 5000,
                    "localAdminUserName": "[concat(\u0027l-\u0027, uniqueString(subscription().subscriptionId))]",
                    "enableAnalysis": false,
                    "applyBrowserPolicies": true,
                    "sqlAlias": "SQLAlias",
                    "spSuperUserName": "spSuperUser",
                    "spSuperReaderName": "spSuperReader",
                    "adfsSvcUserName": "adfssvc",
                    "sqlSvcUserName": "sqlsvc",
                    "spSetupUserName": "spsetup",
                    "spFarmUserName": "spfarm",
                    "spSvcUserName": "spsvc",
                    "spAppPoolUserName": "spapppool",
                    "spADDirSyncUserName": "spdirsync"
                  }
                },
                "resources": [
                  {
                    "name": "[variables(\u0027networkSettings\u0027).nsgSubnetDCName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters(\u0027RDPTrafficAllowed\u0027)), \u0027no\u0027), json(\u0027null\u0027), variables(\u0027networkSettings\u0027).nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables(\u0027networkSettings\u0027).nsgSubnetSQLName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters(\u0027RDPTrafficAllowed\u0027)), \u0027no\u0027), json(\u0027null\u0027), variables(\u0027networkSettings\u0027).nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables(\u0027networkSettings\u0027).nsgSubnetSPName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters(\u0027RDPTrafficAllowed\u0027)), \u0027no\u0027), json(\u0027null\u0027), variables(\u0027networkSettings\u0027).nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables(\u0027networkSettings\u0027).vNetPrivateName]",
                    "type": "Microsoft.Network/virtualNetworks",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetDCName)]",
                      "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetSQLName)]",
                      "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetSPName)]"
                    ],
                    "properties": {
                      "addressSpace": {
                        "addressPrefixes": [
                          "[variables(\u0027networkSettings\u0027).vNetPrivatePrefix]"
                        ]
                      },
                      "subnets": [
                        {
                          "name": "[variables(\u0027networkSettings\u0027).subnetDCName]",
                          "properties": {
                            "addressPrefix": "[variables(\u0027networkSettings\u0027).subnetDCPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetDCName)]"
                            }
                          }
                        },
                        {
                          "name": "[variables(\u0027networkSettings\u0027).subnetSQLName]",
                          "properties": {
                            "addressPrefix": "[variables(\u0027networkSettings\u0027).subnetSQLPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetSQLName)]"
                            }
                          }
                        },
                        {
                          "name": "[variables(\u0027networkSettings\u0027).subnetSPName]",
                          "properties": {
                            "addressPrefix": "[variables(\u0027networkSettings\u0027).subnetSPPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetSPName)]"
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027)]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmDCPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmDCName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmDCNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetDCName)]"
                            },
                            "publicIPAddress": "[if(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), variables(\u0027networkSettings\u0027).vmDCPublicIPNicAssociation, json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmDCSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                        "adminUsername": "[parameters(\u0027adminUserName\u0027)]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmDCImage, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmDCImage, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmDCImage, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmDCImage, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmDCName, \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "diskSizeGB": 32,
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmDCStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": [
                      {
                        "name": "ConfigureDCVM",
                        "type": "extensions",
                        "location": "[parameters(\u0027location\u0027)]",
                        "apiVersion": "2022-08-01",
                        "dependsOn": [
                          "[resourceId(\u0027Microsoft.Compute/virtualMachines\u0027, variables(\u0027vmsSettings\u0027).vmDCName)]"
                        ],
                        "properties": {
                          "publisher": "Microsoft.Powershell",
                          "type": "DSC",
                          "typeHandlerVersion": "2.9",
                          "autoUpgradeMinorVersion": true,
                          "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                          "settings": {
                            "wmfVersion": "latest",
                            "configuration": {
                              "url": "[variables(\u0027dscSettings\u0027).vmDCScriptFileUri]",
                              "script": "[variables(\u0027dscSettings\u0027).vmDCScript]",
                              "function": "[variables(\u0027dscSettings\u0027).vmDCFunction]"
                            },
                            "configurationArguments": {
                              "domainFQDN": "[parameters(\u0027domainFQDN\u0027)]",
                              "PrivateIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                              "SPServerName": "[if(not(equals(parameters(\u0027provisionSharePointSubscription\u0027), \u0027No\u0027)), variables(\u0027vmsSettings\u0027).vmSPSubscriptionName, if(parameters(\u0027provisionSharePoint2019\u0027), variables(\u0027vmsSettings\u0027).vmSP2019Image, if(parameters(\u0027provisionSharePoint2016\u0027), variables(\u0027vmsSettings\u0027).vmSP2016Image, variables(\u0027vmsSettings\u0027).vmSP2013Image)))]",
                              "SharePointSitesAuthority": "[concat(variables(\u0027deploymentSettings\u0027).sharePointSitesAuthority, \u0027SE\u0027)]",
                              "SharePointCentralAdminPort": "[variables(\u0027deploymentSettings\u0027).sharePointCentralAdminPort]",
                              "ApplyBrowserPolicies": "[variables(\u0027deploymentSettings\u0027).applyBrowserPolicies]",
                              "ConfigureADFS": "[parameters(\u0027configureADFS\u0027)]"
                            },
                            "privacy": {
                              "dataCollection": "enable"
                            }
                          },
                          "protectedSettings": {
                            "configurationArguments": {
                              "AdminCreds": {
                                "UserName": "[parameters(\u0027adminUserName\u0027)]",
                                "Password": "[parameters(\u0027adminPassword\u0027)]"
                              },
                              "AdfsSvcCreds": {
                                "UserName": "[variables(\u0027deploymentSettings\u0027).adfsSvcUserName]",
                                "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "condition": "[equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027)]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSQLPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmSQLName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSQLNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetSQLName)]"
                            },
                            "publicIPAddress": "[if(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), variables(\u0027networkSettings\u0027).vmSQLPublicIPNicAssociation, json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmSQLSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                        "adminUsername": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmSQLImage, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmSQLImage, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmSQLImage, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmSQLImage, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmSQLName, \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "diskSizeGB": 128,
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmSQLStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": []
                  },
                  {
                    "name": "[concat(variables(\u0027vmsSettings\u0027).vmSQLName, \u0027/ConfigureSQLVM\u0027)]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Compute/virtualMachines\u0027, variables(\u0027vmsSettings\u0027).vmSQLName)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables(\u0027dscSettings\u0027).vmSQLScriptFileUri]",
                          "script": "[variables(\u0027dscSettings\u0027).vmSQLScript]",
                          "function": "[variables(\u0027dscSettings\u0027).vmSQLFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters(\u0027domainFQDN\u0027)]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters(\u0027adminUserName\u0027)]",
                            "Password": "[parameters(\u0027adminPassword\u0027)]"
                          },
                          "SqlSvcCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).sqlSvcUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSetupUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(equals(parameters(\u0027provisionSharePoint2013\u0027), true()), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSP2013PublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmSP2013Name))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027provisionSharePoint2013\u0027), true())]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSP2013NicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2013PublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)), variables(\u0027networkSettings\u0027).vmSP2013PublicIPNicAssociation, json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027provisionSharePoint2013\u0027), true())]",
                    "name": "[variables(\u0027vmsSettings\u0027).vmSP2013Name]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2013NicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmSPSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[variables(\u0027vmsSettings\u0027).vmSP2013Name]",
                        "adminUsername": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmSP2013Image, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmSP2013Image, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmSP2013Image, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmSP2013Image, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmSP2013Name, \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmSPStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2013NicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[equals(parameters(\u0027provisionSharePoint2013\u0027), true())]",
                    "name": "[concat(variables(\u0027vmsSettings\u0027).vmSP2013Name, \u0027/ConfigureSPVM\u0027)]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Compute/virtualMachines\u0027, variables(\u0027vmsSettings\u0027).vmSP2013Name)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables(\u0027dscSettings\u0027).vmSPLegacyScriptFileUri]",
                          "script": "[variables(\u0027dscSettings\u0027).vmSPLegacyScript]",
                          "function": "[variables(\u0027dscSettings\u0027).vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters(\u0027domainFQDN\u0027)]",
                          "DCServerName": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                          "SQLServerName": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                          "SQLAlias": "[variables(\u0027deploymentSettings\u0027).sqlAlias]",
                          "SharePointVersion": "2013",
                          "SharePointSitesAuthority": "[concat(variables(\u0027deploymentSettings\u0027).sharePointSitesAuthority, \u00272013\u0027)]",
                          "SharePointCentralAdminPort": "[variables(\u0027deploymentSettings\u0027).sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables(\u0027deploymentSettings\u0027).enableAnalysis]",
                          "SharePointBits": "[json(\u0027null\u0027)]",
                          "ConfigureADFS": "[parameters(\u0027configureADFS\u0027)]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters(\u0027adminUserName\u0027)]",
                            "Password": "[parameters(\u0027adminPassword\u0027)]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSetupUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spFarmUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spAppPoolUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(equals(parameters(\u0027provisionSharePoint2016\u0027), true()), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSP2016PublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmSP2016Name))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027provisionSharePoint2016\u0027), true())]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSP2016NicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2016PublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)), variables(\u0027networkSettings\u0027).vmSP2016PublicIPNicAssociation, json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027provisionSharePoint2016\u0027), true())]",
                    "name": "[variables(\u0027vmsSettings\u0027).vmSP2016Name]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2016NicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmSPSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[variables(\u0027vmsSettings\u0027).vmSP2016Name]",
                        "adminUsername": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmSP2016Image, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmSP2016Image, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmSP2016Image, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmSP2016Image, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmSP2016Name, \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmSPStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2016NicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[equals(parameters(\u0027provisionSharePoint2016\u0027), true())]",
                    "name": "[concat(variables(\u0027vmsSettings\u0027).vmSP2016Name, \u0027/ConfigureSPVM\u0027)]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Compute/virtualMachines\u0027, variables(\u0027vmsSettings\u0027).vmSP2016Name)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables(\u0027dscSettings\u0027).vmSPLegacyScriptFileUri]",
                          "script": "[variables(\u0027dscSettings\u0027).vmSPLegacyScript]",
                          "function": "[variables(\u0027dscSettings\u0027).vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters(\u0027domainFQDN\u0027)]",
                          "DCServerName": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                          "SQLServerName": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                          "SQLAlias": "[variables(\u0027deploymentSettings\u0027).sqlAlias]",
                          "SharePointVersion": "2016",
                          "SharePointSitesAuthority": "[concat(variables(\u0027deploymentSettings\u0027).sharePointSitesAuthority, \u00272016\u0027)]",
                          "SharePointCentralAdminPort": "[variables(\u0027deploymentSettings\u0027).sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables(\u0027deploymentSettings\u0027).enableAnalysis]",
                          "SharePointBits": "[json(\u0027null\u0027)]",
                          "ConfigureADFS": "[parameters(\u0027configureADFS\u0027)]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters(\u0027adminUserName\u0027)]",
                            "Password": "[parameters(\u0027adminPassword\u0027)]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSetupUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spFarmUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spAppPoolUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(equals(parameters(\u0027provisionSharePoint2019\u0027), true()), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSP2019PublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmSP2019Name))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027provisionSharePoint2019\u0027), true())]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSP2019NicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2019PublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)), variables(\u0027networkSettings\u0027).vmSP2019PublicIPNicAssociation, json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027provisionSharePoint2019\u0027), true())]",
                    "name": "[variables(\u0027vmsSettings\u0027).vmSP2019Name]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2019NicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmSPSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[variables(\u0027vmsSettings\u0027).vmSP2019Name]",
                        "adminUsername": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmSP2019Image, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmSP2019Image, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmSP2019Image, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmSP2019Image, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmSP2019Name, \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmSPStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2019NicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[equals(parameters(\u0027provisionSharePoint2019\u0027), true())]",
                    "name": "[concat(variables(\u0027vmsSettings\u0027).vmSP2019Name, \u0027/ConfigureSPVM\u0027)]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Compute/virtualMachines\u0027, variables(\u0027vmsSettings\u0027).vmSP2019Name)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables(\u0027dscSettings\u0027).vmSPLegacyScriptFileUri]",
                          "script": "[variables(\u0027dscSettings\u0027).vmSPLegacyScript]",
                          "function": "[variables(\u0027dscSettings\u0027).vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters(\u0027domainFQDN\u0027)]",
                          "DCServerName": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                          "SQLServerName": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                          "SQLAlias": "[variables(\u0027deploymentSettings\u0027).sqlAlias]",
                          "SharePointVersion": "2019",
                          "SharePointSitesAuthority": "[concat(variables(\u0027deploymentSettings\u0027).sharePointSitesAuthority, \u00272019\u0027)]",
                          "SharePointCentralAdminPort": "[variables(\u0027deploymentSettings\u0027).sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables(\u0027deploymentSettings\u0027).enableAnalysis]",
                          "SharePointBits": "[json(\u0027null\u0027)]",
                          "ConfigureADFS": "[parameters(\u0027configureADFS\u0027)]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters(\u0027adminUserName\u0027)]",
                            "Password": "[parameters(\u0027adminPassword\u0027)]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSetupUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spFarmUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spAppPoolUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(not(equals(parameters(\u0027provisionSharePointSubscription\u0027), \u0027No\u0027)), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSPSubscriptionPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmSPSubscriptionName))]"
                      }
                    }
                  },
                  {
                    "condition": "[not(equals(parameters(\u0027provisionSharePointSubscription\u0027), \u0027No\u0027))]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSPSubscriptionNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPSubscriptionPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)), variables(\u0027networkSettings\u0027).vmSPSubscriptionPublicIPNicAssociation, json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[not(equals(parameters(\u0027provisionSharePointSubscription\u0027), \u0027No\u0027))]",
                    "name": "[variables(\u0027vmsSettings\u0027).vmSPSubscriptionName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPSubscriptionNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmSPSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[variables(\u0027vmsSettings\u0027).vmSPSubscriptionName]",
                        "adminUsername": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmSPSubscriptionImage, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmSPSubscriptionImage, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmSPSubscriptionImage, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmSPSubscriptionImage, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmSPSubscriptionName, \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmSPStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPSubscriptionNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[not(equals(parameters(\u0027provisionSharePointSubscription\u0027), \u0027No\u0027))]",
                    "name": "[concat(variables(\u0027vmsSettings\u0027).vmSPSubscriptionName, \u0027/ConfigureSPVM\u0027)]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Compute/virtualMachines\u0027, variables(\u0027vmsSettings\u0027).vmSPSubscriptionName)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables(\u0027dscSettings\u0027).vmSPSubscriptionScriptFileUri]",
                          "script": "[variables(\u0027dscSettings\u0027).vmSPSubscriptionScript]",
                          "function": "[variables(\u0027dscSettings\u0027).vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters(\u0027domainFQDN\u0027)]",
                          "DCServerName": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                          "SQLServerName": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                          "SQLAlias": "[variables(\u0027deploymentSettings\u0027).sqlAlias]",
                          "SharePointVersion": "[parameters(\u0027provisionSharePointSubscription\u0027)]",
                          "SharePointSitesAuthority": "[concat(variables(\u0027deploymentSettings\u0027).sharePointSitesAuthority, \u0027SE\u0027)]",
                          "SharePointCentralAdminPort": "[variables(\u0027deploymentSettings\u0027).sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables(\u0027deploymentSettings\u0027).enableAnalysis]",
                          "SharePointBits": "[variables(\u0027sharePointSettings\u0027).sharePointSubscriptionBits]",
                          "ConfigureADFS": "[parameters(\u0027configureADFS\u0027)]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters(\u0027adminUserName\u0027)]",
                            "Password": "[parameters(\u0027adminPassword\u0027)]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSetupUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spFarmUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spAppPoolUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addAzureBastion\u0027), true())]",
                    "name": "NSG-Subnet-AzureBastion",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "properties": {
                      "securityRules": [
                        {
                          "name": "AllowHttpsInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowGatewayManagerInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowLoadBalancerInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowBastionHostCommunicationInBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                              "8080",
                              "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "DenyAllInBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowSshRdpOutBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                              "22",
                              "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowAzureCloudCommunicationOutBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowBastionHostCommunicationOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                              "8080",
                              "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowGetSessionInformationOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "destinationPortRanges": [
                              "80",
                              "443"
                            ],
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "DenyAllOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addAzureBastion\u0027), true())]",
                    "name": "[concat(variables(\u0027networkSettings\u0027).vNetPrivateName, \u0027/\u0027, \u0027AzureBastionSubnet\u0027)]",
                    "type": "Microsoft.Network/virtualNetworks/subnets",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, \u0027NSG-Subnet-AzureBastion\u0027)]"
                    ],
                    "properties": {
                      "addressPrefix": "10.1.4.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, \u0027NSG-Subnet-AzureBastion\u0027)]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addAzureBastion\u0027), true())]",
                    "name": "PublicIP-Bastion",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Standard",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Static",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(replace(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, \u0027Bastion\u0027), \u0027_\u0027, \u0027-\u0027))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addAzureBastion\u0027), true())]",
                    "name": "Bastion",
                    "type": "Microsoft.Network/bastionHosts",
                    "location": "[parameters(\u0027location\u0027)]",
                    "apiVersion": "2022-07-01",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, \u0027PublicIP-Bastion\u0027)]",
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, \u0027AzureBastionSubnet\u0027)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "IpConf",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                              "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, \u0027PublicIP-Bastion\u0027)]"
                            },
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, \u0027AzureBastionSubnet\u0027)]"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "outputs": {
                  "domainAdminAccount": {
                    "type": "string",
                    "value": "[concat(substring(parameters(\u0027domainFQDN\u0027), 0, indexOf(parameters(\u0027domainFQDN\u0027), \u0027.\u0027)), \u0027\\\u0027, parameters(\u0027adminUserName\u0027))]"
                  },
                  "domainAdminAccountFormatForBastion": {
                    "type": "string",
                    "value": "[concat(parameters(\u0027adminUserName\u0027), \u0027@\u0027, parameters(\u0027domainFQDN\u0027))]"
                  },
                  "localAdminAccount": {
                    "type": "string",
                    "value": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]"
                  },
                  "publicIPAddressSPSE": {
                    "condition": "[and(not(equals(parameters(\u0027provisionSharePointSubscription\u0027), \u0027No\u0027)), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "type": "string",
                    "value": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPSubscriptionPublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressSP2019": {
                    "condition": "[and(equals(parameters(\u0027provisionSharePoint2019\u0027), true()), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "type": "string",
                    "value": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2019PublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressSP2016": {
                    "condition": "[and(equals(parameters(\u0027provisionSharePoint2016\u0027), true()), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "type": "string",
                    "value": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2016PublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressSP2013": {
                    "condition": "[and(equals(parameters(\u0027provisionSharePoint2013\u0027), true()), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "type": "string",
                    "value": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSP2013PublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressSQL": {
                    "condition": "[equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027)]",
                    "type": "string",
                    "value": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLPublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressDC": {
                    "condition": "[equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027)]",
                    "type": "string",
                    "value": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCPublicIPName)).dnsSettings.fqdn]"
                  }
                }
              },
              "parametersValueFilesInfo": [
                {
                  "fileName": "azuredeploy.parameters.json",
                  "parametersValueInfo": {}
                }
              ],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactSources/public environment repo/armTemplates/SharePoint-AllVersions",
            "name": "SharePoint-AllVersions",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "SharePoint Subscription / 2019 / 2016 / 2013 with an extensive configuration",
              "description": "This template creates a SharePoint Subscription / 2019 / 2016 / 2013 farm with an extensive configuration that would take ages to perform manually, including a federated authentication with ADFS, an OAuth trust, the User Profiles service and a web application with 2 zones that contains multiple path based and host-named site collections. On the SharePoint virtual machines, Chocolatey is used to install the latest version of Notepad\u002B\u002B, Visual Studio Code, Azure Data Studio, Fiddler, ULS Viewer and 7-Zip.",
              "publisher": "Yvand",
              "contents": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "4.0.0.0",
                "metadata": {
                  "description": "Create a SharePoint Subscription / 2019 / 2016 / 2013 farm with an extensive configuration that would take ages to perform manually, and install useful softwares like Fiddler, vscode, np\u002B\u002B, 7zip, ULS Viewer to get ready to use",
                  "author": "Yvand"
                },
                "parameters": {
                  "location": {
                    "type": "string",
                    "defaultValue": "[resourceGroup().location]",
                    "metadata": {
                      "description": "Location for all resources."
                    }
                  },
                  "sharePointVersion": {
                    "type": "string",
                    "defaultValue": "Subscription-Latest",
                    "allowedValues": [
                      "2013",
                      "2016",
                      "2019",
                      "Subscription-RTM",
                      "Subscription-22H2",
                      "Subscription-23H1",
                      "Subscription-23H2",
                      "Subscription-Latest"
                    ],
                    "metadata": {
                      "description": "Version of SharePoint farm to create."
                    }
                  },
                  "domainFQDN": {
                    "type": "string",
                    "defaultValue": "contoso.local",
                    "minLength": 5,
                    "metadata": {
                      "description": "FQDN of the AD forest to create."
                    }
                  },
                  "numberOfAdditionalFrontEnd": {
                    "type": "int",
                    "allowedValues": [
                      0,
                      1,
                      2,
                      3,
                      4
                    ],
                    "defaultValue": 0,
                    "metadata": {
                      "description": "Number of MinRole Front-end to add to the farm. The MinRole type can be changed later as needed."
                    }
                  },
                  "addAzureBastion": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Specify if Azure Bastion should be provisioned. See https://azure.microsoft.com/en-us/services/azure-bastion for more information."
                    }
                  },
                  "addPublicIPAddress": {
                    "type": "string",
                    "defaultValue": "SharePointVMsOnly",
                    "allowedValues": [
                      "Yes",
                      "No",
                      "SharePointVMsOnly"
                    ],
                    "metadata": {
                      "description": "Specify if each VM should have a public IP and be reachable from Internet."
                    }
                  },
                  "RDPTrafficAllowed": {
                    "type": "string",
                    "defaultValue": "No",
                    "minLength": 1,
                    "metadata": {
                      "description": "Specify if RDP traffic is allowed:\u003Cbr\u003E- If \u0027No\u0027 (default): Firewall denies all incoming RDP traffic.\u003Cbr\u003E- If \u0027*\u0027 or \u0027Internet\u0027: Firewall accepts all incoming RDP traffic from Internet.\u003Cbr\u003E- If CIDR notation (e.g. 192.168.99.0/24 or 2001:1234::/64) or IP address (e.g. 192.168.99.0 or 2001:1234::): Firewall accepts incoming RDP traffic from the IP addresses specified."
                    }
                  },
                  "adminUserName": {
                    "type": "string",
                    "minLength": 1,
                    "metadata": {
                      "description": "Name of the AD and SharePoint administrator. \u0027admin\u0027 and \u0027administrator\u0027 are not allowed."
                    }
                  },
                  "adminPassword": {
                    "type": "securestring",
                    "minLength": 8,
                    "metadata": {
                      "description": "Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
                    }
                  },
                  "serviceAccountsPassword": {
                    "type": "securestring",
                    "minLength": 8,
                    "metadata": {
                      "description": "Password for all service accounts and SharePoint passphrase. Input must meet password complexity requirements as documented in https://learn.microsoft.com/azure/virtual-machines/windows/faq#what-are-the-password-requirements-when-creating-a-vm-"
                    }
                  },
                  "vmsTimeZone": {
                    "type": "string",
                    "defaultValue": "Romance Standard Time",
                    "allowedValues": [
                      "Dateline Standard Time",
                      "UTC-11",
                      "Aleutian Standard Time",
                      "Hawaiian Standard Time",
                      "Marquesas Standard Time",
                      "Alaskan Standard Time",
                      "UTC-09",
                      "Pacific Standard Time (Mexico)",
                      "UTC-08",
                      "Pacific Standard Time",
                      "US Mountain Standard Time",
                      "Mountain Standard Time (Mexico)",
                      "Mountain Standard Time",
                      "Central America Standard Time",
                      "Central Standard Time",
                      "Easter Island Standard Time",
                      "Central Standard Time (Mexico)",
                      "Canada Central Standard Time",
                      "SA Pacific Standard Time",
                      "Eastern Standard Time (Mexico)",
                      "Eastern Standard Time",
                      "Haiti Standard Time",
                      "Cuba Standard Time",
                      "US Eastern Standard Time",
                      "Turks And Caicos Standard Time",
                      "Paraguay Standard Time",
                      "Atlantic Standard Time",
                      "Venezuela Standard Time",
                      "Central Brazilian Standard Time",
                      "SA Western Standard Time",
                      "Pacific SA Standard Time",
                      "Newfoundland Standard Time",
                      "Tocantins Standard Time",
                      "E. South America Standard Time",
                      "SA Eastern Standard Time",
                      "Argentina Standard Time",
                      "Greenland Standard Time",
                      "Montevideo Standard Time",
                      "Magallanes Standard Time",
                      "Saint Pierre Standard Time",
                      "Bahia Standard Time",
                      "UTC-02",
                      "Mid-Atlantic Standard Time",
                      "Azores Standard Time",
                      "Cape Verde Standard Time",
                      "UTC",
                      "GMT Standard Time",
                      "Greenwich Standard Time",
                      "Sao Tome Standard Time",
                      "Morocco Standard Time",
                      "W. Europe Standard Time",
                      "Central Europe Standard Time",
                      "Romance Standard Time",
                      "Central European Standard Time",
                      "W. Central Africa Standard Time",
                      "Jordan Standard Time",
                      "GTB Standard Time",
                      "Middle East Standard Time",
                      "Egypt Standard Time",
                      "E. Europe Standard Time",
                      "Syria Standard Time",
                      "West Bank Standard Time",
                      "South Africa Standard Time",
                      "FLE Standard Time",
                      "Israel Standard Time",
                      "Kaliningrad Standard Time",
                      "Sudan Standard Time",
                      "Libya Standard Time",
                      "Namibia Standard Time",
                      "Arabic Standard Time",
                      "Turkey Standard Time",
                      "Arab Standard Time",
                      "Belarus Standard Time",
                      "Russian Standard Time",
                      "E. Africa Standard Time",
                      "Iran Standard Time",
                      "Arabian Standard Time",
                      "Astrakhan Standard Time",
                      "Azerbaijan Standard Time",
                      "Russia Time Zone 3",
                      "Mauritius Standard Time",
                      "Saratov Standard Time",
                      "Georgian Standard Time",
                      "Volgograd Standard Time",
                      "Caucasus Standard Time",
                      "Afghanistan Standard Time",
                      "West Asia Standard Time",
                      "Ekaterinburg Standard Time",
                      "Pakistan Standard Time",
                      "Qyzylorda Standard Time",
                      "India Standard Time",
                      "Sri Lanka Standard Time",
                      "Nepal Standard Time",
                      "Central Asia Standard Time",
                      "Bangladesh Standard Time",
                      "Omsk Standard Time",
                      "Myanmar Standard Time",
                      "SE Asia Standard Time",
                      "Altai Standard Time",
                      "W. Mongolia Standard Time",
                      "North Asia Standard Time",
                      "N. Central Asia Standard Time",
                      "Tomsk Standard Time",
                      "China Standard Time",
                      "North Asia East Standard Time",
                      "Singapore Standard Time",
                      "W. Australia Standard Time",
                      "Taipei Standard Time",
                      "Ulaanbaatar Standard Time",
                      "Aus Central W. Standard Time",
                      "Transbaikal Standard Time",
                      "Tokyo Standard Time",
                      "North Korea Standard Time",
                      "Korea Standard Time",
                      "Yakutsk Standard Time",
                      "Cen. Australia Standard Time",
                      "AUS Central Standard Time",
                      "E. Australia Standard Time",
                      "AUS Eastern Standard Time",
                      "West Pacific Standard Time",
                      "Tasmania Standard Time",
                      "Vladivostok Standard Time",
                      "Lord Howe Standard Time",
                      "Bougainville Standard Time",
                      "Russia Time Zone 10",
                      "Magadan Standard Time",
                      "Norfolk Standard Time",
                      "Sakhalin Standard Time",
                      "Central Pacific Standard Time",
                      "Russia Time Zone 11",
                      "New Zealand Standard Time",
                      "UTC\u002B12",
                      "Fiji Standard Time",
                      "Kamchatka Standard Time",
                      "Chatham Islands Standard Time",
                      "UTC\u002B13",
                      "Tonga Standard Time",
                      "Samoa Standard Time",
                      "Line Islands Standard Time"
                    ],
                    "minLength": 2,
                    "metadata": {
                      "description": "Time zone of the virtual machines. Type \u0022[TimeZoneInfo]::GetSystemTimeZones().Id\u0022 in PowerShell to get the list."
                    }
                  },
                  "enableAutomaticUpdates": {
                    "type": "bool",
                    "defaultValue": true,
                    "metadata": {
                      "description": "Enable automatic Windows Updates."
                    }
                  },
                  "enableHybridBenefitServerLicenses": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                      "description": "Enable Azure Hybrid Benefit to use your on-premises Windows Server licenses and reduce cost. See https://docs.microsoft.com/en-us/azure/virtual-machines/windows/hybrid-use-benefit-licensing for more information."
                    }
                  },
                  "vmDCSize": {
                    "type": "string",
                    "defaultValue": "Standard_B2s",
                    "metadata": {
                      "description": "Size of the DC VM"
                    }
                  },
                  "vmDCStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit \u0027https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes\u0027 for more information"
                    }
                  },
                  "vmSQLSize": {
                    "type": "string",
                    "defaultValue": "Standard_B2ms",
                    "metadata": {
                      "description": "Size of the SQL VM"
                    }
                  },
                  "vmSQLStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit \u0027https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes\u0027 for more information"
                    }
                  },
                  "vmSPSize": {
                    "type": "string",
                    "defaultValue": "Standard_B4ms",
                    "metadata": {
                      "description": "Size of the SharePoint VM"
                    }
                  },
                  "vmSPStorageAccountType": {
                    "type": "string",
                    "defaultValue": "StandardSSD_LRS",
                    "allowedValues": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_ZRS",
                      "UltraSSD_LRS"
                    ],
                    "metadata": {
                      "description": "Type of storage for the managed disks. Visit \u0027https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes\u0027 for more information"
                    }
                  },
                  "_artifactsLocation": {
                    "type": "string",
                    "defaultValue": "https://github.com/Azure/azure-devtestlab/raw/master/Environments/SharePoint-SingleFarm-FullConfig",
                    "metadata": {
                      "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
                    }
                  },
                  "_artifactsLocationSasToken": {
                    "type": "securestring",
                    "defaultValue": "",
                    "metadata": {
                      "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
                    }
                  }
                },
                "variables": {
                  "resourceGroupNameFormatted": "[replace(replace(replace(replace(resourceGroup().name, \u0027.\u0027, \u0027-\u0027), \u0027(\u0027, \u0027-\u0027), \u0027)\u0027, \u0027-\u0027), \u0027_\u0027, \u0027-\u0027)]",
                  "_artifactsLocationWithTrailingSlash": "[concat(parameters(\u0027_artifactsLocation\u0027), \u0027/\u0027)]",
                  "sharePointSettings": {
                    "isSharePointSubscription": "[if(startsWith(parameters(\u0027sharePointVersion\u0027), \u0027subscription\u0027), true(), false())]",
                    "sharePointImagesList": {
                      "Subscription": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest",
                      "sp2019": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2019gen2smalldisk:latest",
                      "sp2016": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2016:latest",
                      "sp2013": "MicrosoftSharePoint:MicrosoftSharePointServer:sp2013:latest"
                    },
                    "sharePointSubscriptionBits": [
                      {
                        "Label": "RTM",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5f8a7e-462b-41ff-a5b2-04bdf5821ceb/OfficeServer.iso",
                            "ChecksumType": "SHA256",
                            "Checksum": "C576B847C573234B68FC602A0318F5794D7A61D8149EB6AE537AF04470B7FC05"
                          }
                        ]
                      },
                      {
                        "Label": "22H2",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/8/d/f/8dfcb515-6e49-42e5-b20f-5ebdfd19d8e7/wssloc-subscription-kb5002270-fullfile-x64-glb.exe",
                            "ChecksumType": "SHA256",
                            "Checksum": "7E496530EB873146650A9E0653DE835CB2CAD9AF8D154CBD7387BB0F2297C9FC"
                          },
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/3/f/5/3f5b1ee0-3336-45d7-b2f4-1e6af977d574/sts-subscription-kb5002271-fullfile-x64-glb.exe",
                            "ChecksumType": "SHA256",
                            "Checksum": "247011443AC573D4F03B1622065A7350B8B3DAE04D6A5A6DC64C8270A3BE7636"
                          }
                        ]
                      },
                      {
                        "Label": "23H1",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/c/6/a/c6a17105-3d86-42ad-888d-49b22383bfa1/uber-subscription-kb5002355-fullfile-x64-glb.exe"
                          }
                        ]
                      },
                      {
                        "Label": "23H2",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/f/5/5/f5559e3f-8b24-419f-b238-b09cf986e927/uber-subscription-kb5002474-fullfile-x64-glb.exe"
                          }
                        ]
                      },
                      {
                        "Label": "Latest",
                        "Packages": [
                          {
                            "DownloadUrl": "https://download.microsoft.com/download/c/4/9/c492d312-f267-4ead-bfea-5aaad0f817b6/uber-subscription-kb5002506-fullfile-x64-glb.exe"
                          }
                        ]
                      }
                    ]
                  },
                  "networkSettings": {
                    "vNetPrivatePrefix": "10.1.0.0/16",
                    "subnetDCPrefix": "10.1.1.0/24",
                    "dcPrivateIPAddress": "10.1.1.4",
                    "subnetSQLPrefix": "10.1.2.0/24",
                    "subnetSPPrefix": "10.1.3.0/24",
                    "vNetPrivateName": "[concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-vnet\u0027)]",
                    "subnetDCName": "Subnet-DC",
                    "subnetSQLName": "Subnet-SQL",
                    "subnetSPName": "Subnet-SP",
                    "nsgSubnetDCName": "NSG-Subnet-DC",
                    "nsgSubnetSQLName": "NSG-Subnet-SQL",
                    "nsgSubnetSPName": "NSG-Subnet-SP",
                    "vmDCPublicIPNicAssociation": {
                      "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCPublicIPName)]"
                    },
                    "vmSQLPublicIPNicAssociation": {
                      "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLPublicIPName)]"
                    },
                    "vmSPPublicIPNicAssociation": {
                      "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPPublicIPName)]"
                    },
                    "nsgRuleAllowIncomingRdp": [
                      {
                        "name": "allow-rdp-rule",
                        "properties": {
                          "description": "Allow RDP",
                          "protocol": "Tcp",
                          "sourcePortRange": "*",
                          "destinationPortRange": "3389",
                          "sourceAddressPrefix": "[parameters(\u0027RDPTrafficAllowed\u0027)]",
                          "destinationAddressPrefix": "*",
                          "access": "Allow",
                          "priority": 110,
                          "direction": "Inbound"
                        }
                      }
                    ]
                  },
                  "vmsSettings": {
                    "vmDCName": "DC",
                    "vmSQLName": "SQL",
                    "vmSPName": "SP",
                    "vmFEName": "FE",
                    "vmDCImage": "MicrosoftWindowsServer:WindowsServer:2022-datacenter-azure-edition-smalldisk:latest",
                    "vmSQLImage": "[if(equals(parameters(\u0027sharePointVersion\u0027), \u00272013\u0027), \u0027MicrosoftSQLServer:sql2014sp3-ws2012r2:sqldev:latest\u0027, \u0027MicrosoftSQLServer:sql2022-ws2022:sqldev-gen2:latest\u0027)]",
                    "vmSharePointImage": "[if(variables(\u0027sharePointSettings\u0027).isSharePointSubscription, variables(\u0027sharePointSettings\u0027).sharePointImagesList.Subscription, if(equals(parameters(\u0027sharePointVersion\u0027), \u00272019\u0027), variables(\u0027sharePointSettings\u0027).sharePointImagesList.sp2019, if(equals(parameters(\u0027sharePointVersion\u0027), \u00272016\u0027), variables(\u0027sharePointSettings\u0027).sharePointImagesList.sp2016,  variables(\u0027sharePointSettings\u0027).sharePointImagesList.sp2013)))]"
                  },
                  "vmsResourcesNames": {
                    "vmDCNicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmDCName, \u0027-0\u0027)]",
                    "vmDCPublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmDCName)]",
                    "vmSQLNicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmSQLName, \u0027-0\u0027)]",
                    "vmSQLPublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmSQLName)]",
                    "vmSPNicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmSPName, \u0027-0\u0027)]",
                    "vmSPPublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmSPName)]",
                    "vmFENicName": "[concat(\u0027NIC-\u0027, variables(\u0027vmsSettings\u0027).vmFEName, \u0027-0\u0027)]",
                    "vmFEPublicIPName": "[concat(\u0027PublicIP-\u0027, variables(\u0027vmsSettings\u0027).vmFEName)]"
                  },
                  "dscSettings": {
                    "forceUpdateTag": "1.0",
                    "vmDCScriptFileUri": "[uri(variables(\u0027_artifactsLocationWithTrailingSlash\u0027), concat(\u0027dsc/ConfigureDCVM.zip\u0027, parameters(\u0027_artifactsLocationSasToken\u0027)))]",
                    "vmDCScript": "ConfigureDCVM.ps1",
                    "vmDCFunction": "ConfigureDCVM",
                    "vmSQLScriptFileUri": "[uri(variables(\u0027_artifactsLocationWithTrailingSlash\u0027), concat(\u0027dsc/ConfigureSQLVM.zip\u0027, parameters(\u0027_artifactsLocationSasToken\u0027)))]",
                    "vmSQLScript": "ConfigureSQLVM.ps1",
                    "vmSQLFunction": "ConfigureSQLVM",
                    "vmSPScriptFileUri": "[uri(variables(\u0027_artifactsLocationWithTrailingSlash\u0027), concat(if(variables(\u0027sharePointSettings\u0027).isSharePointSubscription, \u0027dsc/ConfigureSPSE.zip\u0027, \u0027dsc/ConfigureSPLegacy.zip\u0027), parameters(\u0027_artifactsLocationSasToken\u0027)))]",
                    "vmSPScript": "[if(variables(\u0027sharePointSettings\u0027).isSharePointSubscription, \u0027ConfigureSPSE.ps1\u0027, \u0027ConfigureSPLegacy.ps1\u0027)]",
                    "vmSPFunction": "ConfigureSPVM",
                    "vmFEScriptFileUri": "[uri(variables(\u0027_artifactsLocationWithTrailingSlash\u0027), concat(if(variables(\u0027sharePointSettings\u0027).isSharePointSubscription, \u0027dsc/ConfigureFESE.zip\u0027, \u0027dsc/ConfigureFELegacy.zip\u0027), parameters(\u0027_artifactsLocationSasToken\u0027)))]",
                    "vmFEScript": "[if(variables(\u0027sharePointSettings\u0027).isSharePointSubscription, \u0027ConfigureFESE.ps1\u0027, \u0027ConfigureFELegacy.ps1\u0027)]",
                    "vmFEFunction": "ConfigureFEVM"
                  },
                  "deploymentSettings": {
                    "sharePointSitesAuthority": "spsites",
                    "sharePointCentralAdminPort": 5000,
                    "sharePointBitsSelected": "[if(variables(\u0027sharePointSettings\u0027).isSharePointSubscription, variables(\u0027sharePointSettings\u0027).sharePointSubscriptionBits, \u0027fake\u0027)]",
                    "localAdminUserName": "[concat(\u0027l-\u0027, uniqueString(subscription().subscriptionId))]",
                    "enableAnalysis": false,
                    "applyBrowserPolicies": true,
                    "sqlAlias": "SQLAlias",
                    "spSuperUserName": "spSuperUser",
                    "spSuperReaderName": "spSuperReader",
                    "adfsSvcUserName": "adfssvc",
                    "sqlSvcUserName": "sqlsvc",
                    "spSetupUserName": "spsetup",
                    "spFarmUserName": "spfarm",
                    "spSvcUserName": "spsvc",
                    "spAppPoolUserName": "spapppool",
                    "spADDirSyncUserName": "spdirsync"
                  }
                },
                "resources": [
                  {
                    "name": "[variables(\u0027networkSettings\u0027).nsgSubnetDCName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters(\u0027RDPTrafficAllowed\u0027)), \u0027no\u0027), json(\u0027null\u0027), variables(\u0027networkSettings\u0027).nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables(\u0027networkSettings\u0027).nsgSubnetSQLName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters(\u0027RDPTrafficAllowed\u0027)), \u0027no\u0027), json(\u0027null\u0027), variables(\u0027networkSettings\u0027).nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables(\u0027networkSettings\u0027).nsgSubnetSPName]",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "properties": {
                      "securityRules": "[if(equals(toLower(parameters(\u0027RDPTrafficAllowed\u0027)), \u0027no\u0027), json(\u0027null\u0027), variables(\u0027networkSettings\u0027).nsgRuleAllowIncomingRdp)]"
                    }
                  },
                  {
                    "name": "[variables(\u0027networkSettings\u0027).vNetPrivateName]",
                    "type": "Microsoft.Network/virtualNetworks",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetDCName)]",
                      "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetSQLName)]",
                      "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetSPName)]"
                    ],
                    "properties": {
                      "addressSpace": {
                        "addressPrefixes": [
                          "[variables(\u0027networkSettings\u0027).vNetPrivatePrefix]"
                        ]
                      },
                      "subnets": [
                        {
                          "name": "[variables(\u0027networkSettings\u0027).subnetDCName]",
                          "properties": {
                            "addressPrefix": "[variables(\u0027networkSettings\u0027).subnetDCPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetDCName)]"
                            }
                          }
                        },
                        {
                          "name": "[variables(\u0027networkSettings\u0027).subnetSQLName]",
                          "properties": {
                            "addressPrefix": "[variables(\u0027networkSettings\u0027).subnetSQLPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetSQLName)]"
                            }
                          }
                        },
                        {
                          "name": "[variables(\u0027networkSettings\u0027).subnetSPName]",
                          "properties": {
                            "addressPrefix": "[variables(\u0027networkSettings\u0027).subnetSPPrefix]",
                            "networkSecurityGroup": {
                              "id": "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, variables(\u0027networkSettings\u0027).nsgSubnetSPName)]"
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027)]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmDCPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmDCName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmDCNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetDCName)]"
                            },
                            "publicIPAddress": "[if(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), variables(\u0027networkSettings\u0027).vmDCPublicIPNicAssociation, json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmDCSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                        "adminUsername": "[parameters(\u0027adminUserName\u0027)]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmDCImage, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmDCImage, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmDCImage, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmDCImage, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmDCName, \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "diskSizeGB": 32,
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmDCStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": [
                      {
                        "name": "ConfigureDCVM",
                        "type": "extensions",
                        "location": "[parameters(\u0027location\u0027)]",
                        "apiVersion": "2022-08-01",
                        "dependsOn": [
                          "[resourceId(\u0027Microsoft.Compute/virtualMachines\u0027, variables(\u0027vmsSettings\u0027).vmDCName)]"
                        ],
                        "properties": {
                          "publisher": "Microsoft.Powershell",
                          "type": "DSC",
                          "typeHandlerVersion": "2.9",
                          "autoUpgradeMinorVersion": true,
                          "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                          "settings": {
                            "wmfVersion": "latest",
                            "configuration": {
                              "url": "[variables(\u0027dscSettings\u0027).vmDCScriptFileUri]",
                              "script": "[variables(\u0027dscSettings\u0027).vmDCScript]",
                              "function": "[variables(\u0027dscSettings\u0027).vmDCFunction]"
                            },
                            "configurationArguments": {
                              "domainFQDN": "[parameters(\u0027domainFQDN\u0027)]",
                              "PrivateIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                              "SPServerName": "[variables(\u0027vmsSettings\u0027).vmSPName]",
                              "SharePointSitesAuthority": "[variables(\u0027deploymentSettings\u0027).sharePointSitesAuthority]",
                              "SharePointCentralAdminPort": "[variables(\u0027deploymentSettings\u0027).sharePointCentralAdminPort]",
                              "ApplyBrowserPolicies": "[variables(\u0027deploymentSettings\u0027).applyBrowserPolicies]"
                            },
                            "privacy": {
                              "dataCollection": "enable"
                            }
                          },
                          "protectedSettings": {
                            "configurationArguments": {
                              "AdminCreds": {
                                "UserName": "[parameters(\u0027adminUserName\u0027)]",
                                "Password": "[parameters(\u0027adminPassword\u0027)]"
                              },
                              "AdfsSvcCreds": {
                                "UserName": "[variables(\u0027deploymentSettings\u0027).adfsSvcUserName]",
                                "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "condition": "[equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027)]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSQLPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmSQLName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSQLNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetSQLName)]"
                            },
                            "publicIPAddress": "[if(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), variables(\u0027networkSettings\u0027).vmSQLPublicIPNicAssociation, json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmSQLSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                        "adminUsername": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmSQLImage, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmSQLImage, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmSQLImage, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmSQLImage, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmSQLName, \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "diskSizeGB": 128,
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmSQLStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027))]",
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSPPublicIPName]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmSPName))]"
                      }
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsResourcesNames\u0027).vmSPNicName]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPPublicIPName)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)), variables(\u0027networkSettings\u0027).vmSPPublicIPNicAssociation, json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables(\u0027vmsSettings\u0027).vmSPName]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPNicName)]"
                    ],
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmSPSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[variables(\u0027vmsSettings\u0027).vmSPName]",
                        "adminUsername": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmSharePointImage, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmSharePointImage, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmSharePointImage, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmSharePointImage, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmSPName, \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmSPStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPNicName)]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": []
                  },
                  {
                    "name": "[concat(variables(\u0027vmsSettings\u0027).vmSQLName,\u0027/ConfigureSQLVM\u0027)]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "location": "[parameters(\u0027location\u0027)]",
                    "apiVersion": "2022-08-01",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Compute/virtualMachines\u0027, variables(\u0027vmsSettings\u0027).vmSQLName)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables(\u0027dscSettings\u0027).vmSQLScriptFileUri]",
                          "script": "[variables(\u0027dscSettings\u0027).vmSQLScript]",
                          "function": "[variables(\u0027dscSettings\u0027).vmSQLFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters(\u0027domainFQDN\u0027)]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters(\u0027adminUserName\u0027)]",
                            "Password": "[parameters(\u0027adminPassword\u0027)]"
                          },
                          "SqlSvcCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).sqlSvcUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSetupUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "name": "[concat(variables(\u0027vmsSettings\u0027).vmSPName,\u0027/ConfigureSPVM\u0027)]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "location": "[parameters(\u0027location\u0027)]",
                    "apiVersion": "2022-08-01",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Compute/virtualMachines\u0027, variables(\u0027vmsSettings\u0027).vmSPName)]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables(\u0027dscSettings\u0027).vmSPScriptFileUri]",
                          "script": "[variables(\u0027dscSettings\u0027).vmSPScript]",
                          "function": "[variables(\u0027dscSettings\u0027).vmSPFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters(\u0027domainFQDN\u0027)]",
                          "DCServerName": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                          "SQLServerName": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                          "SQLAlias": "[variables(\u0027deploymentSettings\u0027).sqlAlias]",
                          "SharePointVersion": "[parameters(\u0027sharePointVersion\u0027)]",
                          "SharePointSitesAuthority": "[variables(\u0027deploymentSettings\u0027).sharePointSitesAuthority]",
                          "SharePointCentralAdminPort": "[variables(\u0027deploymentSettings\u0027).sharePointCentralAdminPort]",
                          "EnableAnalysis": "[variables(\u0027deploymentSettings\u0027).enableAnalysis]",
                          "SharePointBits": "[variables(\u0027deploymentSettings\u0027).sharePointBitsSelected]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters(\u0027adminUserName\u0027)]",
                            "Password": "[parameters(\u0027adminPassword\u0027)]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSetupUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spFarmUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPSvcCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSvcUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPAppPoolCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spAppPoolUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPADDirSyncCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spADDirSyncUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPSuperUserCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSuperUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPSuperReaderCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSuperReaderName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[and(greaterOrEquals(parameters(\u0027numberOfAdditionalFrontEnd\u0027), 1), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "name": "[concat(variables(\u0027vmsResourcesNames\u0027).vmFEPublicIPName, \u0027-\u0027, copyIndex())]",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "copy": {
                      "name": "frontendPublicIPAddresses",
                      "count": "[parameters(\u0027numberOfAdditionalFrontEnd\u0027)]"
                    },
                    "sku": {
                      "name": "Basic",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Dynamic",
                      "dnsSettings": {
                        "domainNameLabel": "[concat(toLower(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, variables(\u0027vmsSettings\u0027).vmFEName)), \u0027-\u0027, copyIndex())]"
                      }
                    }
                  },
                  {
                    "condition": "[greaterOrEquals(parameters(\u0027numberOfAdditionalFrontEnd\u0027), 1)]",
                    "name": "[concat(variables(\u0027vmsResourcesNames\u0027).vmFENicName, \u0027-\u0027, copyIndex())]",
                    "type": "Microsoft.Network/networkInterfaces",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "frontendPublicIPAddresses"
                    ],
                    "copy": {
                      "name": "frontendNetworkInterfaces",
                      "count": "[parameters(\u0027numberOfAdditionalFrontEnd\u0027)]"
                    },
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, variables(\u0027networkSettings\u0027).subnetSPName)]"
                            },
                            "publicIPAddress": "[if(or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)), json(concat(\u0027{\u0022id\u0022: \u0022\u0027, resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, concat(variables(\u0027vmsResourcesNames\u0027).vmFEPublicIPName, \u0027-\u0027, copyIndex())), \u0027\u0022 }\u0027)), json(\u0027null\u0027))]"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[greaterOrEquals(parameters(\u0027numberOfAdditionalFrontEnd\u0027), 1)]",
                    "name": "[concat(variables(\u0027vmsSettings\u0027).vmFEName, \u0027-\u0027, copyIndex())]",
                    "type": "Microsoft.Compute/virtualMachines",
                    "apiVersion": "2022-08-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "frontendNetworkInterfaces"
                    ],
                    "copy": {
                      "name": "frontendVirtualMachines",
                      "count": "[parameters(\u0027numberOfAdditionalFrontEnd\u0027)]"
                    },
                    "properties": {
                      "hardwareProfile": {
                        "vmSize": "[parameters(\u0027vmSPSize\u0027)]"
                      },
                      "osProfile": {
                        "computerName": "[concat(variables(\u0027vmsSettings\u0027).vmFEName, \u0027-\u0027, copyIndex())]",
                        "adminUsername": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]",
                        "adminPassword": "[parameters(\u0027adminPassword\u0027)]",
                        "windowsConfiguration": {
                          "timeZone": "[parameters(\u0027vmsTimeZone\u0027)]",
                          "enableAutomaticUpdates": "[parameters(\u0027enableAutomaticUpdates\u0027)]",
                          "provisionVMAgent": true,
                          "patchSettings": {
                            "patchMode": "[if(parameters(\u0027enableAutomaticUpdates\u0027), \u0027AutomaticByOS\u0027, \u0027Manual\u0027)]",
                            "assessmentMode": "ImageDefault"
                          }
                        }
                      },
                      "storageProfile": {
                        "imageReference": {
                          "publisher": "[split(variables(\u0027vmsSettings\u0027).vmSharePointImage, \u0027:\u0027)[0]]",
                          "offer": "[split(variables(\u0027vmsSettings\u0027).vmSharePointImage, \u0027:\u0027)[1]]",
                          "sku": "[split(variables(\u0027vmsSettings\u0027).vmSharePointImage, \u0027:\u0027)[2]]",
                          "version": "[split(variables(\u0027vmsSettings\u0027).vmSharePointImage, \u0027:\u0027)[3]]"
                        },
                        "osDisk": {
                          "name": "[concat(\u0027Disk-\u0027, variables(\u0027vmsSettings\u0027).vmFEName, \u0027-\u0027, copyIndex(), \u0027-OS\u0027)]",
                          "caching": "ReadWrite",
                          "osType": "Windows",
                          "createOption": "FromImage",
                          "managedDisk": {
                            "storageAccountType": "[parameters(\u0027vmSPStorageAccountType\u0027)]"
                          }
                        }
                      },
                      "networkProfile": {
                        "networkInterfaces": [
                          {
                            "id": "[resourceId(\u0027Microsoft.Network/networkInterfaces\u0027, concat(variables(\u0027vmsResourcesNames\u0027).vmFENicName, \u0027-\u0027, copyIndex()))]"
                          }
                        ]
                      },
                      "licenseType": "[if(parameters(\u0027enableHybridBenefitServerLicenses\u0027), \u0027Windows_Server\u0027, json(\u0027null\u0027))]"
                    },
                    "resources": []
                  },
                  {
                    "condition": "[greaterOrEquals(parameters(\u0027numberOfAdditionalFrontEnd\u0027), 1)]",
                    "name": "[concat(variables(\u0027vmsSettings\u0027).vmFEName, \u0027-\u0027, copyIndex(),\u0027/ConfigureFEVM\u0027)]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "location": "[parameters(\u0027location\u0027)]",
                    "apiVersion": "2022-08-01",
                    "dependsOn": [
                      "frontendVirtualMachines"
                    ],
                    "copy": {
                      "name": "frontendVirtualMachineExtensions",
                      "count": "[parameters(\u0027numberOfAdditionalFrontEnd\u0027)]"
                    },
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.9",
                      "autoUpgradeMinorVersion": true,
                      "forceUpdateTag": "[variables(\u0027dscSettings\u0027).forceUpdateTag]",
                      "settings": {
                        "wmfVersion": "latest",
                        "configuration": {
                          "url": "[variables(\u0027dscSettings\u0027).vmFEScriptFileUri]",
                          "script": "[variables(\u0027dscSettings\u0027).vmFEScript]",
                          "function": "[variables(\u0027dscSettings\u0027).vmFEFunction]"
                        },
                        "configurationArguments": {
                          "DNSServerIP": "[variables(\u0027networkSettings\u0027).dcPrivateIPAddress]",
                          "DomainFQDN": "[parameters(\u0027domainFQDN\u0027)]",
                          "DCServerName": "[variables(\u0027vmsSettings\u0027).vmDCName]",
                          "SQLServerName": "[variables(\u0027vmsSettings\u0027).vmSQLName]",
                          "SQLAlias": "[variables(\u0027deploymentSettings\u0027).sqlAlias]",
                          "SharePointVersion": "[parameters(\u0027sharePointVersion\u0027)]",
                          "SharePointSitesAuthority": "[variables(\u0027deploymentSettings\u0027).sharePointSitesAuthority]",
                          "EnableAnalysis": "[variables(\u0027deploymentSettings\u0027).enableAnalysis]",
                          "SharePointBits": "[variables(\u0027deploymentSettings\u0027).sharePointBitsSelected]"
                        },
                        "privacy": {
                          "dataCollection": "enable"
                        }
                      },
                      "protectedSettings": {
                        "configurationArguments": {
                          "DomainAdminCreds": {
                            "UserName": "[parameters(\u0027adminUserName\u0027)]",
                            "Password": "[parameters(\u0027adminPassword\u0027)]"
                          },
                          "SPSetupCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spSetupUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPFarmCreds": {
                            "UserName": "[variables(\u0027deploymentSettings\u0027).spFarmUserName]",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          },
                          "SPPassphraseCreds": {
                            "UserName": "Passphrase",
                            "Password": "[parameters(\u0027serviceAccountsPassword\u0027)]"
                          }
                        }
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addAzureBastion\u0027), true())]",
                    "name": "NSG-Subnet-AzureBastion",
                    "type": "Microsoft.Network/networkSecurityGroups",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "properties": {
                      "securityRules": [
                        {
                          "name": "AllowHttpsInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowGatewayManagerInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowLoadBalancerInBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowBastionHostCommunicationInBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                              "8080",
                              "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "DenyAllInBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                          }
                        },
                        {
                          "name": "AllowSshRdpOutBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                              "22",
                              "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowAzureCloudCommunicationOutBound",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowBastionHostCommunicationOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                              "8080",
                              "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "AllowGetSessionInformationOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "destinationPortRanges": [
                              "80",
                              "443"
                            ],
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                          }
                        },
                        {
                          "name": "DenyAllOutBound",
                          "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addAzureBastion\u0027), true())]",
                    "name": "[concat(variables(\u0027networkSettings\u0027).vNetPrivateName, \u0027/\u0027, \u0027AzureBastionSubnet\u0027)]",
                    "type": "Microsoft.Network/virtualNetworks/subnets",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName)]",
                      "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, \u0027NSG-Subnet-AzureBastion\u0027)]"
                    ],
                    "properties": {
                      "addressPrefix": "10.1.4.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId(\u0027Microsoft.Network/networkSecurityGroups\u0027, \u0027NSG-Subnet-AzureBastion\u0027)]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addAzureBastion\u0027), true())]",
                    "name": "PublicIP-Bastion",
                    "type": "Microsoft.Network/publicIPAddresses",
                    "apiVersion": "2022-07-01",
                    "location": "[parameters(\u0027location\u0027)]",
                    "sku": {
                      "name": "Standard",
                      "tier": "Regional"
                    },
                    "properties": {
                      "publicIPAllocationMethod": "Static",
                      "dnsSettings": {
                        "domainNameLabel": "[toLower(replace(concat(variables(\u0027resourceGroupNameFormatted\u0027), \u0027-\u0027, \u0027Bastion\u0027), \u0027_\u0027, \u0027-\u0027))]"
                      }
                    }
                  },
                  {
                    "condition": "[equals(parameters(\u0027addAzureBastion\u0027), true())]",
                    "name": "Bastion",
                    "type": "Microsoft.Network/bastionHosts",
                    "location": "[parameters(\u0027location\u0027)]",
                    "apiVersion": "2022-07-01",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, \u0027PublicIP-Bastion\u0027)]",
                      "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, \u0027AzureBastionSubnet\u0027)]"
                    ],
                    "properties": {
                      "ipConfigurations": [
                        {
                          "name": "IpConf",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                              "id": "[resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, \u0027PublicIP-Bastion\u0027)]"
                            },
                            "subnet": {
                              "id": "[resourceId(\u0027Microsoft.Network/virtualNetworks/subnets\u0027, variables(\u0027networkSettings\u0027).vNetPrivateName, \u0027AzureBastionSubnet\u0027)]"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "outputs": {
                  "publicIPAddressSP": {
                    "condition": "[or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027))]",
                    "type": "string",
                    "value": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSPPublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressFEs": {
                    "condition": "[and(greaterOrEquals(parameters(\u0027numberOfAdditionalFrontEnd\u0027), 1), or(equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027), equals(parameters(\u0027addPublicIPAddress\u0027), \u0027SharePointVMsOnly\u0027)))]",
                    "type": "array",
                    "copy": {
                      "count": "[parameters(\u0027numberOfAdditionalFrontEnd\u0027)]",
                      "input": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, concat(variables(\u0027vmsResourcesNames\u0027).vmFEPublicIPName, \u0027-\u0027, copyIndex()))).dnsSettings.fqdn]"
                    }
                  },
                  "publicIPAddressSQL": {
                    "condition": "[equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027)]",
                    "type": "string",
                    "value": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmSQLPublicIPName)).dnsSettings.fqdn]"
                  },
                  "publicIPAddressDC": {
                    "condition": "[equals(parameters(\u0027addPublicIPAddress\u0027), \u0027Yes\u0027)]",
                    "type": "string",
                    "value": "[reference(resourceId(\u0027Microsoft.Network/publicIPAddresses\u0027, variables(\u0027vmsResourcesNames\u0027).vmDCPublicIPName)).dnsSettings.fqdn]"
                  },
                  "domainAdminAccount": {
                    "type": "string",
                    "value": "[concat(substring(parameters(\u0027domainFQDN\u0027), 0, indexOf(parameters(\u0027domainFQDN\u0027), \u0027.\u0027)), \u0027\\\u0027, parameters(\u0027adminUserName\u0027))]"
                  },
                  "domainAdminAccountFormatForBastion": {
                    "type": "string",
                    "value": "[concat(parameters(\u0027adminUserName\u0027), \u0027@\u0027, parameters(\u0027domainFQDN\u0027))]"
                  },
                  "localAdminAccount": {
                    "type": "string",
                    "value": "[variables(\u0027deploymentSettings\u0027).localAdminUserName]"
                  }
                }
              },
              "parametersValueFilesInfo": [
                {
                  "fileName": "azuredeploy.parameters.json",
                  "parametersValueInfo": {}
                }
              ],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactSources/public environment repo/armTemplates/SharePoint-SingleFarm-FullConfig",
            "name": "SharePoint-SingleFarm-FullConfig",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "Web App with MySQL",
              "description": "This template creates an Azure Web App with MySQL",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "Database Administrator Login": {
                    "type": "string",
                    "metadata": {
                      "description": "Database administrator login name"
                    }
                  },
                  "Database Administrator Login Password": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Database administrator password"
                    }
                  }
                },
                "variables": {
                  "resourceNamePrefix": "[take(uniqueString(resourceGroup().id), 3)]",
                  "hostingPlanName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6), \u0027-sp\u0027))]",
                  "siteName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6)))]",
                  "serverName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6), \u0027-db\u0027))]",
                  "databaseName": "[concat(\u0027db\u0027, uniqueString(resourceGroup().id, variables(\u0027siteName\u0027)))]",
                  "databaseVersion": "5.7",
                  "databaseDTU": 2,
                  "databaseSkuName": "B_Gen5_2",
                  "databaseSkuSizeMB": 51200,
                  "databaseSkuTier": "Basic",
                  "databaseSkuFamily": "Gen5"
                },
                "resources": [
                  {
                    "name": "[variables(\u0027hostingPlanName\u0027)]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2016-09-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "name": "[variables(\u0027hostingPlanName\u0027)]",
                      "workerSize": "1",
                      "hostingEnvironment": "",
                      "numberOfWorkers": 0
                    },
                    "sku": {
                      "Tier": "Standard",
                      "Name": "S1"
                    }
                  },
                  {
                    "name": "[variables(\u0027siteName\u0027)]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2015-02-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[concat(\u0027Microsoft.Web/serverfarms/\u0027, variables(\u0027hostingPlanName\u0027))]"
                    ],
                    "properties": {
                      "name": "[variables(\u0027siteName\u0027)]",
                      "serverFarmId": "[variables(\u0027hostingPlanName\u0027)]",
                      "hostingEnvironment": ""
                    }
                  },
                  {
                    "name": "[concat(variables(\u0027siteName\u0027), \u0027/connectionstrings\u0027)]",
                    "type": "Microsoft.Web/sites/config",
                    "apiVersion": "2015-04-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.DBforMySQL/servers\u0027, variables(\u0027serverName\u0027))]"
                    ],
                    "properties": {
                      "defaultConnection": {
                        "value": "[concat(\u0027Database=\u0027, variables(\u0027databaseName\u0027), \u0027;Data Source=\u0027, variables(\u0027serverName\u0027), \u0027.mysql.database.azure.com;User Id=\u0027, parameters(\u0027Database Administrator Login\u0027),\u0027@\u0027, variables(\u0027serverName\u0027),\u0027;Password=\u0027, parameters(\u0027Database Administrator Login Password\u0027))]",
                        "type": "MySQL"
                      }
                    }
                  },
                  {
                    "name": "[variables(\u0027serverName\u0027)]",
                    "type": "Microsoft.DBforMySQL/servers",
                    "apiVersion": "2017-12-01-preview",
                    "location": "[resourceGroup().location]",
                    "kind": "",
                    "properties": {
                      "version": "[variables(\u0027databaseVersion\u0027)]",
                      "administratorLogin": "[parameters(\u0027Database Administrator Login\u0027)]",
                      "administratorLoginPassword": "[parameters(\u0027Database Administrator Login Password\u0027)]",
                      "storageMB": "[variables(\u0027databaseSkuSizeMB\u0027)]"
                    },
                    "sku": {
                      "name": "[variables(\u0027databaseSkuName\u0027)]",
                      "tier": "[variables(\u0027databaseSkuTier\u0027)]",
                      "capacity": "[variables(\u0027databaseDTU\u0027)]",
                      "size": "[variables(\u0027databaseSkuSizeMB\u0027)]",
                      "family": "[variables(\u0027databaseSkuFamily\u0027)]"
                    },
                    "resources": [
                      {
                        "name": "[concat(variables(\u0027serverName\u0027),\u0027-firewall\u0027)]",
                        "type": "firewallrules",
                        "apiVersion": "2017-12-01-preview",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[concat(\u0027Microsoft.DBforMySQL/servers/\u0027, variables(\u0027serverName\u0027), \u0027/databases/\u0027 , variables(\u0027databaseName\u0027))]",
                          "[concat(\u0027Microsoft.DBforMySQL/servers/\u0027, variables(\u0027serverName\u0027))]"
                        ],
                        "properties": {
                          "startIpAddress": "0.0.0.0",
                          "endIpAddress": "255.255.255.255"
                        }
                      },
                      {
                        "name": "[variables(\u0027databaseName\u0027)]",
                        "type": "databases",
                        "apiVersion": "2017-12-01-preview",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[concat(\u0027Microsoft.DBforMySQL/servers/\u0027, variables(\u0027serverName\u0027))]"
                        ],
                        "properties": {
                          "charset": "utf8",
                          "collation": "utf8_general_ci"
                        }
                      }
                    ]
                  }
                ]
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactSources/public environment repo/armTemplates/WebApp-MySQL",
            "name": "WebApp-MySQL",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "Web App with PostgreSQL",
              "description": "This template creates an Azure Web App with PostgreSQL.  WARNING PostgreSQL WILL NEED TO BE ENABLED IN YOUR SUBSCRIPTION.",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "Database Administrator Login": {
                    "type": "string",
                    "metadata": {
                      "description": "Database administrator login name"
                    }
                  },
                  "Database Administrator Login Password": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Database administrator password"
                    }
                  }
                },
                "variables": {
                  "resourceNamePrefix": "[take(uniqueString(resourceGroup().id), 3)]",
                  "hostingPlanName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6), \u0027-sp\u0027))]",
                  "siteName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6)))]",
                  "serverName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6), \u0027-db\u0027))]",
                  "databaseName": "[concat(\u0027db\u0027, uniqueString(resourceGroup().id, variables(\u0027siteName\u0027)))]",
                  "databaseVersion": "9.6",
                  "databaseDTU": 2,
                  "databaseSkuName": "GP_Gen5_2",
                  "databaseSkuSizeMB": 51200,
                  "databaseSkuTier": "GeneralPurpose"
                },
                "resources": [
                  {
                    "name": "[variables(\u0027hostingPlanName\u0027)]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2016-09-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "name": "[variables(\u0027hostingPlanName\u0027)]",
                      "workerSize": "1",
                      "hostingEnvironment": "",
                      "numberOfWorkers": 0
                    },
                    "sku": {
                      "Tier": "Standard",
                      "Name": "S1"
                    }
                  },
                  {
                    "name": "[variables(\u0027siteName\u0027)]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2015-02-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[concat(\u0027Microsoft.Web/serverfarms/\u0027, variables(\u0027hostingPlanName\u0027))]"
                    ],
                    "properties": {
                      "name": "[variables(\u0027siteName\u0027)]",
                      "serverFarmId": "[variables(\u0027hostingPlanName\u0027)]",
                      "hostingEnvironment": ""
                    }
                  },
                  {
                    "name": "[concat(variables(\u0027siteName\u0027), \u0027/connectionstrings\u0027)]",
                    "type": "Microsoft.Web/sites/config",
                    "apiVersion": "2015-04-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[resourceId(\u0027Microsoft.DBforPostgreSQL/servers\u0027, variables(\u0027serverName\u0027))]"
                    ],
                    "properties": {
                      "defaultConnection": {
                        "value": "[concat(\u0027Database=\u0027, variables(\u0027databaseName\u0027), \u0027;Data Source=\u0027, variables(\u0027serverName\u0027), \u0027.postgresql.database.azure.com;User Id=\u0027, parameters(\u0027Database Administrator Login\u0027),\u0027@\u0027, variables(\u0027serverName\u0027),\u0027;Password=\u0027, parameters(\u0027Database Administrator Login Password\u0027))]",
                        "type": "PostgreSQL"
                      }
                    }
                  },
                  {
                    "name": "[variables(\u0027serverName\u0027)]",
                    "type": "Microsoft.DBforPostgreSQL/servers",
                    "apiVersion": "2017-12-01",
                    "location": "[resourceGroup().location]",
                    "kind": "",
                    "properties": {
                      "version": "[variables(\u0027databaseVersion\u0027)]",
                      "administratorLogin": "[parameters(\u0027Database Administrator Login\u0027)]",
                      "administratorLoginPassword": "[parameters(\u0027Database Administrator Login Password\u0027)]",
                      "storageMB": "[variables(\u0027databaseSkuSizeMB\u0027)]"
                    },
                    "sku": {
                      "name": "[variables(\u0027databaseSkuName\u0027)]",
                      "tier": "[variables(\u0027databaseSkuTier\u0027)]",
                      "capacity": "[variables(\u0027databaseDTU\u0027)]",
                      "size": "[variables(\u0027databaseSkuSizeMB\u0027)]",
                      "family": "Gen5"
                    },
                    "resources": [
                      {
                        "name": "[concat(variables(\u0027serverName\u0027),\u0027-firewall\u0027)]",
                        "type": "firewallrules",
                        "apiVersion": "2017-12-01",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[concat(\u0027Microsoft.DBforPostgreSQL/servers/\u0027, variables(\u0027serverName\u0027))]"
                        ],
                        "properties": {
                          "startIpAddress": "0.0.0.0",
                          "endIpAddress": "255.255.255.255"
                        }
                      },
                      {
                        "name": "[variables(\u0027databaseName\u0027)]",
                        "type": "databases",
                        "apiVersion": "2017-12-01",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[concat(\u0027Microsoft.DBforPostgreSQL/servers/\u0027, variables(\u0027serverName\u0027))]"
                        ],
                        "properties": {
                          "charset": "utf8",
                          "collation": "English_United States.1252"
                        }
                      }
                    ]
                  }
                ]
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactSources/public environment repo/armTemplates/WebApp-PostgresSQL",
            "name": "WebApp-PostgresSQL",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "Web App with SQL Database",
              "description": "This template creates an Azure Web App with Azure SQL Database.",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "Database Administrator Login": {
                    "type": "string",
                    "metadata": {
                      "description": "Database administrator login name"
                    }
                  },
                  "Database Administrator Login Password": {
                    "type": "securestring",
                    "metadata": {
                      "description": "Database administrator password"
                    }
                  }
                },
                "variables": {
                  "resourceNamePrefix": "[take(uniqueString(resourceGroup().id), 3)]",
                  "hostingPlanName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6), \u0027-sp\u0027))]",
                  "siteName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6)))]",
                  "serverName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6), \u0027-db\u0027))]",
                  "databaseName": "[concat(\u0027db\u0027, uniqueString(resourceGroup().id, variables(\u0027siteName\u0027)))]",
                  "databaseVersion": "12.0"
                },
                "resources": [
                  {
                    "name": "[variables(\u0027hostingPlanName\u0027)]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2016-09-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "name": "[variables(\u0027hostingPlanName\u0027)]",
                      "workerSize": "1",
                      "hostingEnvironment": "",
                      "numberOfWorkers": 0
                    },
                    "sku": {
                      "Tier": "Standard",
                      "Name": "S1"
                    }
                  },
                  {
                    "name": "[variables(\u0027siteName\u0027)]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2015-02-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[concat(\u0027Microsoft.Web/serverfarms/\u0027, variables(\u0027hostingPlanName\u0027))]"
                    ],
                    "properties": {
                      "name": "[variables(\u0027siteName\u0027)]",
                      "serverFarmId": "[variables(\u0027hostingPlanName\u0027)]",
                      "hostingEnvironment": ""
                    }
                  },
                  {
                    "name": "[variables(\u0027serverName\u0027)]",
                    "type": "Microsoft.Sql/servers",
                    "apiVersion": "2014-04-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "administratorLogin": "[parameters(\u0027Database Administrator Login\u0027)]",
                      "administratorLoginPassword": "[parameters(\u0027Database Administrator Login Password\u0027)]",
                      "version": "[variables(\u0027databaseVersion\u0027)]"
                    },
                    "resources": [
                      {
                        "name": "[variables(\u0027databaseName\u0027)]",
                        "type": "databases",
                        "apiVersion": "2015-01-01",
                        "location": "[resourceGroup().location]",
                        "dependsOn": [
                          "[variables(\u0027serverName\u0027)]"
                        ],
                        "properties": {
                          "edition": "Basic",
                          "collation": "SQL_Latin1_General_CP1_CI_AS",
                          "maxSizeBytes": "1073741824",
                          "requestedServiceObjectiveName": "Basic"
                        }
                      },
                      {
                        "type": "firewallrules",
                        "apiVersion": "2014-04-01",
                        "dependsOn": [
                          "[variables(\u0027serverName\u0027)]"
                        ],
                        "location": "[resourceGroup().location]",
                        "name": "AllowAllWindowsAzureIps",
                        "properties": {
                          "endIpAddress": "0.0.0.0",
                          "startIpAddress": "0.0.0.0"
                        }
                      }
                    ]
                  }
                ]
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactSources/public environment repo/armTemplates/WebApp-SQL",
            "name": "WebApp-SQL",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          },
          {
            "properties": {
              "displayName": "Web App",
              "description": "This template creates an Azure Web App without a data store.",
              "publisher": "Microsoft",
              "contents": {
                "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {},
                "variables": {
                  "resourceNamePrefix": "[take(uniqueString(resourceGroup().id), 3)]",
                  "hostingPlanName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6), \u0027-sp\u0027))]",
                  "siteName": "[toLower(concat(variables(\u0027resourceNamePrefix\u0027), \u0027-\u0027, take(uniqueString(resourceGroup().id), 6)))]"
                },
                "resources": [
                  {
                    "name": "[variables(\u0027hostingPlanName\u0027)]",
                    "type": "Microsoft.Web/serverfarms",
                    "apiVersion": "2016-09-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                      "name": "[variables(\u0027hostingPlanName\u0027)]",
                      "workerSize": "1",
                      "hostingEnvironment": "",
                      "numberOfWorkers": 0
                    },
                    "sku": {
                      "Tier": "Standard",
                      "Name": "S1"
                    }
                  },
                  {
                    "name": "[variables(\u0027siteName\u0027)]",
                    "type": "Microsoft.Web/sites",
                    "apiVersion": "2015-02-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[concat(\u0027Microsoft.Web/serverfarms/\u0027, variables(\u0027hostingPlanName\u0027))]"
                    ],
                    "properties": {
                      "name": "[variables(\u0027siteName\u0027)]",
                      "serverFarmId": "[variables(\u0027hostingPlanName\u0027)]",
                      "hostingEnvironment": ""
                    }
                  }
                ]
              },
              "parametersValueFilesInfo": [],
              "enabled": true
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactSources/public environment repo/armTemplates/WebApp",
            "name": "WebApp",
            "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactsources/public%20environment%20repo/armtemplates/ServiceFabric-LabCluster?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-427f79eb171b8a6c244dfcd674580ee3-68002e75f73c0b09-00",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231115.1 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "25da7bec78e49b1165a825b7a66b7350",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "6425",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:55:22 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "4330d89d-f42d-4dd0-a276-c083748b9ef8",
        "x-ms-ratelimit-remaining-subscription-reads": "11985",
        "x-ms-request-id": "4330d89d-f42d-4dd0-a276-c083748b9ef8",
        "x-ms-return-client-request-id": "25da7bec78e49b1165a825b7a66b7350",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175522Z:4330d89d-f42d-4dd0-a276-c083748b9ef8"
      },
      "ResponseBody": {
        "properties": {
          "displayName": "Service Fabric Lab Cluster",
          "description": "A secure 5 node, single nodetype Service fabric Cluster.",
          "publisher": "Microsoft",
          "contents": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "clusterOS": {
                "type": "string",
                "allowedValues": [
                  "Windows",
                  "Linux"
                ],
                "defaultValue": "Windows",
                "metadata": {
                  "description": "Select the cluster OS."
                }
              },
              "adminUsername": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Remote desktop user Id"
                }
              },
              "adminPassword": {
                "type": "securestring",
                "metadata": {
                  "description": "Remote desktop user password. Must be a strong password"
                }
              },
              "certificate": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Certificate as Base64 encoded string."
                }
              },
              "certificatePassword": {
                "type": "securestring",
                "metadata": {
                  "description": "Certificate password for installation."
                }
              },
              "certificateThumbprint": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Certificate thumbprint for identification in the local certificate store."
                }
              },
              "appPort1": {
                "type": "int",
                "defaultValue": 80,
                "minValue": 1,
                "metadata": {
                  "description": "Public accessible application port #1."
                }
              },
              "appPort2": {
                "type": "int",
                "defaultValue": 443,
                "minValue": 1,
                "metadata": {
                  "description": "Public accessible application port #2."
                }
              },
              "tenantId": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Tenant the cluster- and clientapplication belongs to. Required for Windows clusters."
                }
              },
              "clusterApplication": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Client id of cluster application. Required for Windows clusters."
                }
              },
              "clientApplication": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Client id of client application. Required for Windows clusters."
                }
              }
            },
            "variables": {
              "quickstartRepoRoot": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.servicefabric/",
              "clusterName": "[concat(\u0027sf-\u0027, toLower(uniqueString(resourceGroup().name)))]",
              "vaultName": "[concat(\u0027kv-\u0027, toLower(uniqueString(resourceGroup().name)))]",
              "vaultSecret": "ClusterCertificate",
              "loadBalancedAppPort1": "[parameters(\u0027appPort1\u0027)]",
              "loadBalancedAppPort2": "[parameters(\u0027appPort2\u0027)]",
              "nt0InstanceCount": 5
            },
            "resources": [
              {
                "name": "[variables(\u0027vaultName\u0027)]",
                "type": "Microsoft.KeyVault/vaults",
                "apiVersion": "2015-06-01",
                "location": "[resourceGroup().location]",
                "tags": {},
                "properties": {
                  "enabledForDeployment": true,
                  "enabledForTemplateDeployment": false,
                  "enabledForVolumeEncryption": false,
                  "tenantId": "[subscription().tenantId]",
                  "sku": {
                    "name": "standard",
                    "family": "A"
                  },
                  "accessPolicies": []
                }
              },
              {
                "name": "[concat(variables(\u0027vaultName\u0027), \u0027/\u0027, variables(\u0027vaultSecret\u0027))]",
                "type": "Microsoft.KeyVault/vaults/secrets",
                "apiVersion": "2015-06-01",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, variables(\u0027vaultName\u0027))]"
                ],
                "properties": {
                  "value": "[base64(concat(\u0027{ \u0022data\u0022:\u0022\u0027, parameters(\u0027certificate\u0027), \u0027\u0022, \u0022dataType\u0022:\u0022pfx\u0022, \u0022password\u0022:\u0022\u0027, parameters(\u0027certificatePassword\u0027), \u0027\u0022 }\u0027))]"
                }
              },
              {
                "condition": "[equals(parameters(\u0027clusterOS\u0027), \u0027Windows\u0027)]",
                "name": "[concat(deployment().name, \u0027-QuickstartTemplate-Windows\u0027)]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2015-01-01",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "templateLink": {
                    "uri": "[concat(variables(\u0027quickstartRepoRoot\u0027), \u0027service-fabric-secure-cluster-5-node-1-nodetype/azuredeploy.json\u0027)]",
                    "contentVersion": "1.0.0.0"
                  },
                  "parameters": {
                    "clusterName": {
                      "value": "[variables(\u0027clusterName\u0027)]"
                    },
                    "adminUsername": {
                      "value": "[parameters(\u0027adminUsername\u0027)]"
                    },
                    "adminPassword": {
                      "value": "[parameters(\u0027adminPassword\u0027)]"
                    },
                    "vmImagePublisher": {
                      "value": "MicrosoftWindowsServer"
                    },
                    "vmImageOffer": {
                      "value": "WindowsServer"
                    },
                    "vmImageSku": {
                      "value": "2022-datacenter"
                    },
                    "vmImageVersion": {
                      "value": "latest"
                    },
                    "loadBalancedAppPort1": {
                      "value": "[variables(\u0027loadBalancedAppPort1\u0027)]"
                    },
                    "loadBalancedAppPort2": {
                      "value": "[variables(\u0027loadBalancedAppPort2\u0027)]"
                    },
                    "certificateThumbprint": {
                      "value": "[parameters(\u0027certificateThumbprint\u0027)]"
                    },
                    "sourceVaultResourceId": {
                      "value": "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, variables(\u0027vaultName\u0027))]"
                    },
                    "certificateUrlValue": {
                      "value": "[reference(resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                      "value": "[variables(\u0027nt0InstanceCount\u0027)]"
                    },
                    "nodeDataDrive": {
                      "value": "OS"
                    },
                    "tenantId": {
                      "value": "[parameters(\u0027tenantId\u0027)]"
                    },
                    "clusterApplication": {
                      "value": "[parameters(\u0027clusterApplication\u0027)]"
                    },
                    "clientapplication": {
                      "value": "[parameters(\u0027clientApplication\u0027)]"
                    }
                  }
                }
              },
              {
                "condition": "[equals(parameters(\u0027clusterOS\u0027), \u0027Linux\u0027)]",
                "name": "[concat(deployment().name, \u0027-QuickstartTemplate-Linux\u0027)]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2015-01-01",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "templateLink": {
                    "uri": "[concat(variables(\u0027quickstartRepoRoot\u0027), \u00275-vm-ubuntu-1-nodetypes-secure/azuredeploy.json\u0027)]",
                    "contentVersion": "1.0.0.0"
                  },
                  "parameters": {
                    "clusterName": {
                      "value": "[variables(\u0027clusterName\u0027)]"
                    },
                    "adminUsername": {
                      "value": "[parameters(\u0027adminUsername\u0027)]"
                    },
                    "adminPassword": {
                      "value": "[parameters(\u0027adminPassword\u0027)]"
                    },
                    "vmImagePublisher": {
                      "value": "Canonical"
                    },
                    "vmImageOffer": {
                      "value": "UbuntuServer"
                    },
                    "vmImageSku": {
                      "value": "16.04-LTS"
                    },
                    "vmImageVersion": {
                      "value": "latest"
                    },
                    "loadBalancedAppPort1": {
                      "value": "[variables(\u0027loadBalancedAppPort1\u0027)]"
                    },
                    "loadBalancedAppPort2": {
                      "value": "[variables(\u0027loadBalancedAppPort2\u0027)]"
                    },
                    "certificateThumbprint": {
                      "value": "[parameters(\u0027certificateThumbprint\u0027)]"
                    },
                    "sourceVaultValue": {
                      "value": "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, variables(\u0027vaultName\u0027))]"
                    },
                    "certificateUrlValue": {
                      "value": "[reference(resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                      "value": "[variables(\u0027nt0InstanceCount\u0027)]"
                    },
                    "storageAccountEndPoint": {
                      "value": "[resourceGroup().location]"
                    }
                  }
                }
              }
            ],
            "outputs": {}
          },
          "parametersValueFilesInfo": [],
          "enabled": true
        },
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactSources/public environment repo/armTemplates/ServiceFabric-LabCluster",
        "name": "ServiceFabric-LabCluster",
        "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactsources/public%20environment%20repo/armtemplates/ServiceFabric-LabCluster?api-version=2018-09-15",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-7e2412c9fb298ec755ec5780a7a7cf31-3fc1187e0e5dd5a2-00",
        "User-Agent": "azsdk-net-ResourceManager.DevTestLabs/1.1.0-alpha.20231115.1 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "8cd03462a168da9957c46455ad598ca1",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "6425",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:55:23 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Request-Context": "appId=cid-v1:9e8cebda-9c88-460b-b55d-9410c4648f9a",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "b9ccbb99-b971-4594-bab1-aae7a89d2b28",
        "x-ms-ratelimit-remaining-subscription-reads": "11984",
        "x-ms-request-id": "b9ccbb99-b971-4594-bab1-aae7a89d2b28",
        "x-ms-return-client-request-id": "8cd03462a168da9957c46455ad598ca1",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175524Z:b9ccbb99-b971-4594-bab1-aae7a89d2b28"
      },
      "ResponseBody": {
        "properties": {
          "displayName": "Service Fabric Lab Cluster",
          "description": "A secure 5 node, single nodetype Service fabric Cluster.",
          "publisher": "Microsoft",
          "contents": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "clusterOS": {
                "type": "string",
                "allowedValues": [
                  "Windows",
                  "Linux"
                ],
                "defaultValue": "Windows",
                "metadata": {
                  "description": "Select the cluster OS."
                }
              },
              "adminUsername": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Remote desktop user Id"
                }
              },
              "adminPassword": {
                "type": "securestring",
                "metadata": {
                  "description": "Remote desktop user password. Must be a strong password"
                }
              },
              "certificate": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Certificate as Base64 encoded string."
                }
              },
              "certificatePassword": {
                "type": "securestring",
                "metadata": {
                  "description": "Certificate password for installation."
                }
              },
              "certificateThumbprint": {
                "type": "string",
                "minLength": 1,
                "metadata": {
                  "description": "Certificate thumbprint for identification in the local certificate store."
                }
              },
              "appPort1": {
                "type": "int",
                "defaultValue": 80,
                "minValue": 1,
                "metadata": {
                  "description": "Public accessible application port #1."
                }
              },
              "appPort2": {
                "type": "int",
                "defaultValue": 443,
                "minValue": 1,
                "metadata": {
                  "description": "Public accessible application port #2."
                }
              },
              "tenantId": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Tenant the cluster- and clientapplication belongs to. Required for Windows clusters."
                }
              },
              "clusterApplication": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Client id of cluster application. Required for Windows clusters."
                }
              },
              "clientApplication": {
                "type": "string",
                "defaultValue": "",
                "metadata": {
                  "description": "Client id of client application. Required for Windows clusters."
                }
              }
            },
            "variables": {
              "quickstartRepoRoot": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.servicefabric/",
              "clusterName": "[concat(\u0027sf-\u0027, toLower(uniqueString(resourceGroup().name)))]",
              "vaultName": "[concat(\u0027kv-\u0027, toLower(uniqueString(resourceGroup().name)))]",
              "vaultSecret": "ClusterCertificate",
              "loadBalancedAppPort1": "[parameters(\u0027appPort1\u0027)]",
              "loadBalancedAppPort2": "[parameters(\u0027appPort2\u0027)]",
              "nt0InstanceCount": 5
            },
            "resources": [
              {
                "name": "[variables(\u0027vaultName\u0027)]",
                "type": "Microsoft.KeyVault/vaults",
                "apiVersion": "2015-06-01",
                "location": "[resourceGroup().location]",
                "tags": {},
                "properties": {
                  "enabledForDeployment": true,
                  "enabledForTemplateDeployment": false,
                  "enabledForVolumeEncryption": false,
                  "tenantId": "[subscription().tenantId]",
                  "sku": {
                    "name": "standard",
                    "family": "A"
                  },
                  "accessPolicies": []
                }
              },
              {
                "name": "[concat(variables(\u0027vaultName\u0027), \u0027/\u0027, variables(\u0027vaultSecret\u0027))]",
                "type": "Microsoft.KeyVault/vaults/secrets",
                "apiVersion": "2015-06-01",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, variables(\u0027vaultName\u0027))]"
                ],
                "properties": {
                  "value": "[base64(concat(\u0027{ \u0022data\u0022:\u0022\u0027, parameters(\u0027certificate\u0027), \u0027\u0022, \u0022dataType\u0022:\u0022pfx\u0022, \u0022password\u0022:\u0022\u0027, parameters(\u0027certificatePassword\u0027), \u0027\u0022 }\u0027))]"
                }
              },
              {
                "condition": "[equals(parameters(\u0027clusterOS\u0027), \u0027Windows\u0027)]",
                "name": "[concat(deployment().name, \u0027-QuickstartTemplate-Windows\u0027)]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2015-01-01",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "templateLink": {
                    "uri": "[concat(variables(\u0027quickstartRepoRoot\u0027), \u0027service-fabric-secure-cluster-5-node-1-nodetype/azuredeploy.json\u0027)]",
                    "contentVersion": "1.0.0.0"
                  },
                  "parameters": {
                    "clusterName": {
                      "value": "[variables(\u0027clusterName\u0027)]"
                    },
                    "adminUsername": {
                      "value": "[parameters(\u0027adminUsername\u0027)]"
                    },
                    "adminPassword": {
                      "value": "[parameters(\u0027adminPassword\u0027)]"
                    },
                    "vmImagePublisher": {
                      "value": "MicrosoftWindowsServer"
                    },
                    "vmImageOffer": {
                      "value": "WindowsServer"
                    },
                    "vmImageSku": {
                      "value": "2022-datacenter"
                    },
                    "vmImageVersion": {
                      "value": "latest"
                    },
                    "loadBalancedAppPort1": {
                      "value": "[variables(\u0027loadBalancedAppPort1\u0027)]"
                    },
                    "loadBalancedAppPort2": {
                      "value": "[variables(\u0027loadBalancedAppPort2\u0027)]"
                    },
                    "certificateThumbprint": {
                      "value": "[parameters(\u0027certificateThumbprint\u0027)]"
                    },
                    "sourceVaultResourceId": {
                      "value": "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, variables(\u0027vaultName\u0027))]"
                    },
                    "certificateUrlValue": {
                      "value": "[reference(resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                      "value": "[variables(\u0027nt0InstanceCount\u0027)]"
                    },
                    "nodeDataDrive": {
                      "value": "OS"
                    },
                    "tenantId": {
                      "value": "[parameters(\u0027tenantId\u0027)]"
                    },
                    "clusterApplication": {
                      "value": "[parameters(\u0027clusterApplication\u0027)]"
                    },
                    "clientapplication": {
                      "value": "[parameters(\u0027clientApplication\u0027)]"
                    }
                  }
                }
              },
              {
                "condition": "[equals(parameters(\u0027clusterOS\u0027), \u0027Linux\u0027)]",
                "name": "[concat(deployment().name, \u0027-QuickstartTemplate-Linux\u0027)]",
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2015-01-01",
                "dependsOn": [
                  "[resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))]"
                ],
                "properties": {
                  "mode": "Incremental",
                  "templateLink": {
                    "uri": "[concat(variables(\u0027quickstartRepoRoot\u0027), \u00275-vm-ubuntu-1-nodetypes-secure/azuredeploy.json\u0027)]",
                    "contentVersion": "1.0.0.0"
                  },
                  "parameters": {
                    "clusterName": {
                      "value": "[variables(\u0027clusterName\u0027)]"
                    },
                    "adminUsername": {
                      "value": "[parameters(\u0027adminUsername\u0027)]"
                    },
                    "adminPassword": {
                      "value": "[parameters(\u0027adminPassword\u0027)]"
                    },
                    "vmImagePublisher": {
                      "value": "Canonical"
                    },
                    "vmImageOffer": {
                      "value": "UbuntuServer"
                    },
                    "vmImageSku": {
                      "value": "16.04-LTS"
                    },
                    "vmImageVersion": {
                      "value": "latest"
                    },
                    "loadBalancedAppPort1": {
                      "value": "[variables(\u0027loadBalancedAppPort1\u0027)]"
                    },
                    "loadBalancedAppPort2": {
                      "value": "[variables(\u0027loadBalancedAppPort2\u0027)]"
                    },
                    "certificateThumbprint": {
                      "value": "[parameters(\u0027certificateThumbprint\u0027)]"
                    },
                    "sourceVaultValue": {
                      "value": "[resourceId(\u0027Microsoft.KeyVault/vaults\u0027, variables(\u0027vaultName\u0027))]"
                    },
                    "certificateUrlValue": {
                      "value": "[reference(resourceId(\u0027Microsoft.KeyVault/vaults/secrets\u0027, variables(\u0027vaultName\u0027), variables(\u0027vaultSecret\u0027))).secretUriWithVersion]"
                    },
                    "nt0InstanceCount": {
                      "value": "[variables(\u0027nt0InstanceCount\u0027)]"
                    },
                    "storageAccountEndPoint": {
                      "value": "[resourceGroup().location]"
                    }
                  }
                }
              }
            ],
            "outputs": {}
          },
          "parametersValueFilesInfo": [],
          "enabled": true
        },
        "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/Microsoft.DevTestLab/labs/lab1779/artifactSources/public environment repo/armTemplates/ServiceFabric-LabCluster",
        "name": "ServiceFabric-LabCluster",
        "type": "Microsoft.DevTestLab/labs/artifactSources/armTemplates"
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG9699/providers/Microsoft.Authorization/locks?api-version=**",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-dbb7f49e100d5ffebb0162ceeb17f99d-867e119fb30cf189-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "f43bb81ced637ba0912f9adda5888e7d",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "728",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Tue, 14 Nov 2023 17:55:23 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "78dc08df-2a22-453c-8dcd-3adba075ae19",
        "x-ms-ratelimit-remaining-subscription-reads": "11983",
        "x-ms-request-id": "southeastasia:4ad905b6-37d7-461c-9ff3-5ddd3567c53d",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175524Z:78dc08df-2a22-453c-8dcd-3adba075ae19"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "level": "CanNotDelete",
              "notes": "Reserved resource locked by \u0027lab1779\u0027 lab."
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/devtestlabrg9699/providers/microsoft.storage/storageaccounts/alab17791039/providers/Microsoft.Authorization/locks/DevTestLabs Lock",
            "type": "Microsoft.Authorization/locks",
            "name": "DevTestLabs Lock"
          },
          {
            "properties": {
              "level": "CanNotDelete",
              "notes": "Reserved resource locked by \u0027lab1779\u0027 lab."
            },
            "id": "/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourcegroups/DevTestLabRG9699/providers/Microsoft.KeyVault/vaults/lab17795546/providers/Microsoft.Authorization/locks/DevTestLabs Lock",
            "type": "Microsoft.Authorization/locks",
            "name": "DevTestLabs Lock"
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/devtestlabrg9699/providers/microsoft.storage/storageaccounts/alab17791039/providers/Microsoft.Authorization/locks/DevTestLabs%20Lock?api-version=**",
      "RequestMethod": "DELETE",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-c5c9306b64a8289ab8f39ec79abe1a17-2e4e2af7f9a6ae90-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "adf50b2f96b34ab9e100cd2014bced0b",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "0",
        "Date": "Tue, 14 Nov 2023 17:55:24 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f4929d9a-8e97-43b7-8a90-b2868d5e9f05",
        "x-ms-ratelimit-remaining-subscription-deletes": "14999",
        "x-ms-request-id": "southeastasia:dc2c0c6c-f577-4915-a544-06d976fba818",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175525Z:f4929d9a-8e97-43b7-8a90-b2868d5e9f05"
      },
      "ResponseBody": null
    },
    {
      "RequestUri": "https://management.azure.com/subscriptions/db1ab6f0-4769-4b27-930e-01e2ef9c123c/resourceGroups/DevTestLabRG9699/providers/Microsoft.KeyVault/vaults/lab17795546/providers/Microsoft.Authorization/locks/DevTestLabs%20Lock?api-version=**",
      "RequestMethod": "DELETE",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "traceparent": "00-fddcce591a785a5929ab31335bd97fe1-874d76b2498d946b-00",
        "User-Agent": "azsdk-net-ResourceManager/1.8.0 (.NET 7.0.13; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "ee9a831b7e2f74ed9355fb3907bb35ce",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "0",
        "Date": "Tue, 14 Nov 2023 17:55:24 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "f205f526-ef48-46ec-a0a2-1b529725bcb5",
        "x-ms-ratelimit-remaining-subscription-deletes": "14998",
        "x-ms-request-id": "southeastasia:8c03d88e-0e9a-4cfa-b496-15866be81849",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20231114T175525Z:f205f526-ef48-46ec-a0a2-1b529725bcb5"
      },
      "ResponseBody": null
    }
  ],
  "Variables": {
    "AZURE_AUTHORITY_HOST": "https://login.microsoftonline.com",
    "RandomSeed": "540983681",
    "RESOURCE_MANAGER_URL": null,
    "SUBSCRIPTION_ID": "db1ab6f0-4769-4b27-930e-01e2ef9c123c"
  }
}
