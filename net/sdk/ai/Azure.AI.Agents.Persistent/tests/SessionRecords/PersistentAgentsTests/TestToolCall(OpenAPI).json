{
  "Entries": [
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/assistants?api-version=2025-05-15-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "1773",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "model": "gpt-4o",
        "name": "cs_e2e_tests_client",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous"
              },
              "default_params": [
                "format"
              ]
            }
          }
        ]
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "4d984e81-aed5-4c84-8d2b-324a64b519a2",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3158",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:46 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "141",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "db6f5464-de8e-470b-843b-7c5aec5bcaae",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "33f1308f10c3dca4235165eee06419f2",
        "x-request-time": "0.377"
      },
      "ResponseBody": {
        "id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "object": "assistant",
        "created_at": 1755117226,
        "name": "cs_e2e_tests_client",
        "description": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "top_p": 1.0,
        "temperature": 1.0,
        "tool_resources": {},
        "metadata": {},
        "response_format": "auto"
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/runs?api-version=2025-05-15-preview",
      "RequestMethod": "POST",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "136",
        "Content-Type": "application/json",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread": {
          "messages": [
            {
              "role": "user",
              "content": "What's the weather in Seattle?"
            }
          ]
        }
      },
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "d202cb2b-ad93-4eee-aebe-aca0c0b1327b",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3636",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:48 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "588",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "91fd9413-0510-4c2c-8eeb-886c090cc81a",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "4dda076a776a8510d31a1d1f66b2d793",
        "x-request-time": "1.719"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "queued",
        "started_at": null,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "788c82bf-a269-440c-b75f-fdc7afd56fef",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:48 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "82",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "2976f4fd-ae2d-40f7-a769-bc331c361666",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "93ee5145e0b3714b46bc7517facd991c",
        "x-request-time": "0.324"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "724a28c5-722f-48d3-ad70-d22d152482b8",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:49 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "75",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "a7597953-fb78-4c35-8d29-5836efb7a9e5",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "b1efc59c1561eccc0c72fb1a8bfd1867",
        "x-request-time": "0.237"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "a4906e3e-5f00-4f0b-bd6e-2c56075712a8",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:50 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "119",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "f239279b-6757-41df-987a-72286afa4a7e",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "5b4ca8a168bebc912640477575ccd21d",
        "x-request-time": "0.352"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "074973e0-b793-43df-bb05-6ede9cabcfb2",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:51 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "72",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "9105573c-38bb-4fd9-92b1-6b64ef58dbae",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "3078c302606b8cec28f2250122381f1a",
        "x-request-time": "0.248"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "c33234f5-f222-476e-80b6-98c7f035ca1c",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:52 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "82",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "b309bd64-5126-42eb-9f89-2cf2e4037dac",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "0936febdee8e4fd46f7ce9ef532e724b",
        "x-request-time": "0.263"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "d1ed8be1-b71c-4319-8c19-05f4ce1eef96",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:53 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "79",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "14ed6766-90cf-408e-b405-fb1e9b01a865",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "f2237c4b8c5e414a5c4b080836168eab",
        "x-request-time": "0.254"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "0fa2798d-2e43-44e5-a0f5-8286b7c2c2ed",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:53 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "235",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "51594bf4-b95d-4bfd-8b80-52b9e8926827",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "54f77672ca54dcaf62d0524c3d64a202",
        "x-request-time": "0.440"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "f5876148-b42d-4907-9049-c2e15675b689",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:54 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "74",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "5ef59d05-f925-4014-b56c-fa978dce758b",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "44ee25109495e36175f3ba677e89bce2",
        "x-request-time": "0.277"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "b8404786-3948-449f-816d-38b65ab4d6de",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:55 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "121",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "39c5242b-fc9d-4c06-8772-f4f06c5fd774",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "b2c04741aa9df0eed1bb7ecb190db7a4",
        "x-request-time": "0.288"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "b5f17fc3-499b-496a-977a-9159e4842813",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:56 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "130",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "7745971b-26ad-46cc-8367-e3f77e97f3cb",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "663b4fd29db49b15fd507f0bf9e9f26f",
        "x-request-time": "0.363"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "baab1a22-322c-4e1f-886f-05ed0fc6e499",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:57 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "114",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "9b4b6b2b-adea-4a6a-a923-06359e6de599",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "b4cfed27dfe3d628b2d2900cf1fb6f01",
        "x-request-time": "0.297"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "4dfc99b3-e700-4db1-aac2-e37b35485d05",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:58 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "123",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "6d20e219-4278-478f-9df0-f4698e3a4208",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "b5857eeefd5fc3808261da0bed402708",
        "x-request-time": "0.295"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "d3221f66-299d-419e-bd86-e3d695c02297",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:58 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "112",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "06c052e9-8d22-4dce-ac49-84b7ada8dc5a",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "e2f390096d51a750ff027f0ed113e9be",
        "x-request-time": "0.283"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "3446a9a9-1b6c-44dc-8ef3-46f40cc2c76a",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:33:59 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "169",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "77ff7d0c-f84b-4f93-902e-e3e15b0a988d",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "88a113c1a10021a24d40fd5d5a53ccbf",
        "x-request-time": "0.360"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "f42607e9-8c7f-4e99-b6f3-15e68903346e",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3647",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:34:00 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "225",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "b54515fd-3776-42a7-a7ca-e4a769ae2857",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "4a3f676bfb6e71b5dffdce274142242f",
        "x-request-time": "0.415"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "in_progress",
        "started_at": 1755117228,
        "expires_at": 1755119028,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": null,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": null,
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF?api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "8d5f978f-2cf2-4754-9c08-065ac83c93c5",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "3789",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:34:01 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "136",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "bc5190dc-f4a8-41c9-8834-0310e80bb1f3",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "55c8c1270536707579bf1cfd2c3dacd8",
        "x-request-time": "0.417"
      },
      "ResponseBody": {
        "id": "run_Ch7uwQIvKa7obqlAUenJogtF",
        "object": "thread.run",
        "created_at": 1755117228,
        "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
        "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
        "status": "completed",
        "started_at": 1755117228,
        "expires_at": null,
        "cancelled_at": null,
        "failed_at": null,
        "completed_at": 1755117241,
        "required_action": null,
        "last_error": null,
        "model": "gpt-4o",
        "instructions": "You are helpful agent.",
        "tools": [
          {
            "type": "openapi",
            "openapi": {
              "name": "get_weather",
              "description": "Retrieve weather information for a location",
              "spec": {
                "openapi": "3.1.0",
                "info": {
                  "title": "get weather data",
                  "description": "Retrieves current weather data for a location based on wttr.in.",
                  "version": "v1.0.0"
                },
                "servers": [
                  {
                    "url": "https://wttr.in"
                  }
                ],
                "auth": [],
                "paths": {
                  "/{location}": {
                    "get": {
                      "description": "Get weather information for a specific location",
                      "operationId": "GetCurrentWeather",
                      "parameters": [
                        {
                          "name": "location",
                          "in": "path",
                          "description": "City or location to retrieve the weather for",
                          "required": true,
                          "schema": {
                            "type": "string"
                          }
                        },
                        {
                          "name": "format",
                          "in": "query",
                          "description": "Always use j1 value for this parameter",
                          "required": true,
                          "schema": {
                            "type": "string",
                            "default": "j1"
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "Successful response",
                          "content": {
                            "text/plain": {
                              "schema": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "404": {
                          "description": "Location not found"
                        }
                      },
                      "deprecated": false
                    }
                  }
                },
                "components": {
                  "schemes": {}
                }
              },
              "auth": {
                "type": "anonymous",
                "security_scheme": {}
              },
              "functions": [
                {
                  "name": "get_weather_GetCurrentWeather",
                  "description": "Get weather information for a specific location",
                  "parameters": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "City or location to retrieve the weather for"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                }
              ],
              "default_params": [
                "format"
              ]
            }
          }
        ],
        "tool_resources": {},
        "metadata": {},
        "temperature": 1.0,
        "top_p": 1.0,
        "max_completion_tokens": null,
        "max_prompt_tokens": null,
        "truncation_strategy": {
          "type": "auto",
          "last_messages": null
        },
        "incomplete_details": null,
        "usage": {
          "prompt_tokens": 9339,
          "completion_tokens": 95,
          "total_tokens": 9434,
          "prompt_token_details": {
            "cached_tokens": 0
          }
        },
        "response_format": "auto",
        "tool_choice": "auto",
        "parallel_tool_calls": true
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/messages?run_id=run_Ch7uwQIvKa7obqlAUenJogtF&api-version=2025-05-15-preview",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "cfdcaf5f-a730-4929-9914-22cd6a55bb67",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "941",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:34:02 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "118",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "1b261899-45a9-4531-be96-0820fb6ff50a",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "a2a061f07408416d3a787fbe886e407c",
        "x-request-time": "0.295"
      },
      "ResponseBody": {
        "object": "list",
        "data": [
          {
            "id": "msg_LG7exGJZ9TZRE4Me8VxxPobW",
            "object": "thread.message",
            "created_at": 1755117239,
            "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
            "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
            "run_id": "run_Ch7uwQIvKa7obqlAUenJogtF",
            "role": "assistant",
            "content": [
              {
                "type": "text",
                "text": {
                  "value": "The current weather in Seattle is overcast with a temperature of 18°C (65°F). The humidity is at 76%, and there is no precipitation. The wind is blowing from the south-southwest at 11 km/h (7 mph). The pressure is 1013 mb (30 inHg), and visibility is good at 16 km (9 miles).",
                  "annotations": []
                }
              }
            ],
            "attachments": [],
            "metadata": {}
          }
        ],
        "first_id": "msg_LG7exGJZ9TZRE4Me8VxxPobW",
        "last_id": "msg_LG7exGJZ9TZRE4Me8VxxPobW",
        "has_more": false
      }
    },
    {
      "RequestUri": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb/threads/thread_f6GD8b9bQfnApbHkw0f1oUEU/runs/run_Ch7uwQIvKa7obqlAUenJogtF/steps?api-version=2025-05-15-preview&order=asc",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-AI.Agents.Persistent/1.2.0-alpha.20250813.1 (.NET 8.0.19; Microsoft Windows 10.0.26100)",
        "x-ms-client-request-id": "Sanitized",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "apim-request-id": "0355a552-a098-4d1c-b90c-dde733c477e5",
        "azureml-served-by-cluster": "vienna-westus-02",
        "Content-Length": "25518",
        "Content-Type": "application/json",
        "Date": "Wed, 13 Aug 2025 20:34:02 GMT",
        "openai-organization": "cb9727c486de4b1ca13cbe1a48f2d59a",
        "openai-processing-ms": "239",
        "openai-version": "2020-10-01",
        "Request-Context": "appId=cid-v1:2d2e8e63-272e-4b3c-8598-4ee570a0e70d",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
        "Vary": "Accept-Encoding",
        "X-Content-Type-Options": "nosniff",
        "x-ms-middleware-request-id": "8f848c1f-a347-4d80-89a1-17389100b419",
        "x-ms-region": "West US",
        "x-ms-response-type": "standard",
        "X-Request-ID": "1befc9af9441e9a716c626aa10b78dbf",
        "x-request-time": "0.441"
      },
      "ResponseBody": {
        "object": "list",
        "data": [
          {
            "id": "step_nxaxL10bUkm82eNYLnuiYtZi",
            "object": "thread.run.step",
            "created_at": 1755117235,
            "run_id": "run_Ch7uwQIvKa7obqlAUenJogtF",
            "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
            "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
            "type": "tool_calls",
            "status": "completed",
            "cancelled_at": null,
            "completed_at": 1755117239,
            "expires_at": null,
            "failed_at": null,
            "last_error": null,
            "step_details": {
              "type": "tool_calls",
              "tool_calls": [
                {
                  "id": "call_amIOfKe56inv1w5kDfJQQecm",
                  "type": "openapi",
                  "function": {
                    "name": "get_weather_GetCurrentWeather",
                    "arguments": "{\"location\":\"Seattle\"}",
                    "output": "{'current_condition': [{'FeelsLikeC': '18', 'FeelsLikeF': '65', 'cloudcover': '100', 'humidity': '76', 'localObsDateTime': '2025-08-13 11:18 AM', 'observation_time': '06:18 PM', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1013', 'pressureInches': '30', 'temp_C': '18', 'temp_F': '65', 'uvIndex': '2', 'visibility': '16', 'visibilityMiles': '9', 'weatherCode': '122', 'weatherDesc': [{'value': 'Overcast'}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SSW', 'winddirDegree': '214', 'windspeedKmph': '11', 'windspeedMiles': '7'}], 'nearest_area': [{'areaName': [{'value': 'Seattle'}], 'country': [{'value': 'United States of America'}], 'latitude': '47.606', 'longitude': '-122.331', 'population': '569369', 'region': [{'value': 'Washington'}], 'weatherUrl': [{'value': ''}]}], 'request': [{'query': 'Lat 47.60 and Lon -122.33', 'type': 'LatLon'}], 'weather': [{'astronomy': [{'moon_illumination': '84', 'moon_phase': 'Waning Gibbous', 'moonrise': '10:10 PM', 'moonset': '11:28 AM', 'sunrise': '06:03 AM', 'sunset': '08:24 PM'}], 'avgtempC': '20', 'avgtempF': '68', 'date': '2025-08-13', 'hourly': [{'DewPointC': '15', 'DewPointF': '59', 'FeelsLikeC': '25', 'FeelsLikeF': '77', 'HeatIndexC': '25', 'HeatIndexF': '77', 'WindChillC': '23', 'WindChillF': '74', 'WindGustKmph': '5', 'WindGustMiles': '3', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '0', 'chanceofrain': '0', 'chanceofremdry': '82', 'chanceofsnow': '0', 'chanceofsunshine': '85', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '1', 'diffRad': '0.0', 'humidity': '61', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1011', 'pressureInches': '30', 'shortRad': '0.0', 'tempC': '23', 'tempF': '74', 'time': '0', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '113', 'weatherDesc': [{'value': 'Clear '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SSW', 'winddirDegree': '213', 'windspeedKmph': '2', 'windspeedMiles': '1'}, {'DewPointC': '15', 'DewPointF': '59', 'FeelsLikeC': '21', 'FeelsLikeF': '70', 'HeatIndexC': '23', 'HeatIndexF': '73', 'WindChillC': '21', 'WindChillF': '70', 'WindGustKmph': '8', 'WindGustMiles': '5', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '0', 'chanceofrain': '0', 'chanceofremdry': '92', 'chanceofsnow': '0', 'chanceofsunshine': '93', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '10', 'diffRad': '0.0', 'humidity': '67', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1010', 'pressureInches': '30', 'shortRad': '0.0', 'tempC': '21', 'tempF': '70', 'time': '300', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '113', 'weatherDesc': [{'value': 'Clear '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '191', 'windspeedKmph': '4', 'windspeedMiles': '3'}, {'DewPointC': '15', 'DewPointF': '58', 'FeelsLikeC': '19', 'FeelsLikeF': '67', 'HeatIndexC': '19', 'HeatIndexF': '67', 'WindChillC': '19', 'WindChillF': '67', 'WindGustKmph': '10', 'WindGustMiles': '6', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '0', 'chanceofrain': '0', 'chanceofremdry': '92', 'chanceofsnow': '0', 'chanceofsunshine': '87', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '3', 'diffRad': '0.0', 'humidity': '74', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1012', 'pressureInches': '30', 'shortRad': '0.0', 'tempC': '19', 'tempF': '67', 'time': '600', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '113', 'weatherDesc': [{'value': 'Clear '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '186', 'windspeedKmph': '6', 'windspeedMiles': '4'}, {'DewPointC': '14', 'DewPointF': '58', 'FeelsLikeC': '17', 'FeelsLikeF': '63', 'HeatIndexC': '17', 'HeatIndexF': '63', 'WindChillC': '17', 'WindChillF': '63', 'WindGustKmph': '13', 'WindGustMiles': '8', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '84', 'chanceofrain': '0', 'chanceofremdry': '88', 'chanceofsnow': '0', 'chanceofsunshine': '7', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '90', 'diffRad': '37.3', 'humidity': '82', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1013', 'pressureInches': '30', 'shortRad': '73.8', 'tempC': '17', 'tempF': '63', 'time': '900', 'uvIndex': '1', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '122', 'weatherDesc': [{'value': 'Overcast '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SSW', 'winddirDegree': '193', 'windspeedKmph': '12', 'windspeedMiles': '7'}, {'DewPointC': '14', 'DewPointF': '58', 'FeelsLikeC': '18', 'FeelsLikeF': '65', 'HeatIndexC': '18', 'HeatIndexF': '65', 'WindChillC': '18', 'WindChillF': '65', 'WindGustKmph': '10', 'WindGustMiles': '6', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '82', 'chanceofrain': '0', 'chanceofremdry': '87', 'chanceofsnow': '0', 'chanceofsunshine': '5', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '152.7', 'humidity': '80', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1014', 'pressureInches': '30', 'shortRad': '269.5', 'tempC': '18', 'tempF': '65', 'time': '1200', 'uvIndex': '2', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '122', 'weatherDesc': [{'value': 'Overcast '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SW', 'winddirDegree': '219', 'windspeedKmph': '9', 'windspeedMiles': '5'}, {'DewPointC': '15', 'DewPointF': '58', 'FeelsLikeC': '22', 'FeelsLikeF': '71', 'HeatIndexC': '23', 'HeatIndexF': '74', 'WindChillC': '22', 'WindChillF': '71', 'WindGustKmph': '11', 'WindGustMiles': '7', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '10', 'chanceofovercast': '88', 'chanceofrain': '0', 'chanceofremdry': '87', 'chanceofsnow': '0', 'chanceofsunshine': '10', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '72', 'diffRad': '133.6', 'humidity': '63', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1014', 'pressureInches': '30', 'shortRad': '228.9', 'tempC': '22', 'tempF': '71', 'time': '1500', 'uvIndex': '2', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '119', 'weatherDesc': [{'value': 'Cloudy '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'WSW', 'winddirDegree': '239', 'windspeedKmph': '9', 'windspeedMiles': '5'}, {'DewPointC': '15', 'DewPointF': '59', 'FeelsLikeC': '25', 'FeelsLikeF': '76', 'HeatIndexC': '25', 'HeatIndexF': '76', 'WindChillC': '22', 'WindChillF': '72', 'WindGustKmph': '6', 'WindGustMiles': '4', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '89', 'chanceofrain': '0', 'chanceofremdry': '92', 'chanceofsnow': '0', 'chanceofsunshine': '11', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '53.4', 'humidity': '63', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1013', 'pressureInches': '30', 'shortRad': '89.3', 'tempC': '22', 'tempF': '72', 'time': '1800', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '122', 'weatherDesc': [{'value': 'Overcast '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'NW', 'winddirDegree': '322', 'windspeedKmph': '5', 'windspeedMiles': '3'}, {'DewPointC': '15', 'DewPointF': '59', 'FeelsLikeC': '20', 'FeelsLikeF': '69', 'HeatIndexC': '21', 'HeatIndexF': '70', 'WindChillC': '20', 'WindChillF': '69', 'WindGustKmph': '2', 'WindGustMiles': '1', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '82', 'chanceofrain': '0', 'chanceofremdry': '94', 'chanceofsnow': '0', 'chanceofsunshine': '14', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '26.4', 'humidity': '72', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1014', 'pressureInches': '30', 'shortRad': '45.0', 'tempC': '20', 'tempF': '69', 'time': '2100', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '122', 'weatherDesc': [{'value': 'Overcast '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'WNW', 'winddirDegree': '281', 'windspeedKmph': '1', 'windspeedMiles': '1'}], 'maxtempC': '23', 'maxtempF': '73', 'mintempC': '17', 'mintempF': '63', 'sunHour': '10.8', 'totalSnow_cm': '0.0', 'uvIndex': '1'}, {'astronomy': [{'moon_illumination': '75', 'moon_phase': 'Waning Gibbous', 'moonrise': '10:31 PM', 'moonset': '12:50 PM', 'sunrise': '06:04 AM', 'sunset': '08:22 PM'}], 'avgtempC': '16', 'avgtempF': '61', 'date': '2025-08-14', 'hourly': [{'DewPointC': '13', 'DewPointF': '56', 'FeelsLikeC': '18', 'FeelsLikeF': '65', 'HeatIndexC': '19', 'HeatIndexF': '65', 'WindChillC': '18', 'WindChillF': '65', 'WindGustKmph': '6', 'WindGustMiles': '4', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '93', 'chanceofrain': '0', 'chanceofremdry': '93', 'chanceofsnow': '0', 'chanceofsunshine': '9', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '85', 'diffRad': '0.0', 'humidity': '72', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1015', 'pressureInches': '30', 'shortRad': '0.0', 'tempC': '18', 'tempF': '65', 'time': '0', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '119', 'weatherDesc': [{'value': 'Cloudy '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SSW', 'winddirDegree': '196', 'windspeedKmph': '4', 'windspeedMiles': '2'}, {'DewPointC': '12', 'DewPointF': '54', 'FeelsLikeC': '17', 'FeelsLikeF': '62', 'HeatIndexC': '17', 'HeatIndexF': '62', 'WindChillC': '17', 'WindChillF': '62', 'WindGustKmph': '12', 'WindGustMiles': '7', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '81', 'chanceofrain': '0', 'chanceofremdry': '89', 'chanceofsnow': '0', 'chanceofsunshine': '17', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '72', 'diffRad': '0.0', 'humidity': '74', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1016', 'pressureInches': '30', 'shortRad': '0.0', 'tempC': '17', 'tempF': '62', 'time': '300', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '119', 'weatherDesc': [{'value': 'Cloudy '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '184', 'windspeedKmph': '8', 'windspeedMiles': '5'}, {'DewPointC': '12', 'DewPointF': '53', 'FeelsLikeC': '15', 'FeelsLikeF': '59', 'HeatIndexC': '15', 'HeatIndexF': '60', 'WindChillC': '15', 'WindChillF': '59', 'WindGustKmph': '15', 'WindGustMiles': '9', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '83', 'chanceofrain': '0', 'chanceofremdry': '88', 'chanceofsnow': '0', 'chanceofsunshine': '16', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '79', 'diffRad': '0.0', 'humidity': '79', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1016', 'pressureInches': '30', 'shortRad': '0.0', 'tempC': '15', 'tempF': '60', 'time': '600', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '119', 'weatherDesc': [{'value': 'Cloudy '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SSW', 'winddirDegree': '197', 'windspeedKmph': '10', 'windspeedMiles': '6'}, {'DewPointC': '12', 'DewPointF': '53', 'FeelsLikeC': '14', 'FeelsLikeF': '58', 'HeatIndexC': '15', 'HeatIndexF': '59', 'WindChillC': '14', 'WindChillF': '58', 'WindGustKmph': '16', 'WindGustMiles': '10', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '90', 'chanceofrain': '0', 'chanceofremdry': '84', 'chanceofsnow': '0', 'chanceofsunshine': '9', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '19.1', 'humidity': '83', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1016', 'pressureInches': '30', 'shortRad': '33.2', 'tempC': '15', 'tempF': '59', 'time': '900', 'uvIndex': '1', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '122', 'weatherDesc': [{'value': 'Overcast '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SSW', 'winddirDegree': '198', 'windspeedKmph': '13', 'windspeedMiles': '8'}, {'DewPointC': '11', 'DewPointF': '52', 'FeelsLikeC': '17', 'FeelsLikeF': '63', 'HeatIndexC': '17', 'HeatIndexF': '63', 'WindChillC': '17', 'WindChillF': '63', 'WindGustKmph': '15', 'WindGustMiles': '9', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '92', 'chanceofrain': '0', 'chanceofremdry': '89', 'chanceofsnow': '0', 'chanceofsunshine': '18', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '87', 'diffRad': '222.4', 'humidity': '66', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1017', 'pressureInches': '30', 'shortRad': '438.4', 'tempC': '17', 'tempF': '63', 'time': '1200', 'uvIndex': '6', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '122', 'weatherDesc': [{'value': 'Overcast '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SW', 'winddirDegree': '216', 'windspeedKmph': '13', 'windspeedMiles': '8'}, {'DewPointC': '10', 'DewPointF': '51', 'FeelsLikeC': '18', 'FeelsLikeF': '64', 'HeatIndexC': '18', 'HeatIndexF': '64', 'WindChillC': '18', 'WindChillF': '64', 'WindGustKmph': '16', 'WindGustMiles': '10', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '1', 'chanceofovercast': '81', 'chanceofrain': '0', 'chanceofremdry': '89', 'chanceofsnow': '0', 'chanceofsunshine': '17', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '89', 'diffRad': '163.6', 'humidity': '61', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1016', 'pressureInches': '30', 'shortRad': '320.8', 'tempC': '18', 'tempF': '64', 'time': '1500', 'uvIndex': '2', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '119', 'weatherDesc': [{'value': 'Cloudy '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SW', 'winddirDegree': '232', 'windspeedKmph': '13', 'windspeedMiles': '8'}, {'DewPointC': '11', 'DewPointF': '52', 'FeelsLikeC': '16', 'FeelsLikeF': '62', 'HeatIndexC': '16', 'HeatIndexF': '62', 'WindChillC': '16', 'WindChillF': '62', 'WindGustKmph': '10', 'WindGustMiles': '6', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '91', 'chanceofrain': '0', 'chanceofremdry': '93', 'chanceofsnow': '0', 'chanceofsunshine': '8', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '13.1', 'humidity': '71', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1016', 'pressureInches': '30', 'shortRad': '17.5', 'tempC': '16', 'tempF': '62', 'time': '1800', 'uvIndex': '1', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '122', 'weatherDesc': [{'value': 'Overcast '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SSE', 'winddirDegree': '163', 'windspeedKmph': '7', 'windspeedMiles': '4'}, {'DewPointC': '12', 'DewPointF': '54', 'FeelsLikeC': '15', 'FeelsLikeF': '59', 'HeatIndexC': '15', 'HeatIndexF': '59', 'WindChillC': '15', 'WindChillF': '59', 'WindGustKmph': '12', 'WindGustMiles': '8', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '85', 'chanceofrain': '100', 'chanceofremdry': '0', 'chanceofsnow': '0', 'chanceofsunshine': '0', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '5.7', 'humidity': '85', 'precipInches': '0.0', 'precipMM': '0.6', 'pressure': '1015', 'pressureInches': '30', 'shortRad': '7.8', 'tempC': '15', 'tempF': '59', 'time': '2100', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '299', 'weatherDesc': [{'value': 'Moderate rain at times'}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '186', 'windspeedKmph': '8', 'windspeedMiles': '5'}], 'maxtempC': '19', 'maxtempF': '66', 'mintempC': '15', 'mintempF': '58', 'sunHour': '10.5', 'totalSnow_cm': '0.0', 'uvIndex': '1'}, {'astronomy': [{'moon_illumination': '64', 'moon_phase': 'Waning Gibbous', 'moonrise': '10:59 PM', 'moonset': '02:15 PM', 'sunrise': '06:06 AM', 'sunset': '08:21 PM'}], 'avgtempC': '17', 'avgtempF': '62', 'date': '2025-08-15', 'hourly': [{'DewPointC': '14', 'DewPointF': '57', 'FeelsLikeC': '15', 'FeelsLikeF': '59', 'HeatIndexC': '15', 'HeatIndexF': '59', 'WindChillC': '15', 'WindChillF': '59', 'WindGustKmph': '12', 'WindGustMiles': '7', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '91', 'chanceofrain': '100', 'chanceofremdry': '0', 'chanceofsnow': '0', 'chanceofsunshine': '0', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '0.0', 'humidity': '92', 'precipInches': '0.1', 'precipMM': '2.3', 'pressure': '1013', 'pressureInches': '30', 'shortRad': '0.0', 'tempC': '15', 'tempF': '59', 'time': '0', 'uvIndex': '0', 'visibility': '2', 'visibilityMiles': '1', 'weatherCode': '296', 'weatherDesc': [{'value': 'Light rain'}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'SSE', 'winddirDegree': '169', 'windspeedKmph': '8', 'windspeedMiles': '5'}, {'DewPointC': '14', 'DewPointF': '58', 'FeelsLikeC': '15', 'FeelsLikeF': '60', 'HeatIndexC': '15', 'HeatIndexF': '60', 'WindChillC': '15', 'WindChillF': '60', 'WindGustKmph': '21', 'WindGustMiles': '13', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '81', 'chanceofrain': '100', 'chanceofremdry': '0', 'chanceofsnow': '0', 'chanceofsunshine': '0', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '0.0', 'humidity': '93', 'precipInches': '0.1', 'precipMM': '2.3', 'pressure': '1011', 'pressureInches': '30', 'shortRad': '0.0', 'tempC': '15', 'tempF': '60', 'time': '300', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '302', 'weatherDesc': [{'value': 'Moderate rain'}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '178', 'windspeedKmph': '14', 'windspeedMiles': '9'}, {'DewPointC': '15', 'DewPointF': '59', 'FeelsLikeC': '16', 'FeelsLikeF': '61', 'HeatIndexC': '16', 'HeatIndexF': '61', 'WindChillC': '16', 'WindChillF': '61', 'WindGustKmph': '27', 'WindGustMiles': '17', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '86', 'chanceofrain': '100', 'chanceofremdry': '0', 'chanceofsnow': '0', 'chanceofsunshine': '0', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '0.0', 'humidity': '92', 'precipInches': '0.1', 'precipMM': '1.3', 'pressure': '1010', 'pressureInches': '30', 'shortRad': '0.0', 'tempC': '16', 'tempF': '61', 'time': '600', 'uvIndex': '0', 'visibility': '10', 'visibilityMiles': '6', 'weatherCode': '296', 'weatherDesc': [{'value': 'Light rain'}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '184', 'windspeedKmph': '17', 'windspeedMiles': '11'}, {'DewPointC': '15', 'DewPointF': '60', 'FeelsLikeC': '17', 'FeelsLikeF': '62', 'HeatIndexC': '17', 'HeatIndexF': '62', 'WindChillC': '17', 'WindChillF': '62', 'WindGustKmph': '20', 'WindGustMiles': '13', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '85', 'chanceofrain': '100', 'chanceofremdry': '0', 'chanceofsnow': '0', 'chanceofsunshine': '0', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '3.6', 'humidity': '91', 'precipInches': '0.0', 'precipMM': '0.7', 'pressure': '1009', 'pressureInches': '30', 'shortRad': '4.8', 'tempC': '17', 'tempF': '62', 'time': '900', 'uvIndex': '0', 'visibility': '9', 'visibilityMiles': '5', 'weatherCode': '296', 'weatherDesc': [{'value': 'Light rain'}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '172', 'windspeedKmph': '13', 'windspeedMiles': '8'}, {'DewPointC': '16', 'DewPointF': '61', 'FeelsLikeC': '17', 'FeelsLikeF': '63', 'HeatIndexC': '17', 'HeatIndexF': '63', 'WindChillC': '17', 'WindChillF': '63', 'WindGustKmph': '16', 'WindGustMiles': '10', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '90', 'chanceofrain': '100', 'chanceofremdry': '0', 'chanceofsnow': '0', 'chanceofsunshine': '0', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '18.0', 'humidity': '93', 'precipInches': '0.1', 'precipMM': '1.7', 'pressure': '1008', 'pressureInches': '30', 'shortRad': '21.3', 'tempC': '17', 'tempF': '63', 'time': '1200', 'uvIndex': '1', 'visibility': '2', 'visibilityMiles': '1', 'weatherCode': '356', 'weatherDesc': [{'value': 'Moderate or heavy rain shower'}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '175', 'windspeedKmph': '10', 'windspeedMiles': '6'}, {'DewPointC': '17', 'DewPointF': '62', 'FeelsLikeC': '18', 'FeelsLikeF': '65', 'HeatIndexC': '18', 'HeatIndexF': '65', 'WindChillC': '18', 'WindChillF': '65', 'WindGustKmph': '26', 'WindGustMiles': '16', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '87', 'chanceofrain': '100', 'chanceofremdry': '0', 'chanceofsnow': '0', 'chanceofsunshine': '0', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '100', 'diffRad': '19.0', 'humidity': '92', 'precipInches': '0.1', 'precipMM': '2.4', 'pressure': '1008', 'pressureInches': '30', 'shortRad': '22.8', 'tempC': '18', 'tempF': '65', 'time': '1500', 'uvIndex': '0', 'visibility': '9', 'visibilityMiles': '5', 'weatherCode': '302', 'weatherDesc': [{'value': 'Moderate rain'}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '173', 'windspeedKmph': '17', 'windspeedMiles': '11'}, {'DewPointC': '16', 'DewPointF': '62', 'FeelsLikeC': '18', 'FeelsLikeF': '65', 'HeatIndexC': '18', 'HeatIndexF': '65', 'WindChillC': '18', 'WindChillF': '65', 'WindGustKmph': '23', 'WindGustMiles': '15', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '86', 'chanceofrain': '100', 'chanceofremdry': '0', 'chanceofsnow': '0', 'chanceofsunshine': '0', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '98', 'diffRad': '26.3', 'humidity': '89', 'precipInches': '0.0', 'precipMM': '0.7', 'pressure': '1009', 'pressureInches': '30', 'shortRad': '38.0', 'tempC': '18', 'tempF': '65', 'time': '1800', 'uvIndex': '0', 'visibility': '2', 'visibilityMiles': '1', 'weatherCode': '296', 'weatherDesc': [{'value': 'Light rain'}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '181', 'windspeedKmph': '15', 'windspeedMiles': '9'}, {'DewPointC': '16', 'DewPointF': '61', 'FeelsLikeC': '18', 'FeelsLikeF': '64', 'HeatIndexC': '18', 'HeatIndexF': '64', 'WindChillC': '18', 'WindChillF': '64', 'WindGustKmph': '19', 'WindGustMiles': '12', 'chanceoffog': '0', 'chanceoffrost': '0', 'chanceofhightemp': '0', 'chanceofovercast': '94', 'chanceofrain': '0', 'chanceofremdry': '90', 'chanceofsnow': '0', 'chanceofsunshine': '16', 'chanceofthunder': '0', 'chanceofwindy': '0', 'cloudcover': '98', 'diffRad': '8.6', 'humidity': '90', 'precipInches': '0.0', 'precipMM': '0.0', 'pressure': '1010', 'pressureInches': '30', 'shortRad': '12.1', 'tempC': '18', 'tempF': '64', 'time': '2100', 'uvIndex': '0', 'visibility': '2', 'visibilityMiles': '1', 'weatherCode': '122', 'weatherDesc': [{'value': 'Overcast '}], 'weatherIconUrl': [{'value': ''}], 'winddir16Point': 'S', 'winddirDegree': '175', 'windspeedKmph': '12', 'windspeedMiles': '8'}], 'maxtempC': '19', 'maxtempF': '66', 'mintempC': '15', 'mintempF': '58', 'sunHour': '10.5', 'totalSnow_cm': '0.0', 'uvIndex': '0'}]}"
                  }
                }
              ]
            },
            "usage": {
              "prompt_tokens": 115,
              "completion_tokens": 18,
              "total_tokens": 133,
              "prompt_token_details": {
                "cached_tokens": 0
              }
            }
          },
          {
            "id": "step_3yLjKPbYjXu0PivJneMjxCcD",
            "object": "thread.run.step",
            "created_at": 1755117239,
            "run_id": "run_Ch7uwQIvKa7obqlAUenJogtF",
            "assistant_id": "asst_eqpMjH3iadAjIJOdt29lDsP0",
            "thread_id": "thread_f6GD8b9bQfnApbHkw0f1oUEU",
            "type": "message_creation",
            "status": "completed",
            "cancelled_at": null,
            "completed_at": 1755117241,
            "expires_at": null,
            "failed_at": null,
            "last_error": null,
            "step_details": {
              "type": "message_creation",
              "message_creation": {
                "message_id": "msg_LG7exGJZ9TZRE4Me8VxxPobW"
              }
            },
            "usage": {
              "prompt_tokens": 9224,
              "completion_tokens": 77,
              "total_tokens": 9301,
              "prompt_token_details": {
                "cached_tokens": 0
              }
            }
          }
        ],
        "first_id": "step_nxaxL10bUkm82eNYLnuiYtZi",
        "last_id": "step_3yLjKPbYjXu0PivJneMjxCcD",
        "has_more": false
      }
    }
  ],
  "Variables": {
    "PROJECT_CONNECTION_STRING": "https://westus-projxkmb.services.ai.azure.com/api/projects/projectxkmb",
    "PROJECT_ENDPOINT": "https://deep-research-agent.services.ai.azure.com/api/projects/deep-research-agent",
    "RandomSeed": "1283930409"
  }
}
