{
  "Entries": [
    {
      "RequestUri": "https://management.azure.com/tenants?api-version=2022-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-23a512579b8b6a3475977a22d5cc25fb-b800002e8c3b03ce-00",
        "User-Agent": "azsdk-net-ResourceManager/1.7.0-alpha.20230712.1 (.NET 6.0.18; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "58043ea1f90573b1962510de5a4bfe4f",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "140",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 12 Jul 2023 02:12:06 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "8e963841-5a9d-4734-86b3-eaf266768d2b",
        "x-ms-ratelimit-remaining-tenant-reads": "11997",
        "x-ms-request-id": "8e963841-5a9d-4734-86b3-eaf266768d2b",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230712T021206Z:8e963841-5a9d-4734-86b3-eaf266768d2b"
      },
      "ResponseBody": {
        "value": [
          {
            "id": "/tenants/72f988bf-86f1-41af-91ab-2d7cd011db47",
            "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "tenantCategory": "Home"
          }
        ]
      }
    },
    {
      "RequestUri": "https://management.azure.com/providers/Microsoft.Authorization/dataPolicyManifests?api-version=2020-09-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-1d23d6d373f37774a685d41edef71f92-f82c8d8071e8a3ed-00",
        "User-Agent": "azsdk-net-ResourceManager/1.7.0-alpha.20230712.1 (.NET 6.0.18; Microsoft Windows 10.0.22621)",
        "x-ms-client-request-id": "4ccefca899a86ae9548cb4d2fbe89d45",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Cache-Control": "no-cache",
        "Content-Length": "21350",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 12 Jul 2023 02:12:06 GMT",
        "Expires": "-1",
        "Pragma": "no-cache",
        "Server": "Kestrel",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "x-ms-correlation-request-id": "bea40855-714e-4bed-8729-51d0b5aa1a65",
        "x-ms-ratelimit-remaining-tenant-reads": "11996",
        "x-ms-request-id": "bea40855-714e-4bed-8729-51d0b5aa1a65",
        "x-ms-routing-request-id": "SOUTHEASTASIA:20230712T021206Z:bea40855-714e-4bed-8729-51d0b5aa1a65"
      },
      "ResponseBody": {
        "value": [
          {
            "properties": {
              "namespaces": [],
              "policyMode": "Microsoft.ContainerService.Data",
              "isBuiltInOnly": true,
              "resourceTypeAliases": [
                {
                  "resourceType": "default",
                  "aliases": [
                    {
                      "name": "Microsoft.ContainerService.Data/resourceType",
                      "paths": [
                        {
                          "path": "type",
                          "apiVersions": [
                            "2018-03-31"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "effects": [
                {
                  "name": "EnforceRegoPolicy",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "policyId": {
                        "type": "string"
                      },
                      "policy": {
                        "type": "string",
                        "pattern": "^(https:\\/\\/raw\\.githubusercontent\\.com\\/){1}(.*)(.rego){1}$"
                      },
                      "policyParameters": {
                        "type": "object",
                        "maxProperties": 10,
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "policyId",
                      "policy"
                    ],
                    "additionalProperties": false
                  }
                }
              ],
              "fieldValues": [
                "type"
              ],
              "resourceFunctions": {
                "standard": [
                  "subscription",
                  "resourceGroup"
                ],
                "custom": []
              }
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.ContainerService.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.ContainerService.Data"
          },
          {
            "properties": {
              "namespaces": [
                "Microsoft.CustomerLockbox"
              ],
              "policyMode": "Microsoft.CustomerLockbox.Data",
              "isBuiltInOnly": false,
              "resourceTypeAliases": [
                {
                  "resourceType": "default",
                  "aliases": [
                    {
                      "name": "Microsoft.CustomerLockbox.Data/ResourceType",
                      "paths": [
                        {
                          "path": "ResourceType",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "effects": [
                {
                  "name": "AutoApprove",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "approversSecurityGroup": {
                        "type": "string"
                      },
                      "approvers": {
                        "type": "string"
                      },
                      "supportLocationFilterCondition": {
                        "type": "string"
                      },
                      "supportLocationCountryCode": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "approvers"
                    ],
                    "additionalProperties": false
                  }
                },
                {
                  "name": "AutoDeny",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "approversSecurityGroup": {
                        "type": "string"
                      },
                      "approvers": {
                        "type": "string"
                      },
                      "supportLocationFilterCondition": {
                        "type": "string"
                      },
                      "supportLocationCountryCode": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "approvers"
                    ],
                    "additionalProperties": false
                  }
                },
                {
                  "name": "ManualApprove",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "approversSecurityGroup": {
                        "type": "string"
                      },
                      "approvers": {
                        "type": "string"
                      },
                      "supportLocationFilterCondition": {
                        "type": "string"
                      },
                      "supportLocationCountryCode": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "approvers",
                      "approversSecurityGroup"
                    ],
                    "additionalProperties": false
                  }
                }
              ]
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.CustomerLockbox.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.CustomerLockbox.Data"
          },
          {
            "properties": {
              "namespaces": [],
              "policyMode": "Microsoft.DataCatalog.Data",
              "isBuiltInOnly": false,
              "resourceTypeAliases": [
                {
                  "resourceType": "catalog/entity",
                  "aliases": [
                    {
                      "name": "Microsoft.DataCatalog.Data/catalog/entity/classifications[*].name",
                      "paths": [
                        {
                          "path": "entity.classifications[*].name",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.DataCatalog.Data/catalog/entity/schema[*].columnName",
                      "paths": [
                        {
                          "path": "entity.schema[*].columnName",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.DataCatalog.Data/catalog/entity/type",
                      "paths": [
                        {
                          "path": "entity.type",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.DataCatalog.Data/catalog/entity/qualifiedName",
                      "paths": [
                        {
                          "path": "entity.qualifiedName",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "effects": [
                {
                  "name": "ModifyClassifications",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "classificationsToAdd": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "classificationsToRemove": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      }
                    },
                    "required": [
                      "classificationsToAdd",
                      "classificationsToRemove"
                    ],
                    "additionalProperties": false
                  }
                }
              ]
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.DataCatalog.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.DataCatalog.Data"
          },
          {
            "properties": {
              "namespaces": [
                "Microsoft.DataFactory"
              ],
              "policyMode": "Microsoft.DataFactory.Data",
              "isBuiltInOnly": true,
              "resourceTypeAliases": [
                {
                  "resourceType": "factories/outboundTraffic",
                  "aliases": [
                    {
                      "name": "Microsoft.DataFactory.Data/factories/outboundTraffic/properties.domainNames[*]",
                      "paths": [
                        {
                          "path": "properties.domainNames[*]",
                          "apiVersions": [
                            "2023-02-01-preview"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "effects": [
                {
                  "name": "deny"
                }
              ],
              "fieldValues": [
                "type"
              ]
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.DataFactory.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.DataFactory.Data"
          },
          {
            "properties": {
              "namespaces": [
                "Microsoft.KeyVault"
              ],
              "policyMode": "Microsoft.KeyVault.Data",
              "isBuiltInOnly": true,
              "resourceTypeAliases": [
                {
                  "resourceType": "vaults/certificates",
                  "aliases": [
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/attributes.expiresOn",
                      "paths": [
                        {
                          "path": "attributes.expiresOn",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/issuer.commonName",
                      "paths": [
                        {
                          "path": "issuer.commonName",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/issuer.name",
                      "paths": [
                        {
                          "path": "issuer.name",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/keyProperties.ellipticCurveName",
                      "paths": [
                        {
                          "path": "keyProperties.ellipticCurveName",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/keyProperties.keyType",
                      "paths": [
                        {
                          "path": "keyProperties.keyType",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/keyProperties.keySize",
                      "paths": [
                        {
                          "path": "keyProperties.keySize",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/lifetimeAction.lifetimePercentage",
                      "paths": [
                        {
                          "path": "lifetimeAction.lifetimePercentage",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/lifetimeAction.daysBeforeExpiry",
                      "paths": [
                        {
                          "path": "lifetimeAction.daysBeforeExpiry",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/lifetimeAction.action",
                      "paths": [
                        {
                          "path": "lifetimeAction.action",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/certificates/properties.validityInMonths",
                      "paths": [
                        {
                          "path": "properties.validityInMonths",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "resourceType": "vaults/keys",
                  "aliases": [
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/keys/keyType",
                      "paths": [
                        {
                          "path": "properties.keyType",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/keys/keySize",
                      "paths": [
                        {
                          "path": "properties.keySize",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/keys/ellipticCurveName",
                      "paths": [
                        {
                          "path": "properties.eccName",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/keys/scheduledRotationDate",
                      "paths": [
                        {
                          "path": "properties.scheduledRotationDate",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/keys/attributes.createdOn",
                      "paths": [
                        {
                          "path": "properties.attributes.createdOn",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/keys/attributes.expiresOn",
                      "paths": [
                        {
                          "path": "properties.attributes.expiresOn",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/keys/attributes.notBefore",
                      "paths": [
                        {
                          "path": "properties.attributes.notBefore",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "resourceType": "vaults/secrets",
                  "aliases": [
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/secrets/contentType",
                      "paths": [
                        {
                          "path": "properties.contentType",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/secrets/attributes.createdOn",
                      "paths": [
                        {
                          "path": "properties.attributes.createdOn",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/secrets/attributes.expiresOn",
                      "paths": [
                        {
                          "path": "properties.attributes.expiresOn",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.KeyVault.Data/vaults/secrets/attributes.notBefore",
                      "paths": [
                        {
                          "path": "properties.attributes.notBefore",
                          "apiVersions": [
                            "2019-01-01"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "effects": [
                {
                  "name": "audit"
                },
                {
                  "name": "deny"
                }
              ],
              "fieldValues": [
                "type"
              ],
              "resourceFunctions": {
                "standard": [
                  "subscription",
                  "resourceGroup"
                ],
                "custom": [
                  {
                    "name": "vault",
                    "fullyQualifiedResourceType": "Microsoft.KeyVault/vaults",
                    "defaultProperties": [
                      "location",
                      "tags"
                    ],
                    "allowCustomProperties": false
                  }
                ]
              }
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.KeyVault.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.KeyVault.Data"
          },
          {
            "properties": {
              "namespaces": [
                "Microsoft.ContainerService",
                "Microsoft.Kubernetes"
              ],
              "policyMode": "Microsoft.Kubernetes.Data",
              "isBuiltInOnly": false,
              "effects": [
                {
                  "name": "audit",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "constraintTemplate": {
                        "type": "string"
                      },
                      "constraint": {
                        "type": "string"
                      },
                      "templateInfo": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "PublicURL"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "Base64Encoded"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "content"
                            ]
                          }
                        ]
                      },
                      "constraintInfo": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "PublicURL"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "Base64Encoded"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "content"
                            ]
                          }
                        ]
                      },
                      "values": {
                        "type": "object",
                        "maxProperties": 10,
                        "additionalProperties": {}
                      },
                      "excludedNamespaces": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "namespaces": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "labelSelector": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "minProperties": 1
                              },
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "enum": [
                                            "In",
                                            "NotIn"
                                          ]
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "minItems": 1
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator",
                                        "values"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "enum": [
                                            "Exists",
                                            "DoesNotExist"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                "minItems": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "apiGroups": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "kinds": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "scope": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "*",
                              "Cluster",
                              "Namespaced"
                            ]
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                {
                  "name": "deny",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "constraintTemplate": {
                        "type": "string"
                      },
                      "constraint": {
                        "type": "string"
                      },
                      "templateInfo": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "PublicURL"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "Base64Encoded"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "content"
                            ]
                          }
                        ]
                      },
                      "constraintInfo": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "PublicURL"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "Base64Encoded"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "content"
                            ]
                          }
                        ]
                      },
                      "values": {
                        "type": "object",
                        "maxProperties": 10,
                        "additionalProperties": {}
                      },
                      "excludedNamespaces": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "namespaces": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "labelSelector": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "minProperties": 1
                              },
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "enum": [
                                            "In",
                                            "NotIn"
                                          ]
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "minItems": 1
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator",
                                        "values"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "enum": [
                                            "Exists",
                                            "DoesNotExist"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                "minItems": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "apiGroups": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "kinds": {
                        "anyOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      },
                      "scope": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "*",
                              "Cluster",
                              "Namespaced"
                            ]
                          },
                          {
                            "type": "string",
                            "pattern": "^\\[.\u002B\\]$"
                          }
                        ]
                      }
                    },
                    "required": [],
                    "additionalProperties": false
                  }
                },
                {
                  "name": "mutate",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "mutationInfo": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "PublicURL"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "sourceType": {
                                "const": "Base64Encoded"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "sourceType",
                              "content"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "mutationInfo"
                    ],
                    "additionalProperties": false
                  }
                }
              ],
              "fieldValues": [
                "type",
                "location",
                "tags"
              ],
              "resourceFunctions": {
                "standard": [
                  "subscription",
                  "resourceGroup"
                ],
                "custom": []
              }
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.Kubernetes.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.Kubernetes.Data"
          },
          {
            "properties": {
              "namespaces": [
                "Microsoft.MachineLearningServices"
              ],
              "policyMode": "Microsoft.MachineLearningServices.Data",
              "isBuiltInOnly": true,
              "resourceTypeAliases": [
                {
                  "resourceType": "workspaces",
                  "aliases": [
                    {
                      "name": "Microsoft.MachineLearningServices.Data/workspaces/computeName",
                      "paths": [
                        {
                          "path": "properties.computeName",
                          "apiVersions": [
                            "2020-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.Data/workspaces/computeType",
                      "paths": [
                        {
                          "path": "properties.computeType",
                          "apiVersions": [
                            "2020-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.Data/workspaces/isIsolatedNetwork",
                      "paths": [
                        {
                          "path": "properties.isIsolatedNetwork",
                          "apiVersions": [
                            "2020-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.Data/workspaces/tags",
                      "paths": [
                        {
                          "path": "properties.tags",
                          "apiVersions": [
                            "2020-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.Data/workspaces/tags[*]",
                      "paths": [
                        {
                          "path": "properties.tags[*]",
                          "apiVersions": [
                            "2020-01-01"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "effects": [
                {
                  "name": "enforceSetting",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "setting": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "enum": [
                                  "approvalEndpoint"
                                ]
                              },
                              "value": {
                                "type": "string",
                                "pattern": "^((((https|http):\\/\\/){1}(.\u002B))|(\\[.\u002B\\]))$"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "enum": [
                                  "signingKey"
                                ]
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "enum": [
                                  "allowedPythonPackageChannels"
                                ]
                              },
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^\\[.\u002B\\]$"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "enum": [
                                  "allowedACRs",
                                  "allowedModuleAuthors",
                                  "signingKeys"
                                ]
                              },
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^\\[.\u002B\\]$"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "allowedList": {
                                        "anyOf": [
                                          {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          {
                                            "type": "string",
                                            "pattern": "^\\[.\u002B\\]$"
                                          }
                                        ]
                                      },
                                      "trustIPProtectedComponent": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "enum": [
                                              "Yes",
                                              "No",
                                              "None"
                                            ]
                                          },
                                          {
                                            "type": "string",
                                            "pattern": "^\\[.\u002B\\]$"
                                          }
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "allowedList",
                                      "trustIPProtectedComponent"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "enum": [
                                  "logFilter",
                                  "metricsFilter"
                                ]
                              },
                              "value": {
                                "type": "object",
                                "properties": {
                                  "filters": {
                                    "anyOf": [
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "string",
                                        "pattern": "^\\[.\u002B\\]$"
                                      }
                                    ]
                                  },
                                  "datastore": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "filters",
                                  "datastore"
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "setting"
                    ]
                  }
                }
              ]
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.MachineLearningServices.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.MachineLearningServices.Data"
          },
          {
            "properties": {
              "namespaces": [
                "Microsoft.MachineLearningServices"
              ],
              "policyMode": "Microsoft.MachineLearningServices.v2.Data",
              "isBuiltInOnly": true,
              "resourceTypeAliases": [
                {
                  "resourceType": "workspaces/models/versions",
                  "aliases": [
                    {
                      "name": "Microsoft.MachineLearningServices.v2.Data/workspaces/models/versions/stage",
                      "paths": [
                        {
                          "path": "stage",
                          "apiVersions": [
                            "2023-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.v2.Data/workspaces/models/versions/tags[*]",
                      "paths": [
                        {
                          "path": "kvtags[*]",
                          "apiVersions": [
                            "2023-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.v2.Data/workspaces/models/versions/tags[*].key",
                      "paths": [
                        {
                          "path": "kvtags[*].key",
                          "apiVersions": [
                            "2023-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.v2.Data/workspaces/models/versions/tags[*].value",
                      "paths": [
                        {
                          "path": "kvtags[*].value",
                          "apiVersions": [
                            "2023-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.v2.Data/workspaces/models/versions/properties[*]",
                      "paths": [
                        {
                          "path": "properties[*]",
                          "apiVersions": [
                            "2023-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.v2.Data/workspaces/models/versions/properties[*].key",
                      "paths": [
                        {
                          "path": "properties[*].key",
                          "apiVersions": [
                            "2023-01-01"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.MachineLearningServices.v2.Data/workspaces/models/versions/properties[*].value",
                      "paths": [
                        {
                          "path": "properties[*].value",
                          "apiVersions": [
                            "2023-01-01"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "resourceType": "workspaces/deployments",
                  "aliases": [
                    {
                      "name": "Microsoft.MachineLearningServices.v2.Data/workspaces/deployments/model.stage",
                      "paths": [
                        {
                          "path": "model.stage",
                          "apiVersions": [
                            "2023-01-01"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "effects": [
                {
                  "name": "deny"
                }
              ],
              "fieldValues": [
                "type"
              ]
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.MachineLearningServices.v2.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.MachineLearningServices.v2.Data"
          },
          {
            "properties": {
              "namespaces": [
                "Microsoft.KeyVault"
              ],
              "policyMode": "Microsoft.ManagedHSM.Data",
              "isBuiltInOnly": true,
              "resourceTypeAliases": [
                {
                  "resourceType": "managedHsms/keys",
                  "aliases": [
                    {
                      "name": "Microsoft.ManagedHSM.Data/managedHsms/keys/keyType",
                      "paths": [
                        {
                          "path": "key.kty",
                          "apiVersions": [
                            "2021-06-01-preview"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.ManagedHSM.Data/managedHsms/keys/keySize",
                      "paths": [
                        {
                          "path": "key.size",
                          "apiVersions": [
                            "2021-06-01-preview"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.ManagedHSM.Data/managedHsms/keys/ellipticCurveName",
                      "paths": [
                        {
                          "path": "key.crv",
                          "apiVersions": [
                            "2021-06-01-preview"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.ManagedHSM.Data/managedHsms/keys/attributes.createdOn",
                      "paths": [
                        {
                          "path": "attributes.created",
                          "apiVersions": [
                            "2021-06-01-preview"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.ManagedHSM.Data/managedHsms/keys/attributes.expiresOn",
                      "paths": [
                        {
                          "path": "attributes.exp",
                          "apiVersions": [
                            "2021-06-01-preview"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.ManagedHSM.Data/managedHsms/keys/attributes.notBefore",
                      "paths": [
                        {
                          "path": "attributes.nbf",
                          "apiVersions": [
                            "2021-06-01-preview"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.ManagedHSM.Data/managedHsms/keys/attributes.enabled",
                      "paths": [
                        {
                          "path": "attributes.enabled",
                          "apiVersions": [
                            "2021-06-01-preview"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Microsoft.ManagedHSM.Data/managedHsms/keys/attributes.updatedOn",
                      "paths": [
                        {
                          "path": "attributes.updatedOn",
                          "apiVersions": [
                            "2021-06-01-preview"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "effects": [
                {
                  "name": "audit"
                },
                {
                  "name": "deny"
                }
              ],
              "fieldValues": [
                "type"
              ],
              "resourceFunctions": {
                "standard": [
                  "subscription",
                  "resourceGroup"
                ],
                "custom": [
                  {
                    "name": "managedHsm",
                    "fullyQualifiedResourceType": "Microsoft.KeyVault/managedHsms",
                    "defaultProperties": [
                      "location",
                      "tags"
                    ],
                    "allowCustomProperties": false
                  }
                ]
              }
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.ManagedHSM.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.ManagedHSM.Data"
          },
          {
            "properties": {
              "namespaces": [
                "Microsoft.Network"
              ],
              "policyMode": "Microsoft.Network.Data",
              "isBuiltInOnly": false,
              "effects": [
                {
                  "name": "addToNetworkGroup",
                  "detailsSchema": {
                    "type": "object",
                    "properties": {
                      "networkGroupId": {
                        "type": "string",
                        "pattern": "(?i)^/subscriptions/[0-9A-F]{8}[-][0-9A-F]{4}[-][0-9A-F]{4}[-][0-9A-F]{4}[-][0-9A-F]{12}/resourceGroups/[-\\w\\._\\(\\)]{1,90}/providers/Microsoft\\.Network/networkManagers/[-\\w\\._]{2,64}/networkGroups/[-\\w\\._]{2,64}$"
                      }
                    },
                    "required": [
                      "networkGroupId"
                    ],
                    "additionalProperties": false
                  }
                }
              ],
              "fieldValues": [
                "id",
                "name",
                "type",
                "location",
                "tags"
              ],
              "resourceFunctions": {
                "standard": [
                  "subscription",
                  "resourceGroup"
                ],
                "custom": []
              }
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.Network.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.Network.Data"
          },
          {
            "properties": {
              "namespaces": [
                "Microsoft.Synapse"
              ],
              "policyMode": "Microsoft.Synapse.Data",
              "isBuiltInOnly": true,
              "resourceTypeAliases": [
                {
                  "resourceType": "workspaces/linkedservices",
                  "aliases": [
                    {
                      "name": "Microsoft.Synapse.Data/workspaces/linkedservices/properties.type",
                      "paths": [
                        {
                          "path": "properties.type",
                          "apiVersions": [
                            "2019-06-01-preview"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "effects": [
                {
                  "name": "deny"
                }
              ]
            },
            "id": "/providers/Microsoft.Authorization/dataPolicyManifests/Microsoft.Synapse.Data",
            "type": "Microsoft.Authorization/dataPolicyManifests",
            "name": "Microsoft.Synapse.Data"
          }
        ]
      }
    }
  ],
  "Variables": {
    "AZURE_AUTHORITY_HOST": null,
    "RandomSeed": "1262317344",
    "RESOURCE_MANAGER_URL": null,
    "SUBSCRIPTION_ID": "b6a8bef9-9220-454a-a229-f360b6e9f0f6"
  }
}
